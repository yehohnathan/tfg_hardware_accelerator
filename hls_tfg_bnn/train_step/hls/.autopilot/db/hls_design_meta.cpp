#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("m_axi_WEIGHTS_AWVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_WEIGHTS_AWREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_WEIGHTS_AWADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_WEIGHTS_AWID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_WEIGHTS_AWLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_WEIGHTS_AWSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_WEIGHTS_AWBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_WEIGHTS_AWLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_WEIGHTS_AWCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_WEIGHTS_AWPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_WEIGHTS_AWQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_WEIGHTS_AWREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_WEIGHTS_AWUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_WEIGHTS_WVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_WEIGHTS_WREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_WEIGHTS_WDATA", 32, hls_out, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_WEIGHTS_WSTRB", 4, hls_out, 0, "m_axi", "STRB", 1),
	Port_Property("m_axi_WEIGHTS_WLAST", 1, hls_out, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_WEIGHTS_WID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_WEIGHTS_WUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_WEIGHTS_ARVALID", 1, hls_out, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_WEIGHTS_ARREADY", 1, hls_in, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_WEIGHTS_ARADDR", 64, hls_out, 0, "m_axi", "ADDR", 1),
	Port_Property("m_axi_WEIGHTS_ARID", 1, hls_out, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_WEIGHTS_ARLEN", 8, hls_out, 0, "m_axi", "SIZE", 1),
	Port_Property("m_axi_WEIGHTS_ARSIZE", 3, hls_out, 0, "m_axi", "BURST", 1),
	Port_Property("m_axi_WEIGHTS_ARBURST", 2, hls_out, 0, "m_axi", "LOCK", 1),
	Port_Property("m_axi_WEIGHTS_ARLOCK", 2, hls_out, 0, "m_axi", "CACHE", 1),
	Port_Property("m_axi_WEIGHTS_ARCACHE", 4, hls_out, 0, "m_axi", "PROT", 1),
	Port_Property("m_axi_WEIGHTS_ARPROT", 3, hls_out, 0, "m_axi", "QOS", 1),
	Port_Property("m_axi_WEIGHTS_ARQOS", 4, hls_out, 0, "m_axi", "REGION", 1),
	Port_Property("m_axi_WEIGHTS_ARREGION", 4, hls_out, 0, "m_axi", "USER", 1),
	Port_Property("m_axi_WEIGHTS_ARUSER", 1, hls_out, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_WEIGHTS_RVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_WEIGHTS_RREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_WEIGHTS_RDATA", 32, hls_in, 0, "m_axi", "FIFONUM", 1),
	Port_Property("m_axi_WEIGHTS_RLAST", 1, hls_in, 0, "m_axi", "LAST", 1),
	Port_Property("m_axi_WEIGHTS_RID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_WEIGHTS_RUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("m_axi_WEIGHTS_RRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_WEIGHTS_BVALID", 1, hls_in, 0, "m_axi", "VALID", 1),
	Port_Property("m_axi_WEIGHTS_BREADY", 1, hls_out, 0, "m_axi", "READY", 1),
	Port_Property("m_axi_WEIGHTS_BRESP", 2, hls_in, 0, "m_axi", "RESP", 1),
	Port_Property("m_axi_WEIGHTS_BID", 1, hls_in, 0, "m_axi", "ID", 1),
	Port_Property("m_axi_WEIGHTS_BUSER", 1, hls_in, 0, "m_axi", "DATA", 1),
	Port_Property("img_pos_address0", 6, hls_out, 1, "ap_memory", "mem_address", 1),
	Port_Property("img_pos_ce0", 1, hls_out, 1, "ap_memory", "mem_ce", 1),
	Port_Property("img_pos_q0", 8, hls_in, 1, "ap_memory", "mem_dout", 1),
	Port_Property("img_neg_address0", 6, hls_out, 2, "ap_memory", "mem_address", 1),
	Port_Property("img_neg_ce0", 1, hls_out, 2, "ap_memory", "mem_ce", 1),
	Port_Property("img_neg_q0", 8, hls_in, 2, "ap_memory", "mem_dout", 1),
	Port_Property("s_axi_CTRL_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_AWADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_ARADDR", 5, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_CTRL_BRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("interrupt", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_AWREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_AWADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_WDATA", 32, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_WSTRB", 4, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARVALID", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_ARREADY", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_ARADDR", 6, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_RDATA", 32, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_RRESP", 2, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BVALID", 1, hls_out, -1, "", "", 1),
	Port_Property("s_axi_control_BREADY", 1, hls_in, -1, "", "", 1),
	Port_Property("s_axi_control_BRESP", 2, hls_out, -1, "", "", 1),
};
const char* HLS_Design_Meta::dut_name = "train_step";
