-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity train_step_updateHidden is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    input_0_val : IN STD_LOGIC_VECTOR (7 downto 0);
    input_1_val : IN STD_LOGIC_VECTOR (7 downto 0);
    input_2_val : IN STD_LOGIC_VECTOR (7 downto 0);
    input_3_val : IN STD_LOGIC_VECTOR (7 downto 0);
    input_4_val : IN STD_LOGIC_VECTOR (7 downto 0);
    input_5_val : IN STD_LOGIC_VECTOR (7 downto 0);
    input_6_val : IN STD_LOGIC_VECTOR (7 downto 0);
    input_7_val : IN STD_LOGIC_VECTOR (7 downto 0);
    train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_3 : IN STD_LOGIC_VECTOR (7 downto 0);
    train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_7 : IN STD_LOGIC_VECTOR (7 downto 0);
    W1_0_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_0_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_0_0_o_ap_vld : OUT STD_LOGIC;
    train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_2 : IN STD_LOGIC_VECTOR (7 downto 0);
    train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_1 : IN STD_LOGIC_VECTOR (7 downto 0);
    train_mulmulmulstep_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed : IN STD_LOGIC_VECTOR (7 downto 0);
    train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_6 : IN STD_LOGIC_VECTOR (7 downto 0);
    train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_5 : IN STD_LOGIC_VECTOR (7 downto 0);
    train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_4 : IN STD_LOGIC_VECTOR (7 downto 0);
    W1_1_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_1_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_1_0_o_ap_vld : OUT STD_LOGIC;
    W1_2_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_2_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_2_0_o_ap_vld : OUT STD_LOGIC;
    W1_3_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_3_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_3_0_o_ap_vld : OUT STD_LOGIC;
    W1_4_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_4_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_4_0_o_ap_vld : OUT STD_LOGIC;
    W1_5_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_5_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_5_0_o_ap_vld : OUT STD_LOGIC;
    W1_6_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_6_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_6_0_o_ap_vld : OUT STD_LOGIC;
    W1_7_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_7_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_7_0_o_ap_vld : OUT STD_LOGIC;
    W1_0_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_0_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_0_1_o_ap_vld : OUT STD_LOGIC;
    W1_1_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_1_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_1_1_o_ap_vld : OUT STD_LOGIC;
    W1_2_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_2_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_2_1_o_ap_vld : OUT STD_LOGIC;
    W1_3_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_3_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_3_1_o_ap_vld : OUT STD_LOGIC;
    W1_4_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_4_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_4_1_o_ap_vld : OUT STD_LOGIC;
    W1_5_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_5_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_5_1_o_ap_vld : OUT STD_LOGIC;
    W1_6_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_6_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_6_1_o_ap_vld : OUT STD_LOGIC;
    W1_7_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_7_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_7_1_o_ap_vld : OUT STD_LOGIC;
    W1_0_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_0_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_0_2_o_ap_vld : OUT STD_LOGIC;
    W1_1_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_1_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_1_2_o_ap_vld : OUT STD_LOGIC;
    W1_2_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_2_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_2_2_o_ap_vld : OUT STD_LOGIC;
    W1_3_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_3_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_3_2_o_ap_vld : OUT STD_LOGIC;
    W1_4_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_4_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_4_2_o_ap_vld : OUT STD_LOGIC;
    W1_5_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_5_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_5_2_o_ap_vld : OUT STD_LOGIC;
    W1_6_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_6_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_6_2_o_ap_vld : OUT STD_LOGIC;
    W1_7_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_7_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_7_2_o_ap_vld : OUT STD_LOGIC;
    W1_0_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_0_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_0_3_o_ap_vld : OUT STD_LOGIC;
    W1_1_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_1_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_1_3_o_ap_vld : OUT STD_LOGIC;
    W1_2_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_2_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_2_3_o_ap_vld : OUT STD_LOGIC;
    W1_3_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_3_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_3_3_o_ap_vld : OUT STD_LOGIC;
    W1_4_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_4_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_4_3_o_ap_vld : OUT STD_LOGIC;
    W1_5_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_5_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_5_3_o_ap_vld : OUT STD_LOGIC;
    W1_6_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_6_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_6_3_o_ap_vld : OUT STD_LOGIC;
    W1_7_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
    W1_7_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
    W1_7_3_o_ap_vld : OUT STD_LOGIC );
end;


architecture behav of train_step_updateHidden is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal sext_ln95_1_fu_176_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal sext_ln95_2_fu_180_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln95_3_fu_184_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln95_4_fu_188_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln95_5_fu_192_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln95_6_fu_196_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln95_7_fu_200_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln95_8_fu_204_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln95_9_fu_208_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln95_10_fu_234_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln95_11_fu_248_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln95_12_fu_262_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal select_ln97_fu_529_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_sig_allocacmp_W1_0_0_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_1_fu_544_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_1_0_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_2_fu_559_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_2_0_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_3_fu_574_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_3_0_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_4_fu_589_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_4_0_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_5_fu_604_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_5_0_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_6_fu_619_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_6_0_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_7_fu_634_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_7_0_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_8_fu_649_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_0_1_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_9_fu_664_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_1_1_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_10_fu_679_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_2_1_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_11_fu_694_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_3_1_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_12_fu_709_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_4_1_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_13_fu_724_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_5_1_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_14_fu_739_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_6_1_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_15_fu_754_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_7_1_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_16_fu_769_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_0_2_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_17_fu_784_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_1_2_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_18_fu_799_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_2_2_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_19_fu_814_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_3_2_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_20_fu_829_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_4_2_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_21_fu_844_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_5_2_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_22_fu_859_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_6_2_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_23_fu_874_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_7_2_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_24_fu_889_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_0_3_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_25_fu_904_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_1_3_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_26_fu_919_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_2_3_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_27_fu_934_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_3_3_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_28_fu_949_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_4_3_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_29_fu_964_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_5_3_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_30_fu_979_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_6_3_load : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln97_31_fu_994_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_sig_allocacmp_W1_7_3_load : STD_LOGIC_VECTOR (1 downto 0);
    signal delta_fu_170_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal delta_4_fu_228_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal delta_5_fu_242_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal delta_3_fu_256_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln95_fu_270_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_13_fu_278_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_14_fu_286_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_15_fu_294_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_16_fu_302_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_17_fu_310_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_18_fu_318_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_19_fu_326_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_20_fu_334_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_21_fu_342_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_22_fu_350_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_23_fu_358_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_24_fu_366_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_25_fu_374_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_26_fu_382_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_27_fu_390_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_28_fu_398_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_29_fu_406_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_30_fu_414_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_31_fu_422_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_32_fu_430_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_33_fu_438_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_34_fu_446_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_35_fu_454_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_36_fu_462_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_37_fu_470_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_38_fu_478_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_39_fu_486_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_40_fu_494_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_41_fu_502_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_42_fu_510_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln95_43_fu_518_p0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1194_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_522_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1203_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_1_fu_537_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1212_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_2_fu_552_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1221_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_3_fu_567_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1230_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_4_fu_582_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1239_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_5_fu_597_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1248_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_6_fu_612_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1257_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_7_fu_627_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1266_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_8_fu_642_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1275_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_9_fu_657_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1284_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_10_fu_672_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1293_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_11_fu_687_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1302_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_12_fu_702_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1311_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_13_fu_717_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1320_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_14_fu_732_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1329_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_15_fu_747_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1338_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_16_fu_762_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1347_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_17_fu_777_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1356_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_18_fu_792_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1365_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_19_fu_807_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1374_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_20_fu_822_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1383_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_21_fu_837_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1392_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_22_fu_852_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1401_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_23_fu_867_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1410_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_24_fu_882_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1419_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_25_fu_897_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1428_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_26_fu_912_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1437_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_27_fu_927_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1446_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_28_fu_942_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1455_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_29_fu_957_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1464_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_30_fu_972_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1473_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_31_fu_987_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1194_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1194_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1203_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1203_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1212_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1212_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1221_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1221_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1230_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1230_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1239_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1239_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1248_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1248_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1257_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1257_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1266_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1266_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1275_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1275_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1284_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1284_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1293_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1293_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1302_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1302_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1311_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1311_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1320_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1320_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1329_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1329_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1338_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1338_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1347_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1347_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1356_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1356_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1365_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1365_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1374_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1374_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1383_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1383_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1392_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1392_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1401_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1401_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1410_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1410_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1419_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1419_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1428_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1428_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1437_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1437_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1446_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1446_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1455_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1455_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1464_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1464_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1473_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1473_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to2 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component train_step_mac_muladd_8s_8s_2s_12_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (11 downto 0) );
    end component;



begin
    mac_muladd_8s_8s_2s_12_4_1_U75 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1194_p0,
        din1 => grp_fu_1194_p1,
        din2 => sext_ln95_fu_270_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1194_p3);

    mac_muladd_8s_8s_2s_12_4_1_U76 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1203_p0,
        din1 => grp_fu_1203_p1,
        din2 => sext_ln95_13_fu_278_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1203_p3);

    mac_muladd_8s_8s_2s_12_4_1_U77 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1212_p0,
        din1 => grp_fu_1212_p1,
        din2 => sext_ln95_14_fu_286_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1212_p3);

    mac_muladd_8s_8s_2s_12_4_1_U78 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1221_p0,
        din1 => grp_fu_1221_p1,
        din2 => sext_ln95_15_fu_294_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1221_p3);

    mac_muladd_8s_8s_2s_12_4_1_U79 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1230_p0,
        din1 => grp_fu_1230_p1,
        din2 => sext_ln95_16_fu_302_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1230_p3);

    mac_muladd_8s_8s_2s_12_4_1_U80 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1239_p0,
        din1 => grp_fu_1239_p1,
        din2 => sext_ln95_17_fu_310_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1239_p3);

    mac_muladd_8s_8s_2s_12_4_1_U81 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1248_p0,
        din1 => grp_fu_1248_p1,
        din2 => sext_ln95_18_fu_318_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1248_p3);

    mac_muladd_8s_8s_2s_12_4_1_U82 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1257_p0,
        din1 => grp_fu_1257_p1,
        din2 => sext_ln95_19_fu_326_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1257_p3);

    mac_muladd_8s_8s_2s_12_4_1_U83 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1266_p0,
        din1 => grp_fu_1266_p1,
        din2 => sext_ln95_20_fu_334_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1266_p3);

    mac_muladd_8s_8s_2s_12_4_1_U84 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1275_p0,
        din1 => grp_fu_1275_p1,
        din2 => sext_ln95_21_fu_342_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1275_p3);

    mac_muladd_8s_8s_2s_12_4_1_U85 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1284_p0,
        din1 => grp_fu_1284_p1,
        din2 => sext_ln95_22_fu_350_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1284_p3);

    mac_muladd_8s_8s_2s_12_4_1_U86 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1293_p0,
        din1 => grp_fu_1293_p1,
        din2 => sext_ln95_23_fu_358_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1293_p3);

    mac_muladd_8s_8s_2s_12_4_1_U87 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1302_p0,
        din1 => grp_fu_1302_p1,
        din2 => sext_ln95_24_fu_366_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1302_p3);

    mac_muladd_8s_8s_2s_12_4_1_U88 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1311_p0,
        din1 => grp_fu_1311_p1,
        din2 => sext_ln95_25_fu_374_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1311_p3);

    mac_muladd_8s_8s_2s_12_4_1_U89 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1320_p0,
        din1 => grp_fu_1320_p1,
        din2 => sext_ln95_26_fu_382_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1320_p3);

    mac_muladd_8s_8s_2s_12_4_1_U90 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1329_p0,
        din1 => grp_fu_1329_p1,
        din2 => sext_ln95_27_fu_390_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1329_p3);

    mac_muladd_8s_8s_2s_12_4_1_U91 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1338_p0,
        din1 => grp_fu_1338_p1,
        din2 => sext_ln95_28_fu_398_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1338_p3);

    mac_muladd_8s_8s_2s_12_4_1_U92 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1347_p0,
        din1 => grp_fu_1347_p1,
        din2 => sext_ln95_29_fu_406_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1347_p3);

    mac_muladd_8s_8s_2s_12_4_1_U93 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1356_p0,
        din1 => grp_fu_1356_p1,
        din2 => sext_ln95_30_fu_414_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1356_p3);

    mac_muladd_8s_8s_2s_12_4_1_U94 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1365_p0,
        din1 => grp_fu_1365_p1,
        din2 => sext_ln95_31_fu_422_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1365_p3);

    mac_muladd_8s_8s_2s_12_4_1_U95 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1374_p0,
        din1 => grp_fu_1374_p1,
        din2 => sext_ln95_32_fu_430_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1374_p3);

    mac_muladd_8s_8s_2s_12_4_1_U96 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1383_p0,
        din1 => grp_fu_1383_p1,
        din2 => sext_ln95_33_fu_438_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1383_p3);

    mac_muladd_8s_8s_2s_12_4_1_U97 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1392_p0,
        din1 => grp_fu_1392_p1,
        din2 => sext_ln95_34_fu_446_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1392_p3);

    mac_muladd_8s_8s_2s_12_4_1_U98 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1401_p0,
        din1 => grp_fu_1401_p1,
        din2 => sext_ln95_35_fu_454_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1401_p3);

    mac_muladd_8s_8s_2s_12_4_1_U99 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1410_p0,
        din1 => grp_fu_1410_p1,
        din2 => sext_ln95_36_fu_462_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1410_p3);

    mac_muladd_8s_8s_2s_12_4_1_U100 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1419_p0,
        din1 => grp_fu_1419_p1,
        din2 => sext_ln95_37_fu_470_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1419_p3);

    mac_muladd_8s_8s_2s_12_4_1_U101 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1428_p0,
        din1 => grp_fu_1428_p1,
        din2 => sext_ln95_38_fu_478_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1428_p3);

    mac_muladd_8s_8s_2s_12_4_1_U102 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1437_p0,
        din1 => grp_fu_1437_p1,
        din2 => sext_ln95_39_fu_486_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1437_p3);

    mac_muladd_8s_8s_2s_12_4_1_U103 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1446_p0,
        din1 => grp_fu_1446_p1,
        din2 => sext_ln95_40_fu_494_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1446_p3);

    mac_muladd_8s_8s_2s_12_4_1_U104 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1455_p0,
        din1 => grp_fu_1455_p1,
        din2 => sext_ln95_41_fu_502_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1455_p3);

    mac_muladd_8s_8s_2s_12_4_1_U105 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1464_p0,
        din1 => grp_fu_1464_p1,
        din2 => sext_ln95_42_fu_510_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1464_p3);

    mac_muladd_8s_8s_2s_12_4_1_U106 : component train_step_mac_muladd_8s_8s_2s_12_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 2,
        dout_WIDTH => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1473_p0,
        din1 => grp_fu_1473_p1,
        din2 => sext_ln95_43_fu_518_p0,
        ce => ap_const_logic_1,
        dout => grp_fu_1473_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;

    W1_0_0_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_0_0_i, select_ln97_fu_529_p3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_0_0_o <= select_ln97_fu_529_p3;
        else 
            W1_0_0_o <= W1_0_0_i;
        end if; 
    end process;


    W1_0_0_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_0_0_o_ap_vld <= ap_const_logic_1;
        else 
            W1_0_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_0_1_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_0_1_i, ap_block_pp0_stage0, select_ln97_8_fu_649_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_0_1_o <= select_ln97_8_fu_649_p3;
        else 
            W1_0_1_o <= W1_0_1_i;
        end if; 
    end process;


    W1_0_1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_0_1_o_ap_vld <= ap_const_logic_1;
        else 
            W1_0_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_0_2_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_0_2_i, ap_block_pp0_stage0, select_ln97_16_fu_769_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_0_2_o <= select_ln97_16_fu_769_p3;
        else 
            W1_0_2_o <= W1_0_2_i;
        end if; 
    end process;


    W1_0_2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_0_2_o_ap_vld <= ap_const_logic_1;
        else 
            W1_0_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_0_3_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_0_3_i, ap_block_pp0_stage0, select_ln97_24_fu_889_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_0_3_o <= select_ln97_24_fu_889_p3;
        else 
            W1_0_3_o <= W1_0_3_i;
        end if; 
    end process;


    W1_0_3_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_0_3_o_ap_vld <= ap_const_logic_1;
        else 
            W1_0_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_1_0_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_1_0_i, ap_block_pp0_stage0, select_ln97_1_fu_544_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_1_0_o <= select_ln97_1_fu_544_p3;
        else 
            W1_1_0_o <= W1_1_0_i;
        end if; 
    end process;


    W1_1_0_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_1_0_o_ap_vld <= ap_const_logic_1;
        else 
            W1_1_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_1_1_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_1_1_i, ap_block_pp0_stage0, select_ln97_9_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_1_1_o <= select_ln97_9_fu_664_p3;
        else 
            W1_1_1_o <= W1_1_1_i;
        end if; 
    end process;


    W1_1_1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_1_1_o_ap_vld <= ap_const_logic_1;
        else 
            W1_1_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_1_2_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_1_2_i, ap_block_pp0_stage0, select_ln97_17_fu_784_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_1_2_o <= select_ln97_17_fu_784_p3;
        else 
            W1_1_2_o <= W1_1_2_i;
        end if; 
    end process;


    W1_1_2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_1_2_o_ap_vld <= ap_const_logic_1;
        else 
            W1_1_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_1_3_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_1_3_i, ap_block_pp0_stage0, select_ln97_25_fu_904_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_1_3_o <= select_ln97_25_fu_904_p3;
        else 
            W1_1_3_o <= W1_1_3_i;
        end if; 
    end process;


    W1_1_3_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_1_3_o_ap_vld <= ap_const_logic_1;
        else 
            W1_1_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_2_0_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_2_0_i, ap_block_pp0_stage0, select_ln97_2_fu_559_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_2_0_o <= select_ln97_2_fu_559_p3;
        else 
            W1_2_0_o <= W1_2_0_i;
        end if; 
    end process;


    W1_2_0_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_2_0_o_ap_vld <= ap_const_logic_1;
        else 
            W1_2_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_2_1_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_2_1_i, ap_block_pp0_stage0, select_ln97_10_fu_679_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_2_1_o <= select_ln97_10_fu_679_p3;
        else 
            W1_2_1_o <= W1_2_1_i;
        end if; 
    end process;


    W1_2_1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_2_1_o_ap_vld <= ap_const_logic_1;
        else 
            W1_2_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_2_2_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_2_2_i, ap_block_pp0_stage0, select_ln97_18_fu_799_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_2_2_o <= select_ln97_18_fu_799_p3;
        else 
            W1_2_2_o <= W1_2_2_i;
        end if; 
    end process;


    W1_2_2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_2_2_o_ap_vld <= ap_const_logic_1;
        else 
            W1_2_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_2_3_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_2_3_i, ap_block_pp0_stage0, select_ln97_26_fu_919_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_2_3_o <= select_ln97_26_fu_919_p3;
        else 
            W1_2_3_o <= W1_2_3_i;
        end if; 
    end process;


    W1_2_3_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_2_3_o_ap_vld <= ap_const_logic_1;
        else 
            W1_2_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_3_0_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_3_0_i, ap_block_pp0_stage0, select_ln97_3_fu_574_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_3_0_o <= select_ln97_3_fu_574_p3;
        else 
            W1_3_0_o <= W1_3_0_i;
        end if; 
    end process;


    W1_3_0_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_3_0_o_ap_vld <= ap_const_logic_1;
        else 
            W1_3_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_3_1_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_3_1_i, ap_block_pp0_stage0, select_ln97_11_fu_694_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_3_1_o <= select_ln97_11_fu_694_p3;
        else 
            W1_3_1_o <= W1_3_1_i;
        end if; 
    end process;


    W1_3_1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_3_1_o_ap_vld <= ap_const_logic_1;
        else 
            W1_3_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_3_2_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_3_2_i, ap_block_pp0_stage0, select_ln97_19_fu_814_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_3_2_o <= select_ln97_19_fu_814_p3;
        else 
            W1_3_2_o <= W1_3_2_i;
        end if; 
    end process;


    W1_3_2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_3_2_o_ap_vld <= ap_const_logic_1;
        else 
            W1_3_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_3_3_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_3_3_i, ap_block_pp0_stage0, select_ln97_27_fu_934_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_3_3_o <= select_ln97_27_fu_934_p3;
        else 
            W1_3_3_o <= W1_3_3_i;
        end if; 
    end process;


    W1_3_3_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_3_3_o_ap_vld <= ap_const_logic_1;
        else 
            W1_3_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_4_0_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_4_0_i, ap_block_pp0_stage0, select_ln97_4_fu_589_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_4_0_o <= select_ln97_4_fu_589_p3;
        else 
            W1_4_0_o <= W1_4_0_i;
        end if; 
    end process;


    W1_4_0_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_4_0_o_ap_vld <= ap_const_logic_1;
        else 
            W1_4_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_4_1_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_4_1_i, ap_block_pp0_stage0, select_ln97_12_fu_709_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_4_1_o <= select_ln97_12_fu_709_p3;
        else 
            W1_4_1_o <= W1_4_1_i;
        end if; 
    end process;


    W1_4_1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_4_1_o_ap_vld <= ap_const_logic_1;
        else 
            W1_4_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_4_2_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_4_2_i, ap_block_pp0_stage0, select_ln97_20_fu_829_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_4_2_o <= select_ln97_20_fu_829_p3;
        else 
            W1_4_2_o <= W1_4_2_i;
        end if; 
    end process;


    W1_4_2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_4_2_o_ap_vld <= ap_const_logic_1;
        else 
            W1_4_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_4_3_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_4_3_i, ap_block_pp0_stage0, select_ln97_28_fu_949_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_4_3_o <= select_ln97_28_fu_949_p3;
        else 
            W1_4_3_o <= W1_4_3_i;
        end if; 
    end process;


    W1_4_3_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_4_3_o_ap_vld <= ap_const_logic_1;
        else 
            W1_4_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_5_0_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_5_0_i, ap_block_pp0_stage0, select_ln97_5_fu_604_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_5_0_o <= select_ln97_5_fu_604_p3;
        else 
            W1_5_0_o <= W1_5_0_i;
        end if; 
    end process;


    W1_5_0_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_5_0_o_ap_vld <= ap_const_logic_1;
        else 
            W1_5_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_5_1_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_5_1_i, ap_block_pp0_stage0, select_ln97_13_fu_724_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_5_1_o <= select_ln97_13_fu_724_p3;
        else 
            W1_5_1_o <= W1_5_1_i;
        end if; 
    end process;


    W1_5_1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_5_1_o_ap_vld <= ap_const_logic_1;
        else 
            W1_5_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_5_2_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_5_2_i, ap_block_pp0_stage0, select_ln97_21_fu_844_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_5_2_o <= select_ln97_21_fu_844_p3;
        else 
            W1_5_2_o <= W1_5_2_i;
        end if; 
    end process;


    W1_5_2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_5_2_o_ap_vld <= ap_const_logic_1;
        else 
            W1_5_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_5_3_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_5_3_i, ap_block_pp0_stage0, select_ln97_29_fu_964_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_5_3_o <= select_ln97_29_fu_964_p3;
        else 
            W1_5_3_o <= W1_5_3_i;
        end if; 
    end process;


    W1_5_3_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_5_3_o_ap_vld <= ap_const_logic_1;
        else 
            W1_5_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_6_0_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_6_0_i, ap_block_pp0_stage0, select_ln97_6_fu_619_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_6_0_o <= select_ln97_6_fu_619_p3;
        else 
            W1_6_0_o <= W1_6_0_i;
        end if; 
    end process;


    W1_6_0_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_6_0_o_ap_vld <= ap_const_logic_1;
        else 
            W1_6_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_6_1_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_6_1_i, ap_block_pp0_stage0, select_ln97_14_fu_739_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_6_1_o <= select_ln97_14_fu_739_p3;
        else 
            W1_6_1_o <= W1_6_1_i;
        end if; 
    end process;


    W1_6_1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_6_1_o_ap_vld <= ap_const_logic_1;
        else 
            W1_6_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_6_2_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_6_2_i, ap_block_pp0_stage0, select_ln97_22_fu_859_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_6_2_o <= select_ln97_22_fu_859_p3;
        else 
            W1_6_2_o <= W1_6_2_i;
        end if; 
    end process;


    W1_6_2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_6_2_o_ap_vld <= ap_const_logic_1;
        else 
            W1_6_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_6_3_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_6_3_i, ap_block_pp0_stage0, select_ln97_30_fu_979_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_6_3_o <= select_ln97_30_fu_979_p3;
        else 
            W1_6_3_o <= W1_6_3_i;
        end if; 
    end process;


    W1_6_3_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_6_3_o_ap_vld <= ap_const_logic_1;
        else 
            W1_6_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_7_0_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_7_0_i, ap_block_pp0_stage0, select_ln97_7_fu_634_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_7_0_o <= select_ln97_7_fu_634_p3;
        else 
            W1_7_0_o <= W1_7_0_i;
        end if; 
    end process;


    W1_7_0_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_7_0_o_ap_vld <= ap_const_logic_1;
        else 
            W1_7_0_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_7_1_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_7_1_i, ap_block_pp0_stage0, select_ln97_15_fu_754_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_7_1_o <= select_ln97_15_fu_754_p3;
        else 
            W1_7_1_o <= W1_7_1_i;
        end if; 
    end process;


    W1_7_1_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_7_1_o_ap_vld <= ap_const_logic_1;
        else 
            W1_7_1_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_7_2_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_7_2_i, ap_block_pp0_stage0, select_ln97_23_fu_874_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_7_2_o <= select_ln97_23_fu_874_p3;
        else 
            W1_7_2_o <= W1_7_2_i;
        end if; 
    end process;


    W1_7_2_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_7_2_o_ap_vld <= ap_const_logic_1;
        else 
            W1_7_2_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;


    W1_7_3_o_assign_proc : process(ap_enable_reg_pp0_iter3, W1_7_3_i, ap_block_pp0_stage0, select_ln97_31_fu_994_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_7_3_o <= select_ln97_31_fu_994_p3;
        else 
            W1_7_3_o <= W1_7_3_i;
        end if; 
    end process;


    W1_7_3_o_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            W1_7_3_o_ap_vld <= ap_const_logic_1;
        else 
            W1_7_3_o_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_done_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3)
    begin
        if (((ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to2_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2)
    begin
        if (((ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to2 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to2)
    begin
        if (((ap_idle_pp0_0to2 = ap_const_logic_1) and (ap_start = ap_const_logic_0))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_W1_0_0_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_0_0_i, select_ln97_fu_529_p3, ap_block_pp0_stage0)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_0_0_load <= select_ln97_fu_529_p3;
        else 
            ap_sig_allocacmp_W1_0_0_load <= W1_0_0_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_0_1_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_0_1_i, ap_block_pp0_stage0, select_ln97_8_fu_649_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_0_1_load <= select_ln97_8_fu_649_p3;
        else 
            ap_sig_allocacmp_W1_0_1_load <= W1_0_1_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_0_2_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_0_2_i, ap_block_pp0_stage0, select_ln97_16_fu_769_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_0_2_load <= select_ln97_16_fu_769_p3;
        else 
            ap_sig_allocacmp_W1_0_2_load <= W1_0_2_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_0_3_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_0_3_i, ap_block_pp0_stage0, select_ln97_24_fu_889_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_0_3_load <= select_ln97_24_fu_889_p3;
        else 
            ap_sig_allocacmp_W1_0_3_load <= W1_0_3_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_1_0_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_1_0_i, ap_block_pp0_stage0, select_ln97_1_fu_544_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_1_0_load <= select_ln97_1_fu_544_p3;
        else 
            ap_sig_allocacmp_W1_1_0_load <= W1_1_0_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_1_1_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_1_1_i, ap_block_pp0_stage0, select_ln97_9_fu_664_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_1_1_load <= select_ln97_9_fu_664_p3;
        else 
            ap_sig_allocacmp_W1_1_1_load <= W1_1_1_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_1_2_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_1_2_i, ap_block_pp0_stage0, select_ln97_17_fu_784_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_1_2_load <= select_ln97_17_fu_784_p3;
        else 
            ap_sig_allocacmp_W1_1_2_load <= W1_1_2_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_1_3_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_1_3_i, ap_block_pp0_stage0, select_ln97_25_fu_904_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_1_3_load <= select_ln97_25_fu_904_p3;
        else 
            ap_sig_allocacmp_W1_1_3_load <= W1_1_3_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_2_0_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_2_0_i, ap_block_pp0_stage0, select_ln97_2_fu_559_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_2_0_load <= select_ln97_2_fu_559_p3;
        else 
            ap_sig_allocacmp_W1_2_0_load <= W1_2_0_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_2_1_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_2_1_i, ap_block_pp0_stage0, select_ln97_10_fu_679_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_2_1_load <= select_ln97_10_fu_679_p3;
        else 
            ap_sig_allocacmp_W1_2_1_load <= W1_2_1_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_2_2_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_2_2_i, ap_block_pp0_stage0, select_ln97_18_fu_799_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_2_2_load <= select_ln97_18_fu_799_p3;
        else 
            ap_sig_allocacmp_W1_2_2_load <= W1_2_2_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_2_3_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_2_3_i, ap_block_pp0_stage0, select_ln97_26_fu_919_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_2_3_load <= select_ln97_26_fu_919_p3;
        else 
            ap_sig_allocacmp_W1_2_3_load <= W1_2_3_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_3_0_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_3_0_i, ap_block_pp0_stage0, select_ln97_3_fu_574_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_3_0_load <= select_ln97_3_fu_574_p3;
        else 
            ap_sig_allocacmp_W1_3_0_load <= W1_3_0_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_3_1_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_3_1_i, ap_block_pp0_stage0, select_ln97_11_fu_694_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_3_1_load <= select_ln97_11_fu_694_p3;
        else 
            ap_sig_allocacmp_W1_3_1_load <= W1_3_1_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_3_2_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_3_2_i, ap_block_pp0_stage0, select_ln97_19_fu_814_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_3_2_load <= select_ln97_19_fu_814_p3;
        else 
            ap_sig_allocacmp_W1_3_2_load <= W1_3_2_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_3_3_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_3_3_i, ap_block_pp0_stage0, select_ln97_27_fu_934_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_3_3_load <= select_ln97_27_fu_934_p3;
        else 
            ap_sig_allocacmp_W1_3_3_load <= W1_3_3_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_4_0_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_4_0_i, ap_block_pp0_stage0, select_ln97_4_fu_589_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_4_0_load <= select_ln97_4_fu_589_p3;
        else 
            ap_sig_allocacmp_W1_4_0_load <= W1_4_0_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_4_1_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_4_1_i, ap_block_pp0_stage0, select_ln97_12_fu_709_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_4_1_load <= select_ln97_12_fu_709_p3;
        else 
            ap_sig_allocacmp_W1_4_1_load <= W1_4_1_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_4_2_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_4_2_i, ap_block_pp0_stage0, select_ln97_20_fu_829_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_4_2_load <= select_ln97_20_fu_829_p3;
        else 
            ap_sig_allocacmp_W1_4_2_load <= W1_4_2_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_4_3_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_4_3_i, ap_block_pp0_stage0, select_ln97_28_fu_949_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_4_3_load <= select_ln97_28_fu_949_p3;
        else 
            ap_sig_allocacmp_W1_4_3_load <= W1_4_3_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_5_0_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_5_0_i, ap_block_pp0_stage0, select_ln97_5_fu_604_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_5_0_load <= select_ln97_5_fu_604_p3;
        else 
            ap_sig_allocacmp_W1_5_0_load <= W1_5_0_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_5_1_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_5_1_i, ap_block_pp0_stage0, select_ln97_13_fu_724_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_5_1_load <= select_ln97_13_fu_724_p3;
        else 
            ap_sig_allocacmp_W1_5_1_load <= W1_5_1_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_5_2_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_5_2_i, ap_block_pp0_stage0, select_ln97_21_fu_844_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_5_2_load <= select_ln97_21_fu_844_p3;
        else 
            ap_sig_allocacmp_W1_5_2_load <= W1_5_2_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_5_3_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_5_3_i, ap_block_pp0_stage0, select_ln97_29_fu_964_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_5_3_load <= select_ln97_29_fu_964_p3;
        else 
            ap_sig_allocacmp_W1_5_3_load <= W1_5_3_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_6_0_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_6_0_i, ap_block_pp0_stage0, select_ln97_6_fu_619_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_6_0_load <= select_ln97_6_fu_619_p3;
        else 
            ap_sig_allocacmp_W1_6_0_load <= W1_6_0_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_6_1_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_6_1_i, ap_block_pp0_stage0, select_ln97_14_fu_739_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_6_1_load <= select_ln97_14_fu_739_p3;
        else 
            ap_sig_allocacmp_W1_6_1_load <= W1_6_1_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_6_2_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_6_2_i, ap_block_pp0_stage0, select_ln97_22_fu_859_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_6_2_load <= select_ln97_22_fu_859_p3;
        else 
            ap_sig_allocacmp_W1_6_2_load <= W1_6_2_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_6_3_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_6_3_i, ap_block_pp0_stage0, select_ln97_30_fu_979_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_6_3_load <= select_ln97_30_fu_979_p3;
        else 
            ap_sig_allocacmp_W1_6_3_load <= W1_6_3_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_7_0_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_7_0_i, ap_block_pp0_stage0, select_ln97_7_fu_634_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_7_0_load <= select_ln97_7_fu_634_p3;
        else 
            ap_sig_allocacmp_W1_7_0_load <= W1_7_0_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_7_1_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_7_1_i, ap_block_pp0_stage0, select_ln97_15_fu_754_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_7_1_load <= select_ln97_15_fu_754_p3;
        else 
            ap_sig_allocacmp_W1_7_1_load <= W1_7_1_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_7_2_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_7_2_i, ap_block_pp0_stage0, select_ln97_23_fu_874_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_7_2_load <= select_ln97_23_fu_874_p3;
        else 
            ap_sig_allocacmp_W1_7_2_load <= W1_7_2_i;
        end if; 
    end process;


    ap_sig_allocacmp_W1_7_3_load_assign_proc : process(ap_enable_reg_pp0_iter3, W1_7_3_i, ap_block_pp0_stage0, select_ln97_31_fu_994_p3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            ap_sig_allocacmp_W1_7_3_load <= select_ln97_31_fu_994_p3;
        else 
            ap_sig_allocacmp_W1_7_3_load <= W1_7_3_i;
        end if; 
    end process;

    delta_3_fu_256_p2 <= std_logic_vector(unsigned(train_mulmulmulstep_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed) - unsigned(train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_4));
    delta_4_fu_228_p2 <= std_logic_vector(unsigned(train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_2) - unsigned(train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_6));
    delta_5_fu_242_p2 <= std_logic_vector(unsigned(train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_1) - unsigned(train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_5));
    delta_fu_170_p2 <= std_logic_vector(unsigned(train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_3) - unsigned(train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_7));
    grp_fu_1194_p0 <= sext_ln95_1_fu_176_p1(8 - 1 downto 0);
    grp_fu_1194_p1 <= sext_ln95_2_fu_180_p1(8 - 1 downto 0);
    grp_fu_1203_p0 <= sext_ln95_1_fu_176_p1(8 - 1 downto 0);
    grp_fu_1203_p1 <= sext_ln95_3_fu_184_p1(8 - 1 downto 0);
    grp_fu_1212_p0 <= sext_ln95_1_fu_176_p1(8 - 1 downto 0);
    grp_fu_1212_p1 <= sext_ln95_4_fu_188_p1(8 - 1 downto 0);
    grp_fu_1221_p0 <= sext_ln95_1_fu_176_p1(8 - 1 downto 0);
    grp_fu_1221_p1 <= sext_ln95_5_fu_192_p1(8 - 1 downto 0);
    grp_fu_1230_p0 <= sext_ln95_1_fu_176_p1(8 - 1 downto 0);
    grp_fu_1230_p1 <= sext_ln95_6_fu_196_p1(8 - 1 downto 0);
    grp_fu_1239_p0 <= sext_ln95_1_fu_176_p1(8 - 1 downto 0);
    grp_fu_1239_p1 <= sext_ln95_7_fu_200_p1(8 - 1 downto 0);
    grp_fu_1248_p0 <= sext_ln95_1_fu_176_p1(8 - 1 downto 0);
    grp_fu_1248_p1 <= sext_ln95_8_fu_204_p1(8 - 1 downto 0);
    grp_fu_1257_p0 <= sext_ln95_1_fu_176_p1(8 - 1 downto 0);
    grp_fu_1257_p1 <= sext_ln95_9_fu_208_p1(8 - 1 downto 0);
    grp_fu_1266_p0 <= sext_ln95_10_fu_234_p1(8 - 1 downto 0);
    grp_fu_1266_p1 <= sext_ln95_2_fu_180_p1(8 - 1 downto 0);
    grp_fu_1275_p0 <= sext_ln95_10_fu_234_p1(8 - 1 downto 0);
    grp_fu_1275_p1 <= sext_ln95_3_fu_184_p1(8 - 1 downto 0);
    grp_fu_1284_p0 <= sext_ln95_10_fu_234_p1(8 - 1 downto 0);
    grp_fu_1284_p1 <= sext_ln95_4_fu_188_p1(8 - 1 downto 0);
    grp_fu_1293_p0 <= sext_ln95_10_fu_234_p1(8 - 1 downto 0);
    grp_fu_1293_p1 <= sext_ln95_5_fu_192_p1(8 - 1 downto 0);
    grp_fu_1302_p0 <= sext_ln95_10_fu_234_p1(8 - 1 downto 0);
    grp_fu_1302_p1 <= sext_ln95_6_fu_196_p1(8 - 1 downto 0);
    grp_fu_1311_p0 <= sext_ln95_10_fu_234_p1(8 - 1 downto 0);
    grp_fu_1311_p1 <= sext_ln95_7_fu_200_p1(8 - 1 downto 0);
    grp_fu_1320_p0 <= sext_ln95_10_fu_234_p1(8 - 1 downto 0);
    grp_fu_1320_p1 <= sext_ln95_8_fu_204_p1(8 - 1 downto 0);
    grp_fu_1329_p0 <= sext_ln95_10_fu_234_p1(8 - 1 downto 0);
    grp_fu_1329_p1 <= sext_ln95_9_fu_208_p1(8 - 1 downto 0);
    grp_fu_1338_p0 <= sext_ln95_11_fu_248_p1(8 - 1 downto 0);
    grp_fu_1338_p1 <= sext_ln95_2_fu_180_p1(8 - 1 downto 0);
    grp_fu_1347_p0 <= sext_ln95_11_fu_248_p1(8 - 1 downto 0);
    grp_fu_1347_p1 <= sext_ln95_3_fu_184_p1(8 - 1 downto 0);
    grp_fu_1356_p0 <= sext_ln95_11_fu_248_p1(8 - 1 downto 0);
    grp_fu_1356_p1 <= sext_ln95_4_fu_188_p1(8 - 1 downto 0);
    grp_fu_1365_p0 <= sext_ln95_11_fu_248_p1(8 - 1 downto 0);
    grp_fu_1365_p1 <= sext_ln95_5_fu_192_p1(8 - 1 downto 0);
    grp_fu_1374_p0 <= sext_ln95_11_fu_248_p1(8 - 1 downto 0);
    grp_fu_1374_p1 <= sext_ln95_6_fu_196_p1(8 - 1 downto 0);
    grp_fu_1383_p0 <= sext_ln95_11_fu_248_p1(8 - 1 downto 0);
    grp_fu_1383_p1 <= sext_ln95_7_fu_200_p1(8 - 1 downto 0);
    grp_fu_1392_p0 <= sext_ln95_11_fu_248_p1(8 - 1 downto 0);
    grp_fu_1392_p1 <= sext_ln95_8_fu_204_p1(8 - 1 downto 0);
    grp_fu_1401_p0 <= sext_ln95_11_fu_248_p1(8 - 1 downto 0);
    grp_fu_1401_p1 <= sext_ln95_9_fu_208_p1(8 - 1 downto 0);
    grp_fu_1410_p0 <= sext_ln95_12_fu_262_p1(8 - 1 downto 0);
    grp_fu_1410_p1 <= sext_ln95_2_fu_180_p1(8 - 1 downto 0);
    grp_fu_1419_p0 <= sext_ln95_12_fu_262_p1(8 - 1 downto 0);
    grp_fu_1419_p1 <= sext_ln95_3_fu_184_p1(8 - 1 downto 0);
    grp_fu_1428_p0 <= sext_ln95_12_fu_262_p1(8 - 1 downto 0);
    grp_fu_1428_p1 <= sext_ln95_4_fu_188_p1(8 - 1 downto 0);
    grp_fu_1437_p0 <= sext_ln95_12_fu_262_p1(8 - 1 downto 0);
    grp_fu_1437_p1 <= sext_ln95_5_fu_192_p1(8 - 1 downto 0);
    grp_fu_1446_p0 <= sext_ln95_12_fu_262_p1(8 - 1 downto 0);
    grp_fu_1446_p1 <= sext_ln95_6_fu_196_p1(8 - 1 downto 0);
    grp_fu_1455_p0 <= sext_ln95_12_fu_262_p1(8 - 1 downto 0);
    grp_fu_1455_p1 <= sext_ln95_7_fu_200_p1(8 - 1 downto 0);
    grp_fu_1464_p0 <= sext_ln95_12_fu_262_p1(8 - 1 downto 0);
    grp_fu_1464_p1 <= sext_ln95_8_fu_204_p1(8 - 1 downto 0);
    grp_fu_1473_p0 <= sext_ln95_12_fu_262_p1(8 - 1 downto 0);
    grp_fu_1473_p1 <= sext_ln95_9_fu_208_p1(8 - 1 downto 0);
    select_ln97_10_fu_679_p3 <= 
        ap_const_lv2_3 when (tmp_10_fu_672_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_11_fu_694_p3 <= 
        ap_const_lv2_3 when (tmp_11_fu_687_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_12_fu_709_p3 <= 
        ap_const_lv2_3 when (tmp_12_fu_702_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_13_fu_724_p3 <= 
        ap_const_lv2_3 when (tmp_13_fu_717_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_14_fu_739_p3 <= 
        ap_const_lv2_3 when (tmp_14_fu_732_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_15_fu_754_p3 <= 
        ap_const_lv2_3 when (tmp_15_fu_747_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_16_fu_769_p3 <= 
        ap_const_lv2_3 when (tmp_16_fu_762_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_17_fu_784_p3 <= 
        ap_const_lv2_3 when (tmp_17_fu_777_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_18_fu_799_p3 <= 
        ap_const_lv2_3 when (tmp_18_fu_792_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_19_fu_814_p3 <= 
        ap_const_lv2_3 when (tmp_19_fu_807_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_1_fu_544_p3 <= 
        ap_const_lv2_3 when (tmp_1_fu_537_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_20_fu_829_p3 <= 
        ap_const_lv2_3 when (tmp_20_fu_822_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_21_fu_844_p3 <= 
        ap_const_lv2_3 when (tmp_21_fu_837_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_22_fu_859_p3 <= 
        ap_const_lv2_3 when (tmp_22_fu_852_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_23_fu_874_p3 <= 
        ap_const_lv2_3 when (tmp_23_fu_867_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_24_fu_889_p3 <= 
        ap_const_lv2_3 when (tmp_24_fu_882_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_25_fu_904_p3 <= 
        ap_const_lv2_3 when (tmp_25_fu_897_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_26_fu_919_p3 <= 
        ap_const_lv2_3 when (tmp_26_fu_912_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_27_fu_934_p3 <= 
        ap_const_lv2_3 when (tmp_27_fu_927_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_28_fu_949_p3 <= 
        ap_const_lv2_3 when (tmp_28_fu_942_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_29_fu_964_p3 <= 
        ap_const_lv2_3 when (tmp_29_fu_957_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_2_fu_559_p3 <= 
        ap_const_lv2_3 when (tmp_2_fu_552_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_30_fu_979_p3 <= 
        ap_const_lv2_3 when (tmp_30_fu_972_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_31_fu_994_p3 <= 
        ap_const_lv2_3 when (tmp_31_fu_987_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_3_fu_574_p3 <= 
        ap_const_lv2_3 when (tmp_3_fu_567_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_4_fu_589_p3 <= 
        ap_const_lv2_3 when (tmp_4_fu_582_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_5_fu_604_p3 <= 
        ap_const_lv2_3 when (tmp_5_fu_597_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_6_fu_619_p3 <= 
        ap_const_lv2_3 when (tmp_6_fu_612_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_7_fu_634_p3 <= 
        ap_const_lv2_3 when (tmp_7_fu_627_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_8_fu_649_p3 <= 
        ap_const_lv2_3 when (tmp_8_fu_642_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_9_fu_664_p3 <= 
        ap_const_lv2_3 when (tmp_9_fu_657_p3(0) = '1') else 
        ap_const_lv2_1;
    select_ln97_fu_529_p3 <= 
        ap_const_lv2_3 when (tmp_fu_522_p3(0) = '1') else 
        ap_const_lv2_1;
        sext_ln95_10_fu_234_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(delta_4_fu_228_p2),12));

        sext_ln95_11_fu_248_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(delta_5_fu_242_p2),12));

        sext_ln95_12_fu_262_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(delta_3_fu_256_p2),12));

    sext_ln95_13_fu_278_p0 <= ap_sig_allocacmp_W1_1_0_load;
    sext_ln95_14_fu_286_p0 <= ap_sig_allocacmp_W1_2_0_load;
    sext_ln95_15_fu_294_p0 <= ap_sig_allocacmp_W1_3_0_load;
    sext_ln95_16_fu_302_p0 <= ap_sig_allocacmp_W1_4_0_load;
    sext_ln95_17_fu_310_p0 <= ap_sig_allocacmp_W1_5_0_load;
    sext_ln95_18_fu_318_p0 <= ap_sig_allocacmp_W1_6_0_load;
    sext_ln95_19_fu_326_p0 <= ap_sig_allocacmp_W1_7_0_load;
        sext_ln95_1_fu_176_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(delta_fu_170_p2),12));

    sext_ln95_20_fu_334_p0 <= ap_sig_allocacmp_W1_0_1_load;
    sext_ln95_21_fu_342_p0 <= ap_sig_allocacmp_W1_1_1_load;
    sext_ln95_22_fu_350_p0 <= ap_sig_allocacmp_W1_2_1_load;
    sext_ln95_23_fu_358_p0 <= ap_sig_allocacmp_W1_3_1_load;
    sext_ln95_24_fu_366_p0 <= ap_sig_allocacmp_W1_4_1_load;
    sext_ln95_25_fu_374_p0 <= ap_sig_allocacmp_W1_5_1_load;
    sext_ln95_26_fu_382_p0 <= ap_sig_allocacmp_W1_6_1_load;
    sext_ln95_27_fu_390_p0 <= ap_sig_allocacmp_W1_7_1_load;
    sext_ln95_28_fu_398_p0 <= ap_sig_allocacmp_W1_0_2_load;
    sext_ln95_29_fu_406_p0 <= ap_sig_allocacmp_W1_1_2_load;
        sext_ln95_2_fu_180_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_0_val),12));

    sext_ln95_30_fu_414_p0 <= ap_sig_allocacmp_W1_2_2_load;
    sext_ln95_31_fu_422_p0 <= ap_sig_allocacmp_W1_3_2_load;
    sext_ln95_32_fu_430_p0 <= ap_sig_allocacmp_W1_4_2_load;
    sext_ln95_33_fu_438_p0 <= ap_sig_allocacmp_W1_5_2_load;
    sext_ln95_34_fu_446_p0 <= ap_sig_allocacmp_W1_6_2_load;
    sext_ln95_35_fu_454_p0 <= ap_sig_allocacmp_W1_7_2_load;
    sext_ln95_36_fu_462_p0 <= ap_sig_allocacmp_W1_0_3_load;
    sext_ln95_37_fu_470_p0 <= ap_sig_allocacmp_W1_1_3_load;
    sext_ln95_38_fu_478_p0 <= ap_sig_allocacmp_W1_2_3_load;
    sext_ln95_39_fu_486_p0 <= ap_sig_allocacmp_W1_3_3_load;
        sext_ln95_3_fu_184_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_1_val),12));

    sext_ln95_40_fu_494_p0 <= ap_sig_allocacmp_W1_4_3_load;
    sext_ln95_41_fu_502_p0 <= ap_sig_allocacmp_W1_5_3_load;
    sext_ln95_42_fu_510_p0 <= ap_sig_allocacmp_W1_6_3_load;
    sext_ln95_43_fu_518_p0 <= ap_sig_allocacmp_W1_7_3_load;
        sext_ln95_4_fu_188_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_2_val),12));

        sext_ln95_5_fu_192_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_3_val),12));

        sext_ln95_6_fu_196_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_4_val),12));

        sext_ln95_7_fu_200_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_5_val),12));

        sext_ln95_8_fu_204_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_6_val),12));

        sext_ln95_9_fu_208_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(input_7_val),12));

    sext_ln95_fu_270_p0 <= ap_sig_allocacmp_W1_0_0_load;
    tmp_10_fu_672_p3 <= grp_fu_1284_p3(11 downto 11);
    tmp_11_fu_687_p3 <= grp_fu_1293_p3(11 downto 11);
    tmp_12_fu_702_p3 <= grp_fu_1302_p3(11 downto 11);
    tmp_13_fu_717_p3 <= grp_fu_1311_p3(11 downto 11);
    tmp_14_fu_732_p3 <= grp_fu_1320_p3(11 downto 11);
    tmp_15_fu_747_p3 <= grp_fu_1329_p3(11 downto 11);
    tmp_16_fu_762_p3 <= grp_fu_1338_p3(11 downto 11);
    tmp_17_fu_777_p3 <= grp_fu_1347_p3(11 downto 11);
    tmp_18_fu_792_p3 <= grp_fu_1356_p3(11 downto 11);
    tmp_19_fu_807_p3 <= grp_fu_1365_p3(11 downto 11);
    tmp_1_fu_537_p3 <= grp_fu_1203_p3(11 downto 11);
    tmp_20_fu_822_p3 <= grp_fu_1374_p3(11 downto 11);
    tmp_21_fu_837_p3 <= grp_fu_1383_p3(11 downto 11);
    tmp_22_fu_852_p3 <= grp_fu_1392_p3(11 downto 11);
    tmp_23_fu_867_p3 <= grp_fu_1401_p3(11 downto 11);
    tmp_24_fu_882_p3 <= grp_fu_1410_p3(11 downto 11);
    tmp_25_fu_897_p3 <= grp_fu_1419_p3(11 downto 11);
    tmp_26_fu_912_p3 <= grp_fu_1428_p3(11 downto 11);
    tmp_27_fu_927_p3 <= grp_fu_1437_p3(11 downto 11);
    tmp_28_fu_942_p3 <= grp_fu_1446_p3(11 downto 11);
    tmp_29_fu_957_p3 <= grp_fu_1455_p3(11 downto 11);
    tmp_2_fu_552_p3 <= grp_fu_1212_p3(11 downto 11);
    tmp_30_fu_972_p3 <= grp_fu_1464_p3(11 downto 11);
    tmp_31_fu_987_p3 <= grp_fu_1473_p3(11 downto 11);
    tmp_3_fu_567_p3 <= grp_fu_1221_p3(11 downto 11);
    tmp_4_fu_582_p3 <= grp_fu_1230_p3(11 downto 11);
    tmp_5_fu_597_p3 <= grp_fu_1239_p3(11 downto 11);
    tmp_6_fu_612_p3 <= grp_fu_1248_p3(11 downto 11);
    tmp_7_fu_627_p3 <= grp_fu_1257_p3(11 downto 11);
    tmp_8_fu_642_p3 <= grp_fu_1266_p3(11 downto 11);
    tmp_9_fu_657_p3 <= grp_fu_1275_p3(11 downto 11);
    tmp_fu_522_p3 <= grp_fu_1194_p3(11 downto 11);
end behav;
