-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity train_step is
generic (
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 8;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    leds_port : OUT STD_LOGIC_VECTOR (3 downto 0);
    leds_port_ap_vld : OUT STD_LOGIC;
    W1_out_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
    W1_out_ce0 : OUT STD_LOGIC;
    W1_out_we0 : OUT STD_LOGIC;
    W1_out_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    W1_out_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
    W1_out_ce1 : OUT STD_LOGIC;
    W1_out_we1 : OUT STD_LOGIC;
    W1_out_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    W2_out_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    W2_out_ce0 : OUT STD_LOGIC;
    W2_out_we0 : OUT STD_LOGIC;
    W2_out_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC );
end;


architecture behav of train_step is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "train_step_train_step,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=6.860000,HLS_SYN_LAT=29,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1440,HLS_SYN_LUT=3368,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (11 downto 0) := "000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (11 downto 0) := "000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (11 downto 0) := "000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (11 downto 0) := "000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (11 downto 0) := "000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (11 downto 0) := "000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (11 downto 0) := "000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (11 downto 0) := "000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (11 downto 0) := "001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (11 downto 0) := "010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (11 downto 0) := "100000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv42_14E5E0A73 : STD_LOGIC_VECTOR (41 downto 0) := "000000000101001110010111100000101001110011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (11 downto 0) := "000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal img_pos_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_pos_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_pos_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_pos_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_pos_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_pos_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_pos_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_pos_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_neg_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_neg_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_neg_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_neg_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_neg_4 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_neg_5 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_neg_6 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_neg_7 : STD_LOGIC_VECTOR (7 downto 0);
    signal last_sample : STD_LOGIC_VECTOR (31 downto 0);
    signal sample_idx : STD_LOGIC_VECTOR (31 downto 0);
    signal W1_0_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_1_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_3_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_4_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_5_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_6_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_7_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_0_1 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_1_1 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_2_1 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_3_1 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_4_1 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_5_1 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_6_1 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_7_1 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_0_2 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_1_2 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_2_2 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_3_2 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_4_2 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_5_2 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_6_2 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_7_2 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_0_3 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_1_3 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_2_3 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_3_3 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_4_3 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_5_3 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_6_3 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal W1_7_3 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    signal train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal train_mulmulmulstep_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_7 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_6 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_5 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal img_pos_0_read_reg_918 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_pos_1_read_reg_924 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_pos_2_read_reg_930 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_pos_3_read_reg_936 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_pos_4_read_reg_942 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_pos_5_read_reg_948 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_pos_6_read_reg_954 : STD_LOGIC_VECTOR (7 downto 0);
    signal img_pos_7_read_reg_960 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln145_fu_640_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_ln145_reg_1006 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln146_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln146_reg_1011 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln1_reg_1021 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal grp_forwardHidden_fu_325_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_forwardHidden_fu_325_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_forwardHidden_fu_325_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_forwardHidden_fu_325_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_forwardHidden_fu_409_ap_return_0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_forwardHidden_fu_409_ap_return_1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_forwardHidden_fu_409_ap_return_2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_forwardHidden_fu_409_ap_return_3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_updateHidden_fu_493_ap_start : STD_LOGIC;
    signal grp_updateHidden_fu_493_ap_done : STD_LOGIC;
    signal grp_updateHidden_fu_493_ap_idle : STD_LOGIC;
    signal grp_updateHidden_fu_493_ap_ready : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_0_0_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_0_0_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_1_0_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_1_0_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_2_0_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_2_0_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_3_0_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_3_0_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_4_0_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_4_0_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_5_0_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_5_0_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_6_0_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_6_0_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_7_0_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_7_0_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_0_1_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_0_1_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_1_1_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_1_1_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_2_1_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_2_1_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_3_1_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_3_1_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_4_1_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_4_1_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_5_1_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_5_1_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_6_1_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_6_1_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_7_1_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_7_1_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_0_2_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_0_2_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_1_2_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_1_2_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_2_2_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_2_2_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_3_2_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_3_2_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_4_2_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_4_2_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_5_2_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_5_2_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_6_2_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_6_2_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_7_2_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_7_2_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_0_3_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_0_3_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_1_3_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_1_3_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_2_3_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_2_3_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_3_3_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_3_3_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_4_3_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_4_3_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_5_3_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_5_3_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_6_3_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_6_3_o_ap_vld : STD_LOGIC;
    signal grp_updateHidden_fu_493_W1_7_3_o : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_updateHidden_fu_493_W1_7_3_o_ap_vld : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_start : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_done : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_idle : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_ready : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_ce0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_we0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_address1 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_ce1 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_we1 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_start : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_done : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_idle : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_ready : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_W2_out_address0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_W2_out_ce0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_W2_out_we0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_W2_out_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_updateHidden_fu_493_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm_state7 : STD_LOGIC;
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal grp_fu_629_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_629_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal shl_ln145_fu_634_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_629_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal xor_ln146_fu_666_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_state12_on_subcall_done : BOOLEAN;
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal grp_fu_629_p00 : STD_LOGIC_VECTOR (41 downto 0);
    signal ap_ce_reg : STD_LOGIC;

    component train_step_forwardHidden IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        input_0_val : IN STD_LOGIC_VECTOR (7 downto 0);
        input_1_val : IN STD_LOGIC_VECTOR (7 downto 0);
        input_2_val : IN STD_LOGIC_VECTOR (7 downto 0);
        input_3_val : IN STD_LOGIC_VECTOR (7 downto 0);
        input_4_val : IN STD_LOGIC_VECTOR (7 downto 0);
        input_5_val : IN STD_LOGIC_VECTOR (7 downto 0);
        input_6_val : IN STD_LOGIC_VECTOR (7 downto 0);
        input_7_val : IN STD_LOGIC_VECTOR (7 downto 0);
        W1_0_0 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_1_0 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_2_0 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_3_0 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_4_0 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_5_0 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_6_0 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_7_0 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_0_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_1_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_2_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_3_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_4_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_5_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_6_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_7_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_0_2 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_1_2 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_2_2 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_3_2 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_4_2 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_5_2 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_6_2 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_7_2 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_0_3 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_1_3 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_2_3 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_3_3 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_4_3 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_5_3 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_6_3 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_7_3 : IN STD_LOGIC_VECTOR (1 downto 0);
        ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        ap_return_3 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component train_step_updateHidden IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_0_val : IN STD_LOGIC_VECTOR (7 downto 0);
        input_1_val : IN STD_LOGIC_VECTOR (7 downto 0);
        input_2_val : IN STD_LOGIC_VECTOR (7 downto 0);
        input_3_val : IN STD_LOGIC_VECTOR (7 downto 0);
        input_4_val : IN STD_LOGIC_VECTOR (7 downto 0);
        input_5_val : IN STD_LOGIC_VECTOR (7 downto 0);
        input_6_val : IN STD_LOGIC_VECTOR (7 downto 0);
        input_7_val : IN STD_LOGIC_VECTOR (7 downto 0);
        train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_3 : IN STD_LOGIC_VECTOR (7 downto 0);
        train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_7 : IN STD_LOGIC_VECTOR (7 downto 0);
        W1_0_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_0_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_0_0_o_ap_vld : OUT STD_LOGIC;
        train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_2 : IN STD_LOGIC_VECTOR (7 downto 0);
        train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_1 : IN STD_LOGIC_VECTOR (7 downto 0);
        train_mulmulmulstep_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed : IN STD_LOGIC_VECTOR (7 downto 0);
        train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_6 : IN STD_LOGIC_VECTOR (7 downto 0);
        train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_5 : IN STD_LOGIC_VECTOR (7 downto 0);
        train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_4 : IN STD_LOGIC_VECTOR (7 downto 0);
        W1_1_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_1_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_1_0_o_ap_vld : OUT STD_LOGIC;
        W1_2_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_2_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_2_0_o_ap_vld : OUT STD_LOGIC;
        W1_3_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_3_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_3_0_o_ap_vld : OUT STD_LOGIC;
        W1_4_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_4_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_4_0_o_ap_vld : OUT STD_LOGIC;
        W1_5_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_5_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_5_0_o_ap_vld : OUT STD_LOGIC;
        W1_6_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_6_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_6_0_o_ap_vld : OUT STD_LOGIC;
        W1_7_0_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_7_0_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_7_0_o_ap_vld : OUT STD_LOGIC;
        W1_0_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_0_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_0_1_o_ap_vld : OUT STD_LOGIC;
        W1_1_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_1_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_1_1_o_ap_vld : OUT STD_LOGIC;
        W1_2_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_2_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_2_1_o_ap_vld : OUT STD_LOGIC;
        W1_3_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_3_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_3_1_o_ap_vld : OUT STD_LOGIC;
        W1_4_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_4_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_4_1_o_ap_vld : OUT STD_LOGIC;
        W1_5_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_5_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_5_1_o_ap_vld : OUT STD_LOGIC;
        W1_6_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_6_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_6_1_o_ap_vld : OUT STD_LOGIC;
        W1_7_1_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_7_1_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_7_1_o_ap_vld : OUT STD_LOGIC;
        W1_0_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_0_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_0_2_o_ap_vld : OUT STD_LOGIC;
        W1_1_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_1_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_1_2_o_ap_vld : OUT STD_LOGIC;
        W1_2_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_2_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_2_2_o_ap_vld : OUT STD_LOGIC;
        W1_3_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_3_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_3_2_o_ap_vld : OUT STD_LOGIC;
        W1_4_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_4_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_4_2_o_ap_vld : OUT STD_LOGIC;
        W1_5_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_5_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_5_2_o_ap_vld : OUT STD_LOGIC;
        W1_6_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_6_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_6_2_o_ap_vld : OUT STD_LOGIC;
        W1_7_2_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_7_2_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_7_2_o_ap_vld : OUT STD_LOGIC;
        W1_0_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_0_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_0_3_o_ap_vld : OUT STD_LOGIC;
        W1_1_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_1_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_1_3_o_ap_vld : OUT STD_LOGIC;
        W1_2_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_2_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_2_3_o_ap_vld : OUT STD_LOGIC;
        W1_3_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_3_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_3_3_o_ap_vld : OUT STD_LOGIC;
        W1_4_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_4_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_4_3_o_ap_vld : OUT STD_LOGIC;
        W1_5_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_5_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_5_3_o_ap_vld : OUT STD_LOGIC;
        W1_6_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_6_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_6_3_o_ap_vld : OUT STD_LOGIC;
        W1_7_3_i : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_7_3_o : OUT STD_LOGIC_VECTOR (1 downto 0);
        W1_7_3_o_ap_vld : OUT STD_LOGIC );
    end component;


    component train_step_train_step_Pipeline_VITIS_LOOP_136_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        W1_out_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        W1_out_ce0 : OUT STD_LOGIC;
        W1_out_we0 : OUT STD_LOGIC;
        W1_out_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        W1_out_address1 : OUT STD_LOGIC_VECTOR (4 downto 0);
        W1_out_ce1 : OUT STD_LOGIC;
        W1_out_we1 : OUT STD_LOGIC;
        W1_out_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        W1_0_0_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_0_1_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_0_2_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_0_3_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_1_0_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_1_1_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_1_2_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_1_3_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_2_0_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_2_1_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_2_2_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_2_3_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_3_0_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_3_1_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_3_2_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_3_3_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_4_0_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_4_1_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_4_2_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_4_3_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_5_0_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_5_1_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_5_2_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_5_3_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_6_0_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_6_1_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_6_2_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_6_3_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_7_0_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_7_1_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_7_2_load : IN STD_LOGIC_VECTOR (1 downto 0);
        W1_7_3_load : IN STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component train_step_train_step_Pipeline_VITIS_LOOP_141_4 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        W2_out_address0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        W2_out_ce0 : OUT STD_LOGIC;
        W2_out_we0 : OUT STD_LOGIC;
        W2_out_d0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component train_step_mul_32ns_34ns_42_2_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (33 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;


    component train_step_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        img_pos_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_pos_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_pos_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_pos_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_pos_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_pos_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_pos_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_pos_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_neg_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_neg_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_neg_2 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_neg_3 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_neg_4 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_neg_5 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_neg_6 : OUT STD_LOGIC_VECTOR (7 downto 0);
        img_neg_7 : OUT STD_LOGIC_VECTOR (7 downto 0);
        last_sample : OUT STD_LOGIC_VECTOR (31 downto 0);
        sample_idx : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;



begin
    grp_forwardHidden_fu_325 : component train_step_forwardHidden
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        input_0_val => img_pos_0,
        input_1_val => img_pos_1,
        input_2_val => img_pos_2,
        input_3_val => img_pos_3,
        input_4_val => img_pos_4,
        input_5_val => img_pos_5,
        input_6_val => img_pos_6,
        input_7_val => img_pos_7,
        W1_0_0 => W1_0_0,
        W1_1_0 => W1_1_0,
        W1_2_0 => W1_2_0,
        W1_3_0 => W1_3_0,
        W1_4_0 => W1_4_0,
        W1_5_0 => W1_5_0,
        W1_6_0 => W1_6_0,
        W1_7_0 => W1_7_0,
        W1_0_1 => W1_0_1,
        W1_1_1 => W1_1_1,
        W1_2_1 => W1_2_1,
        W1_3_1 => W1_3_1,
        W1_4_1 => W1_4_1,
        W1_5_1 => W1_5_1,
        W1_6_1 => W1_6_1,
        W1_7_1 => W1_7_1,
        W1_0_2 => W1_0_2,
        W1_1_2 => W1_1_2,
        W1_2_2 => W1_2_2,
        W1_3_2 => W1_3_2,
        W1_4_2 => W1_4_2,
        W1_5_2 => W1_5_2,
        W1_6_2 => W1_6_2,
        W1_7_2 => W1_7_2,
        W1_0_3 => W1_0_3,
        W1_1_3 => W1_1_3,
        W1_2_3 => W1_2_3,
        W1_3_3 => W1_3_3,
        W1_4_3 => W1_4_3,
        W1_5_3 => W1_5_3,
        W1_6_3 => W1_6_3,
        W1_7_3 => W1_7_3,
        ap_return_0 => grp_forwardHidden_fu_325_ap_return_0,
        ap_return_1 => grp_forwardHidden_fu_325_ap_return_1,
        ap_return_2 => grp_forwardHidden_fu_325_ap_return_2,
        ap_return_3 => grp_forwardHidden_fu_325_ap_return_3);

    grp_forwardHidden_fu_409 : component train_step_forwardHidden
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        input_0_val => img_neg_0,
        input_1_val => img_neg_1,
        input_2_val => img_neg_2,
        input_3_val => img_neg_3,
        input_4_val => img_neg_4,
        input_5_val => img_neg_5,
        input_6_val => img_neg_6,
        input_7_val => img_neg_7,
        W1_0_0 => W1_0_0,
        W1_1_0 => W1_1_0,
        W1_2_0 => W1_2_0,
        W1_3_0 => W1_3_0,
        W1_4_0 => W1_4_0,
        W1_5_0 => W1_5_0,
        W1_6_0 => W1_6_0,
        W1_7_0 => W1_7_0,
        W1_0_1 => W1_0_1,
        W1_1_1 => W1_1_1,
        W1_2_1 => W1_2_1,
        W1_3_1 => W1_3_1,
        W1_4_1 => W1_4_1,
        W1_5_1 => W1_5_1,
        W1_6_1 => W1_6_1,
        W1_7_1 => W1_7_1,
        W1_0_2 => W1_0_2,
        W1_1_2 => W1_1_2,
        W1_2_2 => W1_2_2,
        W1_3_2 => W1_3_2,
        W1_4_2 => W1_4_2,
        W1_5_2 => W1_5_2,
        W1_6_2 => W1_6_2,
        W1_7_2 => W1_7_2,
        W1_0_3 => W1_0_3,
        W1_1_3 => W1_1_3,
        W1_2_3 => W1_2_3,
        W1_3_3 => W1_3_3,
        W1_4_3 => W1_4_3,
        W1_5_3 => W1_5_3,
        W1_6_3 => W1_6_3,
        W1_7_3 => W1_7_3,
        ap_return_0 => grp_forwardHidden_fu_409_ap_return_0,
        ap_return_1 => grp_forwardHidden_fu_409_ap_return_1,
        ap_return_2 => grp_forwardHidden_fu_409_ap_return_2,
        ap_return_3 => grp_forwardHidden_fu_409_ap_return_3);

    grp_updateHidden_fu_493 : component train_step_updateHidden
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_updateHidden_fu_493_ap_start,
        ap_done => grp_updateHidden_fu_493_ap_done,
        ap_idle => grp_updateHidden_fu_493_ap_idle,
        ap_ready => grp_updateHidden_fu_493_ap_ready,
        input_0_val => img_pos_0_read_reg_918,
        input_1_val => img_pos_1_read_reg_924,
        input_2_val => img_pos_2_read_reg_930,
        input_3_val => img_pos_3_read_reg_936,
        input_4_val => img_pos_4_read_reg_942,
        input_5_val => img_pos_5_read_reg_948,
        input_6_val => img_pos_6_read_reg_954,
        input_7_val => img_pos_7_read_reg_960,
        train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_3 => train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_3,
        train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_7 => train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_7,
        W1_0_0_i => W1_0_0,
        W1_0_0_o => grp_updateHidden_fu_493_W1_0_0_o,
        W1_0_0_o_ap_vld => grp_updateHidden_fu_493_W1_0_0_o_ap_vld,
        train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_2 => train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_2,
        train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_1 => train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_1,
        train_mulmulmulstep_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed => train_mulmulmulstep_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed,
        train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_6 => train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_6,
        train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_5 => train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_5,
        train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_4 => train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_4,
        W1_1_0_i => W1_1_0,
        W1_1_0_o => grp_updateHidden_fu_493_W1_1_0_o,
        W1_1_0_o_ap_vld => grp_updateHidden_fu_493_W1_1_0_o_ap_vld,
        W1_2_0_i => W1_2_0,
        W1_2_0_o => grp_updateHidden_fu_493_W1_2_0_o,
        W1_2_0_o_ap_vld => grp_updateHidden_fu_493_W1_2_0_o_ap_vld,
        W1_3_0_i => W1_3_0,
        W1_3_0_o => grp_updateHidden_fu_493_W1_3_0_o,
        W1_3_0_o_ap_vld => grp_updateHidden_fu_493_W1_3_0_o_ap_vld,
        W1_4_0_i => W1_4_0,
        W1_4_0_o => grp_updateHidden_fu_493_W1_4_0_o,
        W1_4_0_o_ap_vld => grp_updateHidden_fu_493_W1_4_0_o_ap_vld,
        W1_5_0_i => W1_5_0,
        W1_5_0_o => grp_updateHidden_fu_493_W1_5_0_o,
        W1_5_0_o_ap_vld => grp_updateHidden_fu_493_W1_5_0_o_ap_vld,
        W1_6_0_i => W1_6_0,
        W1_6_0_o => grp_updateHidden_fu_493_W1_6_0_o,
        W1_6_0_o_ap_vld => grp_updateHidden_fu_493_W1_6_0_o_ap_vld,
        W1_7_0_i => W1_7_0,
        W1_7_0_o => grp_updateHidden_fu_493_W1_7_0_o,
        W1_7_0_o_ap_vld => grp_updateHidden_fu_493_W1_7_0_o_ap_vld,
        W1_0_1_i => W1_0_1,
        W1_0_1_o => grp_updateHidden_fu_493_W1_0_1_o,
        W1_0_1_o_ap_vld => grp_updateHidden_fu_493_W1_0_1_o_ap_vld,
        W1_1_1_i => W1_1_1,
        W1_1_1_o => grp_updateHidden_fu_493_W1_1_1_o,
        W1_1_1_o_ap_vld => grp_updateHidden_fu_493_W1_1_1_o_ap_vld,
        W1_2_1_i => W1_2_1,
        W1_2_1_o => grp_updateHidden_fu_493_W1_2_1_o,
        W1_2_1_o_ap_vld => grp_updateHidden_fu_493_W1_2_1_o_ap_vld,
        W1_3_1_i => W1_3_1,
        W1_3_1_o => grp_updateHidden_fu_493_W1_3_1_o,
        W1_3_1_o_ap_vld => grp_updateHidden_fu_493_W1_3_1_o_ap_vld,
        W1_4_1_i => W1_4_1,
        W1_4_1_o => grp_updateHidden_fu_493_W1_4_1_o,
        W1_4_1_o_ap_vld => grp_updateHidden_fu_493_W1_4_1_o_ap_vld,
        W1_5_1_i => W1_5_1,
        W1_5_1_o => grp_updateHidden_fu_493_W1_5_1_o,
        W1_5_1_o_ap_vld => grp_updateHidden_fu_493_W1_5_1_o_ap_vld,
        W1_6_1_i => W1_6_1,
        W1_6_1_o => grp_updateHidden_fu_493_W1_6_1_o,
        W1_6_1_o_ap_vld => grp_updateHidden_fu_493_W1_6_1_o_ap_vld,
        W1_7_1_i => W1_7_1,
        W1_7_1_o => grp_updateHidden_fu_493_W1_7_1_o,
        W1_7_1_o_ap_vld => grp_updateHidden_fu_493_W1_7_1_o_ap_vld,
        W1_0_2_i => W1_0_2,
        W1_0_2_o => grp_updateHidden_fu_493_W1_0_2_o,
        W1_0_2_o_ap_vld => grp_updateHidden_fu_493_W1_0_2_o_ap_vld,
        W1_1_2_i => W1_1_2,
        W1_1_2_o => grp_updateHidden_fu_493_W1_1_2_o,
        W1_1_2_o_ap_vld => grp_updateHidden_fu_493_W1_1_2_o_ap_vld,
        W1_2_2_i => W1_2_2,
        W1_2_2_o => grp_updateHidden_fu_493_W1_2_2_o,
        W1_2_2_o_ap_vld => grp_updateHidden_fu_493_W1_2_2_o_ap_vld,
        W1_3_2_i => W1_3_2,
        W1_3_2_o => grp_updateHidden_fu_493_W1_3_2_o,
        W1_3_2_o_ap_vld => grp_updateHidden_fu_493_W1_3_2_o_ap_vld,
        W1_4_2_i => W1_4_2,
        W1_4_2_o => grp_updateHidden_fu_493_W1_4_2_o,
        W1_4_2_o_ap_vld => grp_updateHidden_fu_493_W1_4_2_o_ap_vld,
        W1_5_2_i => W1_5_2,
        W1_5_2_o => grp_updateHidden_fu_493_W1_5_2_o,
        W1_5_2_o_ap_vld => grp_updateHidden_fu_493_W1_5_2_o_ap_vld,
        W1_6_2_i => W1_6_2,
        W1_6_2_o => grp_updateHidden_fu_493_W1_6_2_o,
        W1_6_2_o_ap_vld => grp_updateHidden_fu_493_W1_6_2_o_ap_vld,
        W1_7_2_i => W1_7_2,
        W1_7_2_o => grp_updateHidden_fu_493_W1_7_2_o,
        W1_7_2_o_ap_vld => grp_updateHidden_fu_493_W1_7_2_o_ap_vld,
        W1_0_3_i => W1_0_3,
        W1_0_3_o => grp_updateHidden_fu_493_W1_0_3_o,
        W1_0_3_o_ap_vld => grp_updateHidden_fu_493_W1_0_3_o_ap_vld,
        W1_1_3_i => W1_1_3,
        W1_1_3_o => grp_updateHidden_fu_493_W1_1_3_o,
        W1_1_3_o_ap_vld => grp_updateHidden_fu_493_W1_1_3_o_ap_vld,
        W1_2_3_i => W1_2_3,
        W1_2_3_o => grp_updateHidden_fu_493_W1_2_3_o,
        W1_2_3_o_ap_vld => grp_updateHidden_fu_493_W1_2_3_o_ap_vld,
        W1_3_3_i => W1_3_3,
        W1_3_3_o => grp_updateHidden_fu_493_W1_3_3_o,
        W1_3_3_o_ap_vld => grp_updateHidden_fu_493_W1_3_3_o_ap_vld,
        W1_4_3_i => W1_4_3,
        W1_4_3_o => grp_updateHidden_fu_493_W1_4_3_o,
        W1_4_3_o_ap_vld => grp_updateHidden_fu_493_W1_4_3_o_ap_vld,
        W1_5_3_i => W1_5_3,
        W1_5_3_o => grp_updateHidden_fu_493_W1_5_3_o,
        W1_5_3_o_ap_vld => grp_updateHidden_fu_493_W1_5_3_o_ap_vld,
        W1_6_3_i => W1_6_3,
        W1_6_3_o => grp_updateHidden_fu_493_W1_6_3_o,
        W1_6_3_o_ap_vld => grp_updateHidden_fu_493_W1_6_3_o_ap_vld,
        W1_7_3_i => W1_7_3,
        W1_7_3_o => grp_updateHidden_fu_493_W1_7_3_o,
        W1_7_3_o_ap_vld => grp_updateHidden_fu_493_W1_7_3_o_ap_vld);

    grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585 : component train_step_train_step_Pipeline_VITIS_LOOP_136_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_start,
        ap_done => grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_done,
        ap_idle => grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_idle,
        ap_ready => grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_ready,
        W1_out_address0 => grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_address0,
        W1_out_ce0 => grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_ce0,
        W1_out_we0 => grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_we0,
        W1_out_d0 => grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_d0,
        W1_out_address1 => grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_address1,
        W1_out_ce1 => grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_ce1,
        W1_out_we1 => grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_we1,
        W1_out_d1 => grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_d1,
        W1_0_0_load => W1_0_0,
        W1_0_1_load => W1_0_1,
        W1_0_2_load => W1_0_2,
        W1_0_3_load => W1_0_3,
        W1_1_0_load => W1_1_0,
        W1_1_1_load => W1_1_1,
        W1_1_2_load => W1_1_2,
        W1_1_3_load => W1_1_3,
        W1_2_0_load => W1_2_0,
        W1_2_1_load => W1_2_1,
        W1_2_2_load => W1_2_2,
        W1_2_3_load => W1_2_3,
        W1_3_0_load => W1_3_0,
        W1_3_1_load => W1_3_1,
        W1_3_2_load => W1_3_2,
        W1_3_3_load => W1_3_3,
        W1_4_0_load => W1_4_0,
        W1_4_1_load => W1_4_1,
        W1_4_2_load => W1_4_2,
        W1_4_3_load => W1_4_3,
        W1_5_0_load => W1_5_0,
        W1_5_1_load => W1_5_1,
        W1_5_2_load => W1_5_2,
        W1_5_3_load => W1_5_3,
        W1_6_0_load => W1_6_0,
        W1_6_1_load => W1_6_1,
        W1_6_2_load => W1_6_2,
        W1_6_3_load => W1_6_3,
        W1_7_0_load => W1_7_0,
        W1_7_1_load => W1_7_1,
        W1_7_2_load => W1_7_2,
        W1_7_3_load => W1_7_3);

    grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623 : component train_step_train_step_Pipeline_VITIS_LOOP_141_4
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_start,
        ap_done => grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_done,
        ap_idle => grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_idle,
        ap_ready => grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_ready,
        W2_out_address0 => grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_W2_out_address0,
        W2_out_ce0 => grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_W2_out_ce0,
        W2_out_we0 => grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_W2_out_we0,
        W2_out_d0 => grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_W2_out_d0);

    CTRL_s_axi_U : component train_step_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        img_pos_0 => img_pos_0,
        img_pos_1 => img_pos_1,
        img_pos_2 => img_pos_2,
        img_pos_3 => img_pos_3,
        img_pos_4 => img_pos_4,
        img_pos_5 => img_pos_5,
        img_pos_6 => img_pos_6,
        img_pos_7 => img_pos_7,
        img_neg_0 => img_neg_0,
        img_neg_1 => img_neg_1,
        img_neg_2 => img_neg_2,
        img_neg_3 => img_neg_3,
        img_neg_4 => img_neg_4,
        img_neg_5 => img_neg_5,
        img_neg_6 => img_neg_6,
        img_neg_7 => img_neg_7,
        last_sample => last_sample,
        sample_idx => sample_idx,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    mul_32ns_34ns_42_2_1_U199 : component train_step_mul_32ns_34ns_42_2_1
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 32,
        din1_WIDTH => 34,
        dout_WIDTH => 42)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        din0 => grp_fu_629_p0,
        din1 => grp_fu_629_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_629_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_ready = ap_const_logic_1)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_ready = ap_const_logic_1)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_updateHidden_fu_493_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_updateHidden_fu_493_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_NS_fsm_state7) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                    grp_updateHidden_fu_493_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_updateHidden_fu_493_ap_ready = ap_const_logic_1)) then 
                    grp_updateHidden_fu_493_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_0_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_0_0 <= grp_updateHidden_fu_493_W1_0_0_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_0_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_0_1 <= grp_updateHidden_fu_493_W1_0_1_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_0_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_0_2 <= grp_updateHidden_fu_493_W1_0_2_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_0_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_0_3 <= grp_updateHidden_fu_493_W1_0_3_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_1_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_1_0 <= grp_updateHidden_fu_493_W1_1_0_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_1_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_1_1 <= grp_updateHidden_fu_493_W1_1_1_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_1_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_1_2 <= grp_updateHidden_fu_493_W1_1_2_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_1_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_1_3 <= grp_updateHidden_fu_493_W1_1_3_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_2_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_2_0 <= grp_updateHidden_fu_493_W1_2_0_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_2_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_2_1 <= grp_updateHidden_fu_493_W1_2_1_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_2_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_2_2 <= grp_updateHidden_fu_493_W1_2_2_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_2_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_2_3 <= grp_updateHidden_fu_493_W1_2_3_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_3_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_3_0 <= grp_updateHidden_fu_493_W1_3_0_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_3_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_3_1 <= grp_updateHidden_fu_493_W1_3_1_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_3_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_3_2 <= grp_updateHidden_fu_493_W1_3_2_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_3_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_3_3 <= grp_updateHidden_fu_493_W1_3_3_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_4_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_4_0 <= grp_updateHidden_fu_493_W1_4_0_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_4_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_4_1 <= grp_updateHidden_fu_493_W1_4_1_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_4_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_4_2 <= grp_updateHidden_fu_493_W1_4_2_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_4_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_4_3 <= grp_updateHidden_fu_493_W1_4_3_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_5_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_5_0 <= grp_updateHidden_fu_493_W1_5_0_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_5_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_5_1 <= grp_updateHidden_fu_493_W1_5_1_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_5_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_5_2 <= grp_updateHidden_fu_493_W1_5_2_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_5_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_5_3 <= grp_updateHidden_fu_493_W1_5_3_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_6_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_6_0 <= grp_updateHidden_fu_493_W1_6_0_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_6_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_6_1 <= grp_updateHidden_fu_493_W1_6_1_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_6_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_6_2 <= grp_updateHidden_fu_493_W1_6_2_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_6_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_6_3 <= grp_updateHidden_fu_493_W1_6_3_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_7_0_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_7_0 <= grp_updateHidden_fu_493_W1_7_0_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_7_1_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_7_1 <= grp_updateHidden_fu_493_W1_7_1_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_7_2_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_7_2 <= grp_updateHidden_fu_493_W1_7_2_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_updateHidden_fu_493_W1_7_3_o_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                W1_7_3 <= grp_updateHidden_fu_493_W1_7_3_o;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln146_reg_1011 <= icmp_ln146_fu_646_p2;
                img_pos_0_read_reg_918 <= img_pos_0;
                img_pos_1_read_reg_924 <= img_pos_1;
                img_pos_2_read_reg_930 <= img_pos_2;
                img_pos_3_read_reg_936 <= img_pos_3;
                img_pos_4_read_reg_942 <= img_pos_4;
                img_pos_5_read_reg_948 <= img_pos_5;
                img_pos_6_read_reg_954 <= img_pos_6;
                img_pos_7_read_reg_960 <= img_pos_7;
                sub_ln145_reg_1006 <= sub_ln145_fu_640_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                train_mulmulmulstep_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed <= grp_forwardHidden_fu_325_ap_return_3;
                train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_1 <= grp_forwardHidden_fu_325_ap_return_2;
                train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_2 <= grp_forwardHidden_fu_325_ap_return_1;
                train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_3 <= grp_forwardHidden_fu_325_ap_return_0;
                train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_4 <= grp_forwardHidden_fu_409_ap_return_3;
                train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_5 <= grp_forwardHidden_fu_409_ap_return_2;
                train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_6 <= grp_forwardHidden_fu_409_ap_return_1;
                train_step_ap_fixed_const_ap_fixed_const_int_int_ap_uint_volatile_ap_fixed_7 <= grp_forwardHidden_fu_409_ap_return_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                trunc_ln1_reg_1021 <= grp_fu_629_p2(41 downto 38);
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state12, ap_block_state12_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXX";
        end case;
    end process;
    W1_out_address0 <= grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_address0;
    W1_out_address1 <= grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_address1;
    W1_out_ce0 <= grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_ce0;
    W1_out_ce1 <= grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_ce1;
    W1_out_d0 <= grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_d0;
    W1_out_d1 <= grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_d1;
    W1_out_we0 <= grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_we0;
    W1_out_we1 <= grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_W1_out_we1;
    W2_out_address0 <= grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_W2_out_address0;
    W2_out_ce0 <= grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_W2_out_ce0;
    W2_out_d0 <= grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_W2_out_d0;
    W2_out_we0 <= grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_W2_out_we0;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_NS_fsm_state7 <= ap_NS_fsm(6);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;

    ap_ST_fsm_state12_blk_assign_proc : process(ap_block_state12_on_subcall_done)
    begin
        if ((ap_const_boolean_1 = ap_block_state12_on_subcall_done)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state12_on_subcall_done_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_done, grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_done)
    begin
                ap_block_state12_on_subcall_done <= ((grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_done = ap_const_logic_0) or (grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_state12, ap_block_state12_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state12, ap_block_state12_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state12_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    grp_fu_629_p0 <= grp_fu_629_p00(32 - 1 downto 0);
    grp_fu_629_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln145_reg_1006),42));
    grp_fu_629_p1 <= ap_const_lv42_14E5E0A73(34 - 1 downto 0);
    grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_start <= grp_train_step_Pipeline_VITIS_LOOP_136_1_fu_585_ap_start_reg;
    grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_start <= grp_train_step_Pipeline_VITIS_LOOP_141_4_fu_623_ap_start_reg;
    grp_updateHidden_fu_493_ap_start <= grp_updateHidden_fu_493_ap_start_reg;
    icmp_ln146_fu_646_p2 <= "0" when (last_sample = ap_const_lv32_0) else "1";
    leds_port <= 
        xor_ln146_fu_666_p2 when (icmp_ln146_reg_1011(0) = '1') else 
        trunc_ln1_reg_1021;

    leds_port_ap_vld_assign_proc : process(ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            leds_port_ap_vld <= ap_const_logic_1;
        else 
            leds_port_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    shl_ln145_fu_634_p2 <= std_logic_vector(shift_left(unsigned(sample_idx),to_integer(unsigned('0' & ap_const_lv32_4(31-1 downto 0)))));
    sub_ln145_fu_640_p2 <= std_logic_vector(unsigned(shl_ln145_fu_634_p2) - unsigned(sample_idx));
    xor_ln146_fu_666_p2 <= (trunc_ln1_reg_1021 xor ap_const_lv4_F);
end behav;
