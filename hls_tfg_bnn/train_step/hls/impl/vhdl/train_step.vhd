-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity train_step is
generic (
    C_M_AXI_WEIGHTS_ADDR_WIDTH : INTEGER := 64;
    C_M_AXI_WEIGHTS_ID_WIDTH : INTEGER := 1;
    C_M_AXI_WEIGHTS_AWUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WEIGHTS_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_WEIGHTS_WUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WEIGHTS_ARUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WEIGHTS_RUSER_WIDTH : INTEGER := 1;
    C_M_AXI_WEIGHTS_BUSER_WIDTH : INTEGER := 1;
    C_S_AXI_CTRL_ADDR_WIDTH : INTEGER := 5;
    C_S_AXI_CTRL_DATA_WIDTH : INTEGER := 32;
    C_S_AXI_CONTROL_ADDR_WIDTH : INTEGER := 6;
    C_S_AXI_CONTROL_DATA_WIDTH : INTEGER := 32;
    C_M_AXI_WEIGHTS_USER_VALUE : INTEGER := 0;
    C_M_AXI_WEIGHTS_PROT_VALUE : INTEGER := 0;
    C_M_AXI_WEIGHTS_CACHE_VALUE : INTEGER := 3 );
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    m_axi_WEIGHTS_AWVALID : OUT STD_LOGIC;
    m_axi_WEIGHTS_AWREADY : IN STD_LOGIC;
    m_axi_WEIGHTS_AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_WEIGHTS_ADDR_WIDTH-1 downto 0);
    m_axi_WEIGHTS_AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_WEIGHTS_ID_WIDTH-1 downto 0);
    m_axi_WEIGHTS_AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_WEIGHTS_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHTS_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHTS_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WEIGHTS_AWUSER_WIDTH-1 downto 0);
    m_axi_WEIGHTS_WVALID : OUT STD_LOGIC;
    m_axi_WEIGHTS_WREADY : IN STD_LOGIC;
    m_axi_WEIGHTS_WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_WEIGHTS_DATA_WIDTH-1 downto 0);
    m_axi_WEIGHTS_WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_WEIGHTS_DATA_WIDTH/8-1 downto 0);
    m_axi_WEIGHTS_WLAST : OUT STD_LOGIC;
    m_axi_WEIGHTS_WID : OUT STD_LOGIC_VECTOR (C_M_AXI_WEIGHTS_ID_WIDTH-1 downto 0);
    m_axi_WEIGHTS_WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WEIGHTS_WUSER_WIDTH-1 downto 0);
    m_axi_WEIGHTS_ARVALID : OUT STD_LOGIC;
    m_axi_WEIGHTS_ARREADY : IN STD_LOGIC;
    m_axi_WEIGHTS_ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_WEIGHTS_ADDR_WIDTH-1 downto 0);
    m_axi_WEIGHTS_ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_WEIGHTS_ID_WIDTH-1 downto 0);
    m_axi_WEIGHTS_ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_WEIGHTS_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHTS_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHTS_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WEIGHTS_ARUSER_WIDTH-1 downto 0);
    m_axi_WEIGHTS_RVALID : IN STD_LOGIC;
    m_axi_WEIGHTS_RREADY : OUT STD_LOGIC;
    m_axi_WEIGHTS_RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_WEIGHTS_DATA_WIDTH-1 downto 0);
    m_axi_WEIGHTS_RLAST : IN STD_LOGIC;
    m_axi_WEIGHTS_RID : IN STD_LOGIC_VECTOR (C_M_AXI_WEIGHTS_ID_WIDTH-1 downto 0);
    m_axi_WEIGHTS_RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_WEIGHTS_RUSER_WIDTH-1 downto 0);
    m_axi_WEIGHTS_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_BVALID : IN STD_LOGIC;
    m_axi_WEIGHTS_BREADY : OUT STD_LOGIC;
    m_axi_WEIGHTS_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_BID : IN STD_LOGIC_VECTOR (C_M_AXI_WEIGHTS_ID_WIDTH-1 downto 0);
    m_axi_WEIGHTS_BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_WEIGHTS_BUSER_WIDTH-1 downto 0);
    img_pos_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    img_pos_ce0 : OUT STD_LOGIC;
    img_pos_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    img_neg_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
    img_neg_ce0 : OUT STD_LOGIC;
    img_neg_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    s_axi_CTRL_AWVALID : IN STD_LOGIC;
    s_axi_CTRL_AWREADY : OUT STD_LOGIC;
    s_axi_CTRL_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_WVALID : IN STD_LOGIC;
    s_axi_CTRL_WREADY : OUT STD_LOGIC;
    s_axi_CTRL_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH/8-1 downto 0);
    s_axi_CTRL_ARVALID : IN STD_LOGIC;
    s_axi_CTRL_ARREADY : OUT STD_LOGIC;
    s_axi_CTRL_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CTRL_ADDR_WIDTH-1 downto 0);
    s_axi_CTRL_RVALID : OUT STD_LOGIC;
    s_axi_CTRL_RREADY : IN STD_LOGIC;
    s_axi_CTRL_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CTRL_DATA_WIDTH-1 downto 0);
    s_axi_CTRL_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_CTRL_BVALID : OUT STD_LOGIC;
    s_axi_CTRL_BREADY : IN STD_LOGIC;
    s_axi_CTRL_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    interrupt : OUT STD_LOGIC;
    s_axi_control_AWVALID : IN STD_LOGIC;
    s_axi_control_AWREADY : OUT STD_LOGIC;
    s_axi_control_AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_WVALID : IN STD_LOGIC;
    s_axi_control_WREADY : OUT STD_LOGIC;
    s_axi_control_WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH/8-1 downto 0);
    s_axi_control_ARVALID : IN STD_LOGIC;
    s_axi_control_ARREADY : OUT STD_LOGIC;
    s_axi_control_ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_CONTROL_ADDR_WIDTH-1 downto 0);
    s_axi_control_RVALID : OUT STD_LOGIC;
    s_axi_control_RREADY : IN STD_LOGIC;
    s_axi_control_RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_CONTROL_DATA_WIDTH-1 downto 0);
    s_axi_control_RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
    s_axi_control_BVALID : OUT STD_LOGIC;
    s_axi_control_BREADY : IN STD_LOGIC;
    s_axi_control_BRESP : OUT STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of train_step is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "train_step_train_step,hls_ip_2024_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a100t-csg324-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.300000,HLS_SYN_LAT=8829,HLS_SYN_TPT=none,HLS_SYN_MEM=3,HLS_SYN_DSP=0,HLS_SYN_FF=16316,HLS_SYN_LUT=21235,HLS_VERSION=2024_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000001000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000010000000000000000000000000000000000000000";
    constant ap_ST_fsm_state42 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000100000000000000000000000000000000000000000";
    constant ap_ST_fsm_state43 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000001000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state44 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000010000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state45 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000100000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state46 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000001000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state47 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000010000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state48 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000100000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state49 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000001000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state50 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000010000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000100000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000001000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000010000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000100000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state55 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000001000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state56 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000010000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000100000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000001000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000010000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000100000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000001000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000010000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000100000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state64 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000001000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state65 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000010000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state66 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000100000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state67 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000001000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state68 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000010000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state69 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000100000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state70 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000001000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state71 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000010000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state72 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000100000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state73 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000001000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state74 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000010000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state75 : STD_LOGIC_VECTOR (85 downto 0) := "00000000000100000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state76 : STD_LOGIC_VECTOR (85 downto 0) := "00000000001000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state77 : STD_LOGIC_VECTOR (85 downto 0) := "00000000010000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state78 : STD_LOGIC_VECTOR (85 downto 0) := "00000000100000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state79 : STD_LOGIC_VECTOR (85 downto 0) := "00000001000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state80 : STD_LOGIC_VECTOR (85 downto 0) := "00000010000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state81 : STD_LOGIC_VECTOR (85 downto 0) := "00000100000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state82 : STD_LOGIC_VECTOR (85 downto 0) := "00001000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state83 : STD_LOGIC_VECTOR (85 downto 0) := "00010000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state84 : STD_LOGIC_VECTOR (85 downto 0) := "00100000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state85 : STD_LOGIC_VECTOR (85 downto 0) := "01000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_ST_fsm_state86 : STD_LOGIC_VECTOR (85 downto 0) := "10000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_36 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110110";
    constant ap_const_lv32_2C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101100";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_2B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101011";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_2E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101110";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_31 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110001";
    constant ap_const_lv32_32 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110010";
    constant ap_const_lv32_33 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110011";
    constant ap_const_lv32_34 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110100";
    constant ap_const_lv32_35 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110101";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_39 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111001";
    constant ap_const_lv32_3A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111010";
    constant ap_const_lv32_3B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111011";
    constant ap_const_lv32_3C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111100";
    constant ap_const_lv32_3D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111101";
    constant ap_const_lv32_3E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111110";
    constant ap_const_lv32_41 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000001";
    constant ap_const_lv32_42 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000010";
    constant ap_const_lv32_43 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000011";
    constant ap_const_lv32_44 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000100";
    constant ap_const_lv32_45 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000101";
    constant ap_const_lv32_46 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000110";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv32_48 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001000";
    constant ap_const_lv32_49 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001001";
    constant ap_const_lv32_4A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001010";
    constant ap_const_lv32_4B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001011";
    constant ap_const_lv32_4C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001100";
    constant ap_const_lv32_4D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001101";
    constant ap_const_lv32_4E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001110";
    constant ap_const_lv32_4F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001001111";
    constant ap_const_lv32_50 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010000";
    constant C_S_AXI_DATA_WIDTH : INTEGER := 32;
    constant C_M_AXI_DATA_WIDTH : INTEGER := 32;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_51 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010001";
    constant ap_const_lv32_52 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010010";
    constant ap_const_lv32_53 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010011";
    constant ap_const_lv32_54 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010100";
    constant ap_const_lv32_55 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010101";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_5 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000101";
    constant ap_const_lv64_6 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000110";
    constant ap_const_lv64_7 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000111";
    constant ap_const_lv64_8 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001000";
    constant ap_const_lv64_9 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001001";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv64_B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001011";
    constant ap_const_lv64_C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001100";
    constant ap_const_lv64_D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001101";
    constant ap_const_lv64_E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001110";
    constant ap_const_lv64_F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001111";
    constant ap_const_lv64_10 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010000";
    constant ap_const_lv64_11 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010001";
    constant ap_const_lv64_12 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010010";
    constant ap_const_lv64_13 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010011";
    constant ap_const_lv64_14 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010100";
    constant ap_const_lv64_15 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010101";
    constant ap_const_lv64_16 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010110";
    constant ap_const_lv64_17 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000010111";
    constant ap_const_lv64_18 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011000";
    constant ap_const_lv64_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011001";
    constant ap_const_lv64_1A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011010";
    constant ap_const_lv64_1B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011011";
    constant ap_const_lv64_1C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011100";
    constant ap_const_lv64_1D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011101";
    constant ap_const_lv64_1E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011110";
    constant ap_const_lv64_1F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011111";
    constant ap_const_lv64_20 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100000";
    constant ap_const_lv64_21 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100001";
    constant ap_const_lv64_22 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100010";
    constant ap_const_lv64_23 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100011";
    constant ap_const_lv64_24 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100100";
    constant ap_const_lv64_25 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100101";
    constant ap_const_lv64_26 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100110";
    constant ap_const_lv64_27 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000100111";
    constant ap_const_lv64_28 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101000";
    constant ap_const_lv64_29 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101001";
    constant ap_const_lv64_2A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101010";
    constant ap_const_lv64_2B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101011";
    constant ap_const_lv64_2C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101100";
    constant ap_const_lv64_2D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101101";
    constant ap_const_lv64_2E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101110";
    constant ap_const_lv64_2F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000101111";
    constant ap_const_lv64_30 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110000";
    constant ap_const_lv64_31 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110001";
    constant ap_const_lv64_32 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110010";
    constant ap_const_lv64_33 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110011";
    constant ap_const_lv64_34 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110100";
    constant ap_const_lv64_35 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110101";
    constant ap_const_lv64_36 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110110";
    constant ap_const_lv64_37 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110111";
    constant ap_const_lv64_38 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111000";
    constant ap_const_lv64_39 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111001";
    constant ap_const_lv64_3A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111010";
    constant ap_const_lv64_3B : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111011";
    constant ap_const_lv64_3C : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111100";
    constant ap_const_lv64_3D : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111101";
    constant ap_const_lv64_3E : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111110";
    constant ap_const_lv64_3F : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000111111";
    constant ap_const_lv64_800 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000100000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv64_140 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000101000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_start : STD_LOGIC;
    signal ap_done : STD_LOGIC;
    signal ap_idle : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (85 downto 0) := "00000000000000000000000000000000000000000000000000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal ap_ready : STD_LOGIC;
    signal sample_idx : STD_LOGIC_VECTOR (31 downto 0);
    signal W1 : STD_LOGIC_VECTOR (63 downto 0);
    signal W2 : STD_LOGIC_VECTOR (63 downto 0);
    signal WEIGHTS_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal ap_CS_fsm_state55 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state55 : signal is "none";
    signal ap_CS_fsm_state45 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state45 : signal is "none";
    signal ap_CS_fsm_state65 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state65 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal input_load_reg_2206 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal input_load_1_reg_2212 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal input_load_2_reg_2233 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_3_reg_2239 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_4_reg_2250 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal input_load_5_reg_2256 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal input_load_6_reg_2277 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_7_reg_2283 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_8_reg_2294 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal input_load_9_reg_2300 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal input_load_10_reg_2321 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_11_reg_2327 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_12_reg_2338 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal input_load_13_reg_2344 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal input_load_14_reg_2365 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_15_reg_2371 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_16_reg_2382 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal input_load_17_reg_2388 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal input_load_18_reg_2409 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_19_reg_2415 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_20_reg_2426 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal input_load_21_reg_2432 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal input_load_22_reg_2453 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_23_reg_2459 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_24_reg_2470 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal input_load_25_reg_2476 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal input_load_26_reg_2497 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_27_reg_2503 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_28_reg_2514 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal input_load_29_reg_2520 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal input_load_30_reg_2541 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_31_reg_2547 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_32_reg_2558 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal input_load_33_reg_2564 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal input_load_34_reg_2585 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_35_reg_2591 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_36_reg_2602 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal input_load_37_reg_2608 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal input_load_38_reg_2629 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_39_reg_2635 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_40_reg_2646 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal input_load_41_reg_2652 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal input_load_42_reg_2673 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_43_reg_2679 : STD_LOGIC_VECTOR (1 downto 0);
    signal W2_read_reg_2690 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal W1_read_reg_2698 : STD_LOGIC_VECTOR (63 downto 0);
    signal input_load_44_reg_2706 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_45_reg_2712 : STD_LOGIC_VECTOR (1 downto 0);
    signal WEIGHTS_addr_reg_2728 : STD_LOGIC_VECTOR (63 downto 0);
    signal input_load_46_reg_2738 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_47_reg_2744 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_48_reg_2755 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal input_load_49_reg_2761 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal input_load_50_reg_2782 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_51_reg_2788 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_52_reg_2799 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal input_load_53_reg_2805 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal input_load_54_reg_2826 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_55_reg_2832 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_56_reg_2853 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal input_load_57_reg_2859 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_reg_2875 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_1_reg_2880 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal input_load_58_reg_2900 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_59_reg_2906 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_2_reg_2917 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_3_reg_2922 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_60_reg_2937 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal input_load_61_reg_2943 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_4_reg_2959 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_5_reg_2964 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_load_62_reg_2979 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal input_load_63_reg_2985 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_6_reg_2991 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_7_reg_2996 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_8_reg_3011 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal input_1_load_9_reg_3016 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal input_1_load_10_reg_3041 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_11_reg_3046 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_load_reg_3061 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal hidden_pos_load_reg_3067 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_12_reg_3083 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_13_reg_3088 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal hidden_pos_load_1_reg_3108 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_load_2_reg_3114 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_14_reg_3125 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_15_reg_3130 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_load_3_reg_3145 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal hidden_pos_load_4_reg_3151 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_16_reg_3167 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_17_reg_3172 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal hidden_pos_load_5_reg_3192 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_load_6_reg_3198 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_18_reg_3209 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_19_reg_3214 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_load_7_reg_3229 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state42 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state42 : signal is "none";
    signal hidden_pos_load_8_reg_3235 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_20_reg_3251 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_21_reg_3256 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state43 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state43 : signal is "none";
    signal hidden_pos_load_9_reg_3276 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_load_10_reg_3282 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_22_reg_3293 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_23_reg_3298 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_load_11_reg_3313 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state44 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state44 : signal is "none";
    signal hidden_pos_load_12_reg_3319 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_24_reg_3335 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_25_reg_3340 : STD_LOGIC_VECTOR (1 downto 0);
    signal WEIGHTS_addr_1_reg_3355 : STD_LOGIC_VECTOR (63 downto 0);
    signal hidden_pos_load_13_reg_3365 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_load_14_reg_3371 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_26_reg_3382 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_27_reg_3387 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_load_15_reg_3402 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state46 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state46 : signal is "none";
    signal hidden_pos_load_16_reg_3408 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_28_reg_3424 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_29_reg_3429 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state47 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state47 : signal is "none";
    signal hidden_pos_load_17_reg_3449 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_load_18_reg_3455 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_30_reg_3466 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_31_reg_3471 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_load_19_reg_3486 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state48 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state48 : signal is "none";
    signal hidden_pos_load_20_reg_3492 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_32_reg_3508 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_33_reg_3513 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state49 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state49 : signal is "none";
    signal hidden_pos_load_21_reg_3533 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_load_22_reg_3539 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_34_reg_3550 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_35_reg_3555 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_load_23_reg_3570 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state50 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state50 : signal is "none";
    signal hidden_pos_load_24_reg_3576 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_36_reg_3592 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_37_reg_3597 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal hidden_pos_load_25_reg_3617 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_load_26_reg_3623 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_38_reg_3634 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_39_reg_3639 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_load_27_reg_3654 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal hidden_pos_load_28_reg_3660 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_40_reg_3676 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_41_reg_3681 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_load_29_reg_3696 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal hidden_pos_load_30_reg_3702 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_42_reg_3708 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_43_reg_3713 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_44_reg_3728 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal input_1_load_45_reg_3733 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_46_reg_3748 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_47_reg_3753 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_48_reg_3768 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state56 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state56 : signal is "none";
    signal input_1_load_49_reg_3773 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_50_reg_3788 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal input_1_load_51_reg_3793 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_52_reg_3808 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal input_1_load_53_reg_3813 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_54_reg_3828 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal input_1_load_55_reg_3833 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_56_reg_3848 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal input_1_load_57_reg_3853 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_58_reg_3868 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal input_1_load_59_reg_3873 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_60_reg_3888 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal input_1_load_61_reg_3893 : STD_LOGIC_VECTOR (1 downto 0);
    signal input_1_load_62_reg_3908 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal input_1_load_63_reg_3913 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_1_load_reg_3928 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state66 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state66 : signal is "none";
    signal hidden_neg_load_reg_3933 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_load_1_reg_3948 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state67 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state67 : signal is "none";
    signal hidden_neg_load_2_reg_3953 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_load_3_reg_3968 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state68 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state68 : signal is "none";
    signal hidden_neg_load_4_reg_3973 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_load_5_reg_3988 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state69 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state69 : signal is "none";
    signal hidden_neg_load_6_reg_3993 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_load_7_reg_4008 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state70 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state70 : signal is "none";
    signal hidden_neg_load_8_reg_4013 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_load_9_reg_4028 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state71 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state71 : signal is "none";
    signal hidden_neg_load_10_reg_4033 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_load_11_reg_4048 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state72 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state72 : signal is "none";
    signal hidden_neg_load_12_reg_4053 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_load_13_reg_4068 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state73 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state73 : signal is "none";
    signal hidden_neg_load_14_reg_4073 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_load_15_reg_4088 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state74 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state74 : signal is "none";
    signal hidden_neg_load_16_reg_4093 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_load_17_reg_4108 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state75 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state75 : signal is "none";
    signal hidden_neg_load_18_reg_4113 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_load_19_reg_4128 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state76 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state76 : signal is "none";
    signal hidden_neg_load_20_reg_4133 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_load_21_reg_4148 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state77 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state77 : signal is "none";
    signal hidden_neg_load_22_reg_4153 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_load_23_reg_4168 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state78 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state78 : signal is "none";
    signal hidden_neg_load_24_reg_4173 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_load_25_reg_4188 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state79 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state79 : signal is "none";
    signal hidden_neg_load_26_reg_4193 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_load_27_reg_4208 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state80 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state80 : signal is "none";
    signal hidden_neg_load_28_reg_4213 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_load_29_reg_4228 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state81 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state81 : signal is "none";
    signal hidden_neg_load_30_reg_4233 : STD_LOGIC_VECTOR (1 downto 0);
    signal in_pos_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in_pos_ce0 : STD_LOGIC;
    signal in_pos_we0 : STD_LOGIC;
    signal in_pos_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal in_pos_q1 : STD_LOGIC_VECTOR (1 downto 0);
    signal in_neg_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal in_neg_ce0 : STD_LOGIC;
    signal in_neg_we0 : STD_LOGIC;
    signal in_neg_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal in_neg_q1 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal hidden_pos_ce0 : STD_LOGIC;
    signal hidden_pos_we0 : STD_LOGIC;
    signal hidden_pos_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_pos_q1 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal hidden_neg_ce0 : STD_LOGIC;
    signal hidden_neg_we0 : STD_LOGIC;
    signal hidden_neg_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal hidden_neg_q1 : STD_LOGIC_VECTOR (1 downto 0);
    signal out_pos_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal out_pos_ce0 : STD_LOGIC;
    signal out_pos_we0 : STD_LOGIC;
    signal out_pos_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal out_neg_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal out_neg_ce0 : STD_LOGIC;
    signal out_neg_we0 : STD_LOGIC;
    signal out_neg_q0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_start : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_done : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_idle : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_ready : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_img_pos_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_img_pos_ce0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_pos_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_pos_ce0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_pos_we0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_pos_d0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_img_neg_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_img_neg_ce0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_neg_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_neg_ce0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_neg_we0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_neg_d0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_start : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_done : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_idle : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_ready : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_WVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_WLAST : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_RREADY : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_BREADY : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_hidden_pos_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_hidden_pos_ce0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_hidden_pos_we0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_hidden_pos_d0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_start : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_done : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_idle : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_ready : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_WVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_WLAST : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_RREADY : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_BREADY : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_out_pos_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_out_pos_ce0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_out_pos_we0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_out_pos_d0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_start : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_done : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_idle : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_ready : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_WVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_WLAST : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_RREADY : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_BREADY : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_hidden_neg_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_hidden_neg_ce0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_hidden_neg_we0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_hidden_neg_d0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_start : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_done : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_idle : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_ready : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_WVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_WLAST : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_RREADY : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_BREADY : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_out_neg_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_out_neg_ce0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_out_neg_we0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_out_neg_d0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_start : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_done : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_idle : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_ready : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WLAST : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_RREADY : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_BREADY : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_pos_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_pos_ce0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_neg_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_neg_ce0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_start : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_done : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_idle : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_ready : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WLAST : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARVALID : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_RREADY : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_BREADY : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_pos_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_pos_ce0 : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_neg_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_neg_ce0 : STD_LOGIC;
    signal WEIGHTS_0_AWVALID : STD_LOGIC;
    signal WEIGHTS_0_AWREADY : STD_LOGIC;
    signal WEIGHTS_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal WEIGHTS_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal WEIGHTS_0_WVALID : STD_LOGIC;
    signal WEIGHTS_0_WREADY : STD_LOGIC;
    signal WEIGHTS_0_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal WEIGHTS_0_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal WEIGHTS_0_ARVALID : STD_LOGIC;
    signal WEIGHTS_0_ARREADY : STD_LOGIC;
    signal WEIGHTS_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal WEIGHTS_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal WEIGHTS_0_RVALID : STD_LOGIC;
    signal WEIGHTS_0_RREADY : STD_LOGIC;
    signal WEIGHTS_0_RDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal WEIGHTS_0_RFIFONUM : STD_LOGIC_VECTOR (10 downto 0);
    signal WEIGHTS_0_BVALID : STD_LOGIC;
    signal WEIGHTS_0_BREADY : STD_LOGIC;
    signal grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_start_reg : STD_LOGIC := '0';
    signal grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_start_reg : STD_LOGIC := '0';
    signal grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state64 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state64 : signal is "none";
    signal grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state82 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state82 : signal is "none";
    signal grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state83 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state83 : signal is "none";
    signal ap_CS_fsm_state84 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state84 : signal is "none";
    signal grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state85 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state85 : signal is "none";
    signal ap_CS_fsm_state86 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state86 : signal is "none";
    signal in_pos_ce1_local : STD_LOGIC;
    signal in_pos_address1_local : STD_LOGIC_VECTOR (5 downto 0);
    signal in_pos_ce0_local : STD_LOGIC;
    signal in_pos_address0_local : STD_LOGIC_VECTOR (5 downto 0);
    signal in_neg_ce1_local : STD_LOGIC;
    signal in_neg_address1_local : STD_LOGIC_VECTOR (5 downto 0);
    signal in_neg_ce0_local : STD_LOGIC;
    signal in_neg_address0_local : STD_LOGIC_VECTOR (5 downto 0);
    signal hidden_pos_ce1_local : STD_LOGIC;
    signal hidden_pos_address1_local : STD_LOGIC_VECTOR (4 downto 0);
    signal hidden_pos_ce0_local : STD_LOGIC;
    signal hidden_pos_address0_local : STD_LOGIC_VECTOR (4 downto 0);
    signal hidden_neg_ce1_local : STD_LOGIC;
    signal hidden_neg_address1_local : STD_LOGIC_VECTOR (4 downto 0);
    signal hidden_neg_ce0_local : STD_LOGIC;
    signal hidden_neg_address0_local : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (85 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ST_fsm_state18_blk : STD_LOGIC;
    signal ap_ST_fsm_state19_blk : STD_LOGIC;
    signal ap_ST_fsm_state20_blk : STD_LOGIC;
    signal ap_ST_fsm_state21_blk : STD_LOGIC;
    signal ap_ST_fsm_state22_blk : STD_LOGIC;
    signal ap_ST_fsm_state23_blk : STD_LOGIC;
    signal ap_ST_fsm_state24_blk : STD_LOGIC;
    signal ap_ST_fsm_state25_blk : STD_LOGIC;
    signal ap_ST_fsm_state26_blk : STD_LOGIC;
    signal ap_ST_fsm_state27_blk : STD_LOGIC;
    signal ap_ST_fsm_state28_blk : STD_LOGIC;
    signal ap_ST_fsm_state29_blk : STD_LOGIC;
    signal ap_ST_fsm_state30_blk : STD_LOGIC;
    signal ap_ST_fsm_state31_blk : STD_LOGIC;
    signal ap_ST_fsm_state32_blk : STD_LOGIC;
    signal ap_ST_fsm_state33_blk : STD_LOGIC;
    signal ap_ST_fsm_state34_blk : STD_LOGIC;
    signal ap_ST_fsm_state35_blk : STD_LOGIC;
    signal ap_ST_fsm_state36_blk : STD_LOGIC;
    signal ap_ST_fsm_state37_blk : STD_LOGIC;
    signal ap_ST_fsm_state38_blk : STD_LOGIC;
    signal ap_ST_fsm_state39_blk : STD_LOGIC;
    signal ap_ST_fsm_state40_blk : STD_LOGIC;
    signal ap_ST_fsm_state41_blk : STD_LOGIC;
    signal ap_ST_fsm_state42_blk : STD_LOGIC;
    signal ap_ST_fsm_state43_blk : STD_LOGIC;
    signal ap_ST_fsm_state44_blk : STD_LOGIC;
    signal ap_ST_fsm_state45_blk : STD_LOGIC;
    signal ap_ST_fsm_state46_blk : STD_LOGIC;
    signal ap_ST_fsm_state47_blk : STD_LOGIC;
    signal ap_ST_fsm_state48_blk : STD_LOGIC;
    signal ap_ST_fsm_state49_blk : STD_LOGIC;
    signal ap_ST_fsm_state50_blk : STD_LOGIC;
    signal ap_ST_fsm_state51_blk : STD_LOGIC;
    signal ap_ST_fsm_state52_blk : STD_LOGIC;
    signal ap_ST_fsm_state53_blk : STD_LOGIC;
    signal ap_ST_fsm_state54_blk : STD_LOGIC;
    signal ap_ST_fsm_state55_blk : STD_LOGIC;
    signal ap_ST_fsm_state56_blk : STD_LOGIC;
    signal ap_ST_fsm_state57_blk : STD_LOGIC;
    signal ap_ST_fsm_state58_blk : STD_LOGIC;
    signal ap_ST_fsm_state59_blk : STD_LOGIC;
    signal ap_ST_fsm_state60_blk : STD_LOGIC;
    signal ap_ST_fsm_state61_blk : STD_LOGIC;
    signal ap_ST_fsm_state62_blk : STD_LOGIC;
    signal ap_ST_fsm_state63_blk : STD_LOGIC;
    signal ap_ST_fsm_state64_blk : STD_LOGIC;
    signal ap_ST_fsm_state65_blk : STD_LOGIC;
    signal ap_ST_fsm_state66_blk : STD_LOGIC;
    signal ap_ST_fsm_state67_blk : STD_LOGIC;
    signal ap_ST_fsm_state68_blk : STD_LOGIC;
    signal ap_ST_fsm_state69_blk : STD_LOGIC;
    signal ap_ST_fsm_state70_blk : STD_LOGIC;
    signal ap_ST_fsm_state71_blk : STD_LOGIC;
    signal ap_ST_fsm_state72_blk : STD_LOGIC;
    signal ap_ST_fsm_state73_blk : STD_LOGIC;
    signal ap_ST_fsm_state74_blk : STD_LOGIC;
    signal ap_ST_fsm_state75_blk : STD_LOGIC;
    signal ap_ST_fsm_state76_blk : STD_LOGIC;
    signal ap_ST_fsm_state77_blk : STD_LOGIC;
    signal ap_ST_fsm_state78_blk : STD_LOGIC;
    signal ap_ST_fsm_state79_blk : STD_LOGIC;
    signal ap_ST_fsm_state80_blk : STD_LOGIC;
    signal ap_ST_fsm_state81_blk : STD_LOGIC;
    signal ap_ST_fsm_state82_blk : STD_LOGIC;
    signal ap_ST_fsm_state83_blk : STD_LOGIC;
    signal ap_ST_fsm_state84_blk : STD_LOGIC;
    signal ap_ST_fsm_state85_blk : STD_LOGIC;
    signal ap_ST_fsm_state86_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component train_step_train_step_Pipeline_VITIS_LOOP_118_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        img_pos_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        img_pos_ce0 : OUT STD_LOGIC;
        img_pos_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_pos_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in_pos_ce0 : OUT STD_LOGIC;
        in_pos_we0 : OUT STD_LOGIC;
        in_pos_d0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        img_neg_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        img_neg_ce0 : OUT STD_LOGIC;
        img_neg_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
        in_neg_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        in_neg_ce0 : OUT STD_LOGIC;
        in_neg_we0 : OUT STD_LOGIC;
        in_neg_d0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component train_step_train_step_Pipeline_VITIS_LOOP_28_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_AWVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_AWREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_WEIGHTS_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_WEIGHTS_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_WREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_WEIGHTS_0_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WLAST : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_ARVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_ARREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_WEIGHTS_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_WEIGHTS_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RVALID : IN STD_LOGIC;
        m_axi_WEIGHTS_0_RREADY : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_WEIGHTS_0_RLAST : IN STD_LOGIC;
        m_axi_WEIGHTS_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_WEIGHTS_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_BVALID : IN STD_LOGIC;
        m_axi_WEIGHTS_0_BREADY : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        W1 : IN STD_LOGIC_VECTOR (63 downto 0);
        input_load_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_1_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_2_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_3_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_4_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_5_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_6_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_7_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_8_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_9_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_10_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_11_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_12_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_13_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_14_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_15_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_16_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_17_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_18_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_19_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_20_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_21_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_22_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_23_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_24_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_25_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_26_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_27_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_28_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_29_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_30_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_31_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_32_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_33_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_34_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_35_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_36_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_37_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_38_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_39_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_40_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_41_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_42_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_43_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_44_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_45_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_46_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_47_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_48_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_49_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_50_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_51_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_52_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_53_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_54_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_55_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_56_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_57_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_58_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_59_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_60_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_61_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_62_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln28_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        hidden_pos_ce0 : OUT STD_LOGIC;
        hidden_pos_we0 : OUT STD_LOGIC;
        hidden_pos_d0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component train_step_train_step_Pipeline_VITIS_LOOP_45_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_AWVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_AWREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_WEIGHTS_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_WEIGHTS_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_WREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_WEIGHTS_0_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WLAST : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_ARVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_ARREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_WEIGHTS_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_WEIGHTS_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RVALID : IN STD_LOGIC;
        m_axi_WEIGHTS_0_RREADY : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_WEIGHTS_0_RLAST : IN STD_LOGIC;
        m_axi_WEIGHTS_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_WEIGHTS_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_BVALID : IN STD_LOGIC;
        m_axi_WEIGHTS_0_BREADY : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        W2 : IN STD_LOGIC_VECTOR (63 downto 0);
        hidden_load_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_1_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_2_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_3_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_4_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_5_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_6_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_7_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_8_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_9_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_10_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_11_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_12_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_13_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_14_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_15_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_16_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_17_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_18_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_19_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_20_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_21_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_22_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_23_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_24_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_25_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_26_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_27_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_28_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_29_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln45_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        out_pos_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_pos_ce0 : OUT STD_LOGIC;
        out_pos_we0 : OUT STD_LOGIC;
        out_pos_d0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component train_step_train_step_Pipeline_VITIS_LOOP_28_11 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_AWVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_AWREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_WEIGHTS_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_WEIGHTS_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_WREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_WEIGHTS_0_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WLAST : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_ARVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_ARREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_WEIGHTS_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_WEIGHTS_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RVALID : IN STD_LOGIC;
        m_axi_WEIGHTS_0_RREADY : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_WEIGHTS_0_RLAST : IN STD_LOGIC;
        m_axi_WEIGHTS_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_WEIGHTS_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_BVALID : IN STD_LOGIC;
        m_axi_WEIGHTS_0_BREADY : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        W1 : IN STD_LOGIC_VECTOR (63 downto 0);
        input_1_load_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_1_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_2_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_3_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_4_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_5_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_6_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_7_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_8_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_9_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_10_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_11_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_12_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_13_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_14_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_15_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_16_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_17_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_18_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_19_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_20_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_21_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_22_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_23_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_24_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_25_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_26_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_27_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_28_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_29_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_30_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_31_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_32_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_33_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_34_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_35_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_36_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_37_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_38_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_39_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_40_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_41_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_42_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_43_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_44_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_45_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_46_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_47_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_48_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_49_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_50_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_51_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_52_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_53_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_54_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_55_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_56_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_57_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_58_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_59_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_60_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_61_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        input_1_load_62_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln28_2 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        hidden_neg_ce0 : OUT STD_LOGIC;
        hidden_neg_we0 : OUT STD_LOGIC;
        hidden_neg_d0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component train_step_train_step_Pipeline_VITIS_LOOP_45_12 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_AWVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_AWREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_WEIGHTS_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_WEIGHTS_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_WREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_WEIGHTS_0_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WLAST : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_ARVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_ARREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_WEIGHTS_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_WEIGHTS_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RVALID : IN STD_LOGIC;
        m_axi_WEIGHTS_0_RREADY : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_WEIGHTS_0_RLAST : IN STD_LOGIC;
        m_axi_WEIGHTS_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_WEIGHTS_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_BVALID : IN STD_LOGIC;
        m_axi_WEIGHTS_0_BREADY : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        W2 : IN STD_LOGIC_VECTOR (63 downto 0);
        hidden_1_load_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_1_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_2_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_3_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_4_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_5_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_6_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_7_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_8_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_9_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_10_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_11_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_12_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_13_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_14_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_15_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_16_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_17_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_18_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_19_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_20_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_21_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_22_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_23_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_24_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_25_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_26_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_27_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_28_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_neg_load_29_cast : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln45_2 : IN STD_LOGIC_VECTOR (1 downto 0);
        out_neg_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_neg_ce0 : OUT STD_LOGIC;
        out_neg_we0 : OUT STD_LOGIC;
        out_neg_d0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component train_step_train_step_Pipeline_VITIS_LOOP_64_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_AWVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_AWREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_WEIGHTS_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_WEIGHTS_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_WREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_WEIGHTS_0_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WLAST : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_ARVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_ARREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_WEIGHTS_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_WEIGHTS_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RVALID : IN STD_LOGIC;
        m_axi_WEIGHTS_0_RREADY : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_WEIGHTS_0_RLAST : IN STD_LOGIC;
        m_axi_WEIGHTS_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_WEIGHTS_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_BVALID : IN STD_LOGIC;
        m_axi_WEIGHTS_0_BREADY : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        out_pos_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_pos_ce0 : OUT STD_LOGIC;
        out_pos_q0 : IN STD_LOGIC_VECTOR (1 downto 0);
        out_neg_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_neg_ce0 : OUT STD_LOGIC;
        out_neg_q0 : IN STD_LOGIC_VECTOR (1 downto 0);
        W1 : IN STD_LOGIC_VECTOR (63 downto 0);
        input_load_cast184 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_1_cast185 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_2_cast186 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_3_cast187 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_4_cast188 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_5_cast189 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_6_cast190 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_7_cast191 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_8_cast192 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_9_cast193 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_10_cast194 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_11_cast195 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_12_cast196 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_13_cast197 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_14_cast198 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_15_cast199 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_16_cast200 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_17_cast201 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_18_cast202 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_19_cast203 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_20_cast204 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_21_cast205 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_22_cast206 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_23_cast207 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_24_cast208 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_25_cast209 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_26_cast210 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_27_cast211 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_28_cast212 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_29_cast213 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_30_cast214 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_31_cast215 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_32_cast216 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_33_cast217 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_34_cast218 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_35_cast219 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_36_cast220 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_37_cast221 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_38_cast222 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_39_cast223 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_40_cast224 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_41_cast225 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_42_cast226 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_43_cast227 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_44_cast228 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_45_cast229 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_46_cast230 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_47_cast231 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_48_cast232 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_49_cast233 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_50_cast234 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_51_cast235 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_52_cast236 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_53_cast237 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_54_cast238 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_55_cast239 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_56_cast240 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_57_cast241 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_58_cast242 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_59_cast243 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_60_cast244 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_61_cast245 : IN STD_LOGIC_VECTOR (1 downto 0);
        input_load_62_cast246 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln28 : IN STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component train_step_train_step_Pipeline_VITIS_LOOP_85_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_AWVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_AWREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_WEIGHTS_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_WEIGHTS_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_WREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_WEIGHTS_0_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WLAST : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_ARVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_ARREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_WEIGHTS_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_WEIGHTS_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RVALID : IN STD_LOGIC;
        m_axi_WEIGHTS_0_RREADY : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_WEIGHTS_0_RLAST : IN STD_LOGIC;
        m_axi_WEIGHTS_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_WEIGHTS_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_BVALID : IN STD_LOGIC;
        m_axi_WEIGHTS_0_BREADY : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        out_pos_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_pos_ce0 : OUT STD_LOGIC;
        out_pos_q0 : IN STD_LOGIC_VECTOR (1 downto 0);
        out_neg_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        out_neg_ce0 : OUT STD_LOGIC;
        out_neg_q0 : IN STD_LOGIC_VECTOR (1 downto 0);
        W2 : IN STD_LOGIC_VECTOR (63 downto 0);
        hidden_load_cast248 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_cast249 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_1_cast250 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_2_cast251 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_3_cast252 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_4_cast253 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_5_cast254 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_6_cast255 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_7_cast256 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_8_cast257 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_9_cast258 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_10_cast259 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_11_cast260 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_12_cast261 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_13_cast262 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_14_cast263 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_15_cast264 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_16_cast265 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_17_cast266 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_18_cast267 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_19_cast268 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_20_cast269 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_21_cast270 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_22_cast271 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_23_cast272 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_24_cast273 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_25_cast274 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_26_cast275 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_27_cast276 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_28_cast277 : IN STD_LOGIC_VECTOR (1 downto 0);
        hidden_pos_load_29_cast278 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln45 : IN STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component train_step_in_pos_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (1 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        address1 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component train_step_hidden_pos_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (1 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        address1 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component train_step_out_pos_RAM_AUTO_1R1W IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (1 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (1 downto 0) );
    end component;


    component train_step_CTRL_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        sample_idx : OUT STD_LOGIC_VECTOR (31 downto 0);
        ap_start : OUT STD_LOGIC;
        interrupt : OUT STD_LOGIC;
        ap_ready : IN STD_LOGIC;
        ap_done : IN STD_LOGIC;
        ap_idle : IN STD_LOGIC );
    end component;


    component train_step_control_s_axi IS
    generic (
        C_S_AXI_ADDR_WIDTH : INTEGER;
        C_S_AXI_DATA_WIDTH : INTEGER );
    port (
        AWVALID : IN STD_LOGIC;
        AWREADY : OUT STD_LOGIC;
        AWADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        WVALID : IN STD_LOGIC;
        WREADY : OUT STD_LOGIC;
        WDATA : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : IN STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH/8-1 downto 0);
        ARVALID : IN STD_LOGIC;
        ARREADY : OUT STD_LOGIC;
        ARADDR : IN STD_LOGIC_VECTOR (C_S_AXI_ADDR_WIDTH-1 downto 0);
        RVALID : OUT STD_LOGIC;
        RREADY : IN STD_LOGIC;
        RDATA : OUT STD_LOGIC_VECTOR (C_S_AXI_DATA_WIDTH-1 downto 0);
        RRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        BVALID : OUT STD_LOGIC;
        BREADY : IN STD_LOGIC;
        BRESP : OUT STD_LOGIC_VECTOR (1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        W1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        W2 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component train_step_WEIGHTS_m_axi IS
    generic (
        CONSERVATIVE : INTEGER;
        USER_MAXREQS : INTEGER;
        MAX_READ_BURST_LENGTH : INTEGER;
        MAX_WRITE_BURST_LENGTH : INTEGER;
        C_M_AXI_ID_WIDTH : INTEGER;
        C_M_AXI_ADDR_WIDTH : INTEGER;
        C_M_AXI_DATA_WIDTH : INTEGER;
        C_M_AXI_AWUSER_WIDTH : INTEGER;
        C_M_AXI_ARUSER_WIDTH : INTEGER;
        C_M_AXI_WUSER_WIDTH : INTEGER;
        C_M_AXI_RUSER_WIDTH : INTEGER;
        C_M_AXI_BUSER_WIDTH : INTEGER;
        C_USER_VALUE : INTEGER;
        C_PROT_VALUE : INTEGER;
        C_CACHE_VALUE : INTEGER;
        CH0_USER_RFIFONUM_WIDTH : INTEGER;
        CH0_USER_DW : INTEGER;
        CH0_USER_AW : INTEGER;
        NUM_READ_OUTSTANDING : INTEGER;
        NUM_WRITE_OUTSTANDING : INTEGER );
    port (
        AWVALID : OUT STD_LOGIC;
        AWREADY : IN STD_LOGIC;
        AWADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        AWID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        AWLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        AWUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_AWUSER_WIDTH-1 downto 0);
        WVALID : OUT STD_LOGIC;
        WREADY : IN STD_LOGIC;
        WDATA : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        WSTRB : OUT STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH/8-1 downto 0);
        WLAST : OUT STD_LOGIC;
        WID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        WUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_WUSER_WIDTH-1 downto 0);
        ARVALID : OUT STD_LOGIC;
        ARREADY : IN STD_LOGIC;
        ARADDR : OUT STD_LOGIC_VECTOR (C_M_AXI_ADDR_WIDTH-1 downto 0);
        ARID : OUT STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        ARLEN : OUT STD_LOGIC_VECTOR (7 downto 0);
        ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        ARUSER : OUT STD_LOGIC_VECTOR (C_M_AXI_ARUSER_WIDTH-1 downto 0);
        RVALID : IN STD_LOGIC;
        RREADY : OUT STD_LOGIC;
        RDATA : IN STD_LOGIC_VECTOR (C_M_AXI_DATA_WIDTH-1 downto 0);
        RLAST : IN STD_LOGIC;
        RID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        RUSER : IN STD_LOGIC_VECTOR (C_M_AXI_RUSER_WIDTH-1 downto 0);
        RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BVALID : IN STD_LOGIC;
        BREADY : OUT STD_LOGIC;
        BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        BID : IN STD_LOGIC_VECTOR (C_M_AXI_ID_WIDTH-1 downto 0);
        BUSER : IN STD_LOGIC_VECTOR (C_M_AXI_BUSER_WIDTH-1 downto 0);
        ACLK : IN STD_LOGIC;
        ARESET : IN STD_LOGIC;
        ACLK_EN : IN STD_LOGIC;
        I_CH0_ARVALID : IN STD_LOGIC;
        I_CH0_ARREADY : OUT STD_LOGIC;
        I_CH0_ARADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_ARLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_RVALID : OUT STD_LOGIC;
        I_CH0_RREADY : IN STD_LOGIC;
        I_CH0_RDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        I_CH0_RFIFONUM : OUT STD_LOGIC_VECTOR (10 downto 0);
        I_CH0_AWVALID : IN STD_LOGIC;
        I_CH0_AWREADY : OUT STD_LOGIC;
        I_CH0_AWADDR : IN STD_LOGIC_VECTOR (63 downto 0);
        I_CH0_AWLEN : IN STD_LOGIC_VECTOR (31 downto 0);
        I_CH0_WVALID : IN STD_LOGIC;
        I_CH0_WREADY : OUT STD_LOGIC;
        I_CH0_WDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        I_CH0_WSTRB : IN STD_LOGIC_VECTOR (0 downto 0);
        I_CH0_BVALID : OUT STD_LOGIC;
        I_CH0_BREADY : IN STD_LOGIC );
    end component;



begin
    in_pos_U : component train_step_in_pos_RAM_AUTO_1R1W
    generic map (
        DataWidth => 2,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => in_pos_address0,
        ce0 => in_pos_ce0,
        we0 => in_pos_we0,
        d0 => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_pos_d0,
        q0 => in_pos_q0,
        address1 => in_pos_address1_local,
        ce1 => in_pos_ce1_local,
        q1 => in_pos_q1);

    in_neg_U : component train_step_in_pos_RAM_AUTO_1R1W
    generic map (
        DataWidth => 2,
        AddressRange => 64,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => in_neg_address0,
        ce0 => in_neg_ce0,
        we0 => in_neg_we0,
        d0 => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_neg_d0,
        q0 => in_neg_q0,
        address1 => in_neg_address1_local,
        ce1 => in_neg_ce1_local,
        q1 => in_neg_q1);

    hidden_pos_U : component train_step_hidden_pos_RAM_AUTO_1R1W
    generic map (
        DataWidth => 2,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => hidden_pos_address0,
        ce0 => hidden_pos_ce0,
        we0 => hidden_pos_we0,
        d0 => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_hidden_pos_d0,
        q0 => hidden_pos_q0,
        address1 => hidden_pos_address1_local,
        ce1 => hidden_pos_ce1_local,
        q1 => hidden_pos_q1);

    hidden_neg_U : component train_step_hidden_pos_RAM_AUTO_1R1W
    generic map (
        DataWidth => 2,
        AddressRange => 32,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => hidden_neg_address0,
        ce0 => hidden_neg_ce0,
        we0 => hidden_neg_we0,
        d0 => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_hidden_neg_d0,
        q0 => hidden_neg_q0,
        address1 => hidden_neg_address1_local,
        ce1 => hidden_neg_ce1_local,
        q1 => hidden_neg_q1);

    out_pos_U : component train_step_out_pos_RAM_AUTO_1R1W
    generic map (
        DataWidth => 2,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => out_pos_address0,
        ce0 => out_pos_ce0,
        we0 => out_pos_we0,
        d0 => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_out_pos_d0,
        q0 => out_pos_q0);

    out_neg_U : component train_step_out_pos_RAM_AUTO_1R1W
    generic map (
        DataWidth => 2,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => out_neg_address0,
        ce0 => out_neg_ce0,
        we0 => out_neg_we0,
        d0 => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_out_neg_d0,
        q0 => out_neg_q0);

    grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826 : component train_step_train_step_Pipeline_VITIS_LOOP_118_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_start,
        ap_done => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_done,
        ap_idle => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_idle,
        ap_ready => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_ready,
        img_pos_address0 => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_img_pos_address0,
        img_pos_ce0 => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_img_pos_ce0,
        img_pos_q0 => img_pos_q0,
        in_pos_address0 => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_pos_address0,
        in_pos_ce0 => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_pos_ce0,
        in_pos_we0 => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_pos_we0,
        in_pos_d0 => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_pos_d0,
        img_neg_address0 => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_img_neg_address0,
        img_neg_ce0 => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_img_neg_ce0,
        img_neg_q0 => img_neg_q0,
        in_neg_address0 => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_neg_address0,
        in_neg_ce0 => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_neg_ce0,
        in_neg_we0 => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_neg_we0,
        in_neg_d0 => grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_neg_d0);

    grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838 : component train_step_train_step_Pipeline_VITIS_LOOP_28_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_start,
        ap_done => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_done,
        ap_idle => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_idle,
        ap_ready => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_ready,
        m_axi_WEIGHTS_0_AWVALID => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWVALID,
        m_axi_WEIGHTS_0_AWREADY => ap_const_logic_0,
        m_axi_WEIGHTS_0_AWADDR => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWADDR,
        m_axi_WEIGHTS_0_AWID => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWID,
        m_axi_WEIGHTS_0_AWLEN => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWLEN,
        m_axi_WEIGHTS_0_AWSIZE => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWSIZE,
        m_axi_WEIGHTS_0_AWBURST => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWBURST,
        m_axi_WEIGHTS_0_AWLOCK => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWLOCK,
        m_axi_WEIGHTS_0_AWCACHE => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWCACHE,
        m_axi_WEIGHTS_0_AWPROT => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWPROT,
        m_axi_WEIGHTS_0_AWQOS => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWQOS,
        m_axi_WEIGHTS_0_AWREGION => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWREGION,
        m_axi_WEIGHTS_0_AWUSER => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_AWUSER,
        m_axi_WEIGHTS_0_WVALID => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_WVALID,
        m_axi_WEIGHTS_0_WREADY => ap_const_logic_0,
        m_axi_WEIGHTS_0_WDATA => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_WDATA,
        m_axi_WEIGHTS_0_WSTRB => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_WSTRB,
        m_axi_WEIGHTS_0_WLAST => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_WLAST,
        m_axi_WEIGHTS_0_WID => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_WID,
        m_axi_WEIGHTS_0_WUSER => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_WUSER,
        m_axi_WEIGHTS_0_ARVALID => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARVALID,
        m_axi_WEIGHTS_0_ARREADY => WEIGHTS_0_ARREADY,
        m_axi_WEIGHTS_0_ARADDR => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARADDR,
        m_axi_WEIGHTS_0_ARID => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARID,
        m_axi_WEIGHTS_0_ARLEN => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARLEN,
        m_axi_WEIGHTS_0_ARSIZE => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARSIZE,
        m_axi_WEIGHTS_0_ARBURST => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARBURST,
        m_axi_WEIGHTS_0_ARLOCK => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARLOCK,
        m_axi_WEIGHTS_0_ARCACHE => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARCACHE,
        m_axi_WEIGHTS_0_ARPROT => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARPROT,
        m_axi_WEIGHTS_0_ARQOS => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARQOS,
        m_axi_WEIGHTS_0_ARREGION => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARREGION,
        m_axi_WEIGHTS_0_ARUSER => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARUSER,
        m_axi_WEIGHTS_0_RVALID => WEIGHTS_0_RVALID,
        m_axi_WEIGHTS_0_RREADY => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_RREADY,
        m_axi_WEIGHTS_0_RDATA => WEIGHTS_0_RDATA,
        m_axi_WEIGHTS_0_RLAST => ap_const_logic_0,
        m_axi_WEIGHTS_0_RID => ap_const_lv1_0,
        m_axi_WEIGHTS_0_RFIFONUM => WEIGHTS_0_RFIFONUM,
        m_axi_WEIGHTS_0_RUSER => ap_const_lv1_0,
        m_axi_WEIGHTS_0_RRESP => ap_const_lv2_0,
        m_axi_WEIGHTS_0_BVALID => ap_const_logic_0,
        m_axi_WEIGHTS_0_BREADY => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_BREADY,
        m_axi_WEIGHTS_0_BRESP => ap_const_lv2_0,
        m_axi_WEIGHTS_0_BID => ap_const_lv1_0,
        m_axi_WEIGHTS_0_BUSER => ap_const_lv1_0,
        W1 => W1_read_reg_2698,
        input_load_cast => input_load_reg_2206,
        input_load_1_cast => input_load_1_reg_2212,
        input_load_2_cast => input_load_2_reg_2233,
        input_load_3_cast => input_load_3_reg_2239,
        input_load_4_cast => input_load_4_reg_2250,
        input_load_5_cast => input_load_5_reg_2256,
        input_load_6_cast => input_load_6_reg_2277,
        input_load_7_cast => input_load_7_reg_2283,
        input_load_8_cast => input_load_8_reg_2294,
        input_load_9_cast => input_load_9_reg_2300,
        input_load_10_cast => input_load_10_reg_2321,
        input_load_11_cast => input_load_11_reg_2327,
        input_load_12_cast => input_load_12_reg_2338,
        input_load_13_cast => input_load_13_reg_2344,
        input_load_14_cast => input_load_14_reg_2365,
        input_load_15_cast => input_load_15_reg_2371,
        input_load_16_cast => input_load_16_reg_2382,
        input_load_17_cast => input_load_17_reg_2388,
        input_load_18_cast => input_load_18_reg_2409,
        input_load_19_cast => input_load_19_reg_2415,
        input_load_20_cast => input_load_20_reg_2426,
        input_load_21_cast => input_load_21_reg_2432,
        input_load_22_cast => input_load_22_reg_2453,
        input_load_23_cast => input_load_23_reg_2459,
        input_load_24_cast => input_load_24_reg_2470,
        input_load_25_cast => input_load_25_reg_2476,
        input_load_26_cast => input_load_26_reg_2497,
        input_load_27_cast => input_load_27_reg_2503,
        input_load_28_cast => input_load_28_reg_2514,
        input_load_29_cast => input_load_29_reg_2520,
        input_load_30_cast => input_load_30_reg_2541,
        input_load_31_cast => input_load_31_reg_2547,
        input_load_32_cast => input_load_32_reg_2558,
        input_load_33_cast => input_load_33_reg_2564,
        input_load_34_cast => input_load_34_reg_2585,
        input_load_35_cast => input_load_35_reg_2591,
        input_load_36_cast => input_load_36_reg_2602,
        input_load_37_cast => input_load_37_reg_2608,
        input_load_38_cast => input_load_38_reg_2629,
        input_load_39_cast => input_load_39_reg_2635,
        input_load_40_cast => input_load_40_reg_2646,
        input_load_41_cast => input_load_41_reg_2652,
        input_load_42_cast => input_load_42_reg_2673,
        input_load_43_cast => input_load_43_reg_2679,
        input_load_44_cast => input_load_44_reg_2706,
        input_load_45_cast => input_load_45_reg_2712,
        input_load_46_cast => input_load_46_reg_2738,
        input_load_47_cast => input_load_47_reg_2744,
        input_load_48_cast => input_load_48_reg_2755,
        input_load_49_cast => input_load_49_reg_2761,
        input_load_50_cast => input_load_50_reg_2782,
        input_load_51_cast => input_load_51_reg_2788,
        input_load_52_cast => input_load_52_reg_2799,
        input_load_53_cast => input_load_53_reg_2805,
        input_load_54_cast => input_load_54_reg_2826,
        input_load_55_cast => input_load_55_reg_2832,
        input_load_56_cast => input_load_56_reg_2853,
        input_load_57_cast => input_load_57_reg_2859,
        input_load_58_cast => input_load_58_reg_2900,
        input_load_59_cast => input_load_59_reg_2906,
        input_load_60_cast => input_load_60_reg_2937,
        input_load_61_cast => input_load_61_reg_2943,
        input_load_62_cast => input_load_62_reg_2979,
        sext_ln28_1 => input_load_63_reg_2985,
        hidden_pos_address0 => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_hidden_pos_address0,
        hidden_pos_ce0 => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_hidden_pos_ce0,
        hidden_pos_we0 => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_hidden_pos_we0,
        hidden_pos_d0 => grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_hidden_pos_d0);

    grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912 : component train_step_train_step_Pipeline_VITIS_LOOP_45_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_start,
        ap_done => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_done,
        ap_idle => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_idle,
        ap_ready => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_ready,
        m_axi_WEIGHTS_0_AWVALID => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWVALID,
        m_axi_WEIGHTS_0_AWREADY => ap_const_logic_0,
        m_axi_WEIGHTS_0_AWADDR => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWADDR,
        m_axi_WEIGHTS_0_AWID => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWID,
        m_axi_WEIGHTS_0_AWLEN => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWLEN,
        m_axi_WEIGHTS_0_AWSIZE => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWSIZE,
        m_axi_WEIGHTS_0_AWBURST => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWBURST,
        m_axi_WEIGHTS_0_AWLOCK => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWLOCK,
        m_axi_WEIGHTS_0_AWCACHE => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWCACHE,
        m_axi_WEIGHTS_0_AWPROT => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWPROT,
        m_axi_WEIGHTS_0_AWQOS => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWQOS,
        m_axi_WEIGHTS_0_AWREGION => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWREGION,
        m_axi_WEIGHTS_0_AWUSER => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_AWUSER,
        m_axi_WEIGHTS_0_WVALID => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_WVALID,
        m_axi_WEIGHTS_0_WREADY => ap_const_logic_0,
        m_axi_WEIGHTS_0_WDATA => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_WDATA,
        m_axi_WEIGHTS_0_WSTRB => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_WSTRB,
        m_axi_WEIGHTS_0_WLAST => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_WLAST,
        m_axi_WEIGHTS_0_WID => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_WID,
        m_axi_WEIGHTS_0_WUSER => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_WUSER,
        m_axi_WEIGHTS_0_ARVALID => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARVALID,
        m_axi_WEIGHTS_0_ARREADY => WEIGHTS_0_ARREADY,
        m_axi_WEIGHTS_0_ARADDR => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARADDR,
        m_axi_WEIGHTS_0_ARID => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARID,
        m_axi_WEIGHTS_0_ARLEN => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARLEN,
        m_axi_WEIGHTS_0_ARSIZE => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARSIZE,
        m_axi_WEIGHTS_0_ARBURST => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARBURST,
        m_axi_WEIGHTS_0_ARLOCK => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARLOCK,
        m_axi_WEIGHTS_0_ARCACHE => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARCACHE,
        m_axi_WEIGHTS_0_ARPROT => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARPROT,
        m_axi_WEIGHTS_0_ARQOS => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARQOS,
        m_axi_WEIGHTS_0_ARREGION => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARREGION,
        m_axi_WEIGHTS_0_ARUSER => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARUSER,
        m_axi_WEIGHTS_0_RVALID => WEIGHTS_0_RVALID,
        m_axi_WEIGHTS_0_RREADY => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_RREADY,
        m_axi_WEIGHTS_0_RDATA => WEIGHTS_0_RDATA,
        m_axi_WEIGHTS_0_RLAST => ap_const_logic_0,
        m_axi_WEIGHTS_0_RID => ap_const_lv1_0,
        m_axi_WEIGHTS_0_RFIFONUM => WEIGHTS_0_RFIFONUM,
        m_axi_WEIGHTS_0_RUSER => ap_const_lv1_0,
        m_axi_WEIGHTS_0_RRESP => ap_const_lv2_0,
        m_axi_WEIGHTS_0_BVALID => ap_const_logic_0,
        m_axi_WEIGHTS_0_BREADY => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_BREADY,
        m_axi_WEIGHTS_0_BRESP => ap_const_lv2_0,
        m_axi_WEIGHTS_0_BID => ap_const_lv1_0,
        m_axi_WEIGHTS_0_BUSER => ap_const_lv1_0,
        W2 => W2_read_reg_2690,
        hidden_load_cast => hidden_load_reg_3061,
        hidden_pos_load_cast => hidden_pos_load_reg_3067,
        hidden_pos_load_1_cast => hidden_pos_load_1_reg_3108,
        hidden_pos_load_2_cast => hidden_pos_load_2_reg_3114,
        hidden_pos_load_3_cast => hidden_pos_load_3_reg_3145,
        hidden_pos_load_4_cast => hidden_pos_load_4_reg_3151,
        hidden_pos_load_5_cast => hidden_pos_load_5_reg_3192,
        hidden_pos_load_6_cast => hidden_pos_load_6_reg_3198,
        hidden_pos_load_7_cast => hidden_pos_load_7_reg_3229,
        hidden_pos_load_8_cast => hidden_pos_load_8_reg_3235,
        hidden_pos_load_9_cast => hidden_pos_load_9_reg_3276,
        hidden_pos_load_10_cast => hidden_pos_load_10_reg_3282,
        hidden_pos_load_11_cast => hidden_pos_load_11_reg_3313,
        hidden_pos_load_12_cast => hidden_pos_load_12_reg_3319,
        hidden_pos_load_13_cast => hidden_pos_load_13_reg_3365,
        hidden_pos_load_14_cast => hidden_pos_load_14_reg_3371,
        hidden_pos_load_15_cast => hidden_pos_load_15_reg_3402,
        hidden_pos_load_16_cast => hidden_pos_load_16_reg_3408,
        hidden_pos_load_17_cast => hidden_pos_load_17_reg_3449,
        hidden_pos_load_18_cast => hidden_pos_load_18_reg_3455,
        hidden_pos_load_19_cast => hidden_pos_load_19_reg_3486,
        hidden_pos_load_20_cast => hidden_pos_load_20_reg_3492,
        hidden_pos_load_21_cast => hidden_pos_load_21_reg_3533,
        hidden_pos_load_22_cast => hidden_pos_load_22_reg_3539,
        hidden_pos_load_23_cast => hidden_pos_load_23_reg_3570,
        hidden_pos_load_24_cast => hidden_pos_load_24_reg_3576,
        hidden_pos_load_25_cast => hidden_pos_load_25_reg_3617,
        hidden_pos_load_26_cast => hidden_pos_load_26_reg_3623,
        hidden_pos_load_27_cast => hidden_pos_load_27_reg_3654,
        hidden_pos_load_28_cast => hidden_pos_load_28_reg_3660,
        hidden_pos_load_29_cast => hidden_pos_load_29_reg_3696,
        sext_ln45_1 => hidden_pos_load_30_reg_3702,
        out_pos_address0 => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_out_pos_address0,
        out_pos_ce0 => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_out_pos_ce0,
        out_pos_we0 => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_out_pos_we0,
        out_pos_d0 => grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_out_pos_d0);

    grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954 : component train_step_train_step_Pipeline_VITIS_LOOP_28_11
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_start,
        ap_done => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_done,
        ap_idle => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_idle,
        ap_ready => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_ready,
        m_axi_WEIGHTS_0_AWVALID => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWVALID,
        m_axi_WEIGHTS_0_AWREADY => ap_const_logic_0,
        m_axi_WEIGHTS_0_AWADDR => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWADDR,
        m_axi_WEIGHTS_0_AWID => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWID,
        m_axi_WEIGHTS_0_AWLEN => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWLEN,
        m_axi_WEIGHTS_0_AWSIZE => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWSIZE,
        m_axi_WEIGHTS_0_AWBURST => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWBURST,
        m_axi_WEIGHTS_0_AWLOCK => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWLOCK,
        m_axi_WEIGHTS_0_AWCACHE => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWCACHE,
        m_axi_WEIGHTS_0_AWPROT => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWPROT,
        m_axi_WEIGHTS_0_AWQOS => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWQOS,
        m_axi_WEIGHTS_0_AWREGION => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWREGION,
        m_axi_WEIGHTS_0_AWUSER => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_AWUSER,
        m_axi_WEIGHTS_0_WVALID => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_WVALID,
        m_axi_WEIGHTS_0_WREADY => ap_const_logic_0,
        m_axi_WEIGHTS_0_WDATA => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_WDATA,
        m_axi_WEIGHTS_0_WSTRB => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_WSTRB,
        m_axi_WEIGHTS_0_WLAST => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_WLAST,
        m_axi_WEIGHTS_0_WID => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_WID,
        m_axi_WEIGHTS_0_WUSER => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_WUSER,
        m_axi_WEIGHTS_0_ARVALID => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARVALID,
        m_axi_WEIGHTS_0_ARREADY => WEIGHTS_0_ARREADY,
        m_axi_WEIGHTS_0_ARADDR => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARADDR,
        m_axi_WEIGHTS_0_ARID => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARID,
        m_axi_WEIGHTS_0_ARLEN => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARLEN,
        m_axi_WEIGHTS_0_ARSIZE => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARSIZE,
        m_axi_WEIGHTS_0_ARBURST => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARBURST,
        m_axi_WEIGHTS_0_ARLOCK => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARLOCK,
        m_axi_WEIGHTS_0_ARCACHE => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARCACHE,
        m_axi_WEIGHTS_0_ARPROT => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARPROT,
        m_axi_WEIGHTS_0_ARQOS => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARQOS,
        m_axi_WEIGHTS_0_ARREGION => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARREGION,
        m_axi_WEIGHTS_0_ARUSER => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARUSER,
        m_axi_WEIGHTS_0_RVALID => WEIGHTS_0_RVALID,
        m_axi_WEIGHTS_0_RREADY => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_RREADY,
        m_axi_WEIGHTS_0_RDATA => WEIGHTS_0_RDATA,
        m_axi_WEIGHTS_0_RLAST => ap_const_logic_0,
        m_axi_WEIGHTS_0_RID => ap_const_lv1_0,
        m_axi_WEIGHTS_0_RFIFONUM => WEIGHTS_0_RFIFONUM,
        m_axi_WEIGHTS_0_RUSER => ap_const_lv1_0,
        m_axi_WEIGHTS_0_RRESP => ap_const_lv2_0,
        m_axi_WEIGHTS_0_BVALID => ap_const_logic_0,
        m_axi_WEIGHTS_0_BREADY => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_BREADY,
        m_axi_WEIGHTS_0_BRESP => ap_const_lv2_0,
        m_axi_WEIGHTS_0_BID => ap_const_lv1_0,
        m_axi_WEIGHTS_0_BUSER => ap_const_lv1_0,
        W1 => W1_read_reg_2698,
        input_1_load_cast => input_1_load_reg_2875,
        input_1_load_1_cast => input_1_load_1_reg_2880,
        input_1_load_2_cast => input_1_load_2_reg_2917,
        input_1_load_3_cast => input_1_load_3_reg_2922,
        input_1_load_4_cast => input_1_load_4_reg_2959,
        input_1_load_5_cast => input_1_load_5_reg_2964,
        input_1_load_6_cast => input_1_load_6_reg_2991,
        input_1_load_7_cast => input_1_load_7_reg_2996,
        input_1_load_8_cast => input_1_load_8_reg_3011,
        input_1_load_9_cast => input_1_load_9_reg_3016,
        input_1_load_10_cast => input_1_load_10_reg_3041,
        input_1_load_11_cast => input_1_load_11_reg_3046,
        input_1_load_12_cast => input_1_load_12_reg_3083,
        input_1_load_13_cast => input_1_load_13_reg_3088,
        input_1_load_14_cast => input_1_load_14_reg_3125,
        input_1_load_15_cast => input_1_load_15_reg_3130,
        input_1_load_16_cast => input_1_load_16_reg_3167,
        input_1_load_17_cast => input_1_load_17_reg_3172,
        input_1_load_18_cast => input_1_load_18_reg_3209,
        input_1_load_19_cast => input_1_load_19_reg_3214,
        input_1_load_20_cast => input_1_load_20_reg_3251,
        input_1_load_21_cast => input_1_load_21_reg_3256,
        input_1_load_22_cast => input_1_load_22_reg_3293,
        input_1_load_23_cast => input_1_load_23_reg_3298,
        input_1_load_24_cast => input_1_load_24_reg_3335,
        input_1_load_25_cast => input_1_load_25_reg_3340,
        input_1_load_26_cast => input_1_load_26_reg_3382,
        input_1_load_27_cast => input_1_load_27_reg_3387,
        input_1_load_28_cast => input_1_load_28_reg_3424,
        input_1_load_29_cast => input_1_load_29_reg_3429,
        input_1_load_30_cast => input_1_load_30_reg_3466,
        input_1_load_31_cast => input_1_load_31_reg_3471,
        input_1_load_32_cast => input_1_load_32_reg_3508,
        input_1_load_33_cast => input_1_load_33_reg_3513,
        input_1_load_34_cast => input_1_load_34_reg_3550,
        input_1_load_35_cast => input_1_load_35_reg_3555,
        input_1_load_36_cast => input_1_load_36_reg_3592,
        input_1_load_37_cast => input_1_load_37_reg_3597,
        input_1_load_38_cast => input_1_load_38_reg_3634,
        input_1_load_39_cast => input_1_load_39_reg_3639,
        input_1_load_40_cast => input_1_load_40_reg_3676,
        input_1_load_41_cast => input_1_load_41_reg_3681,
        input_1_load_42_cast => input_1_load_42_reg_3708,
        input_1_load_43_cast => input_1_load_43_reg_3713,
        input_1_load_44_cast => input_1_load_44_reg_3728,
        input_1_load_45_cast => input_1_load_45_reg_3733,
        input_1_load_46_cast => input_1_load_46_reg_3748,
        input_1_load_47_cast => input_1_load_47_reg_3753,
        input_1_load_48_cast => input_1_load_48_reg_3768,
        input_1_load_49_cast => input_1_load_49_reg_3773,
        input_1_load_50_cast => input_1_load_50_reg_3788,
        input_1_load_51_cast => input_1_load_51_reg_3793,
        input_1_load_52_cast => input_1_load_52_reg_3808,
        input_1_load_53_cast => input_1_load_53_reg_3813,
        input_1_load_54_cast => input_1_load_54_reg_3828,
        input_1_load_55_cast => input_1_load_55_reg_3833,
        input_1_load_56_cast => input_1_load_56_reg_3848,
        input_1_load_57_cast => input_1_load_57_reg_3853,
        input_1_load_58_cast => input_1_load_58_reg_3868,
        input_1_load_59_cast => input_1_load_59_reg_3873,
        input_1_load_60_cast => input_1_load_60_reg_3888,
        input_1_load_61_cast => input_1_load_61_reg_3893,
        input_1_load_62_cast => input_1_load_62_reg_3908,
        sext_ln28_2 => input_1_load_63_reg_3913,
        hidden_neg_address0 => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_hidden_neg_address0,
        hidden_neg_ce0 => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_hidden_neg_ce0,
        hidden_neg_we0 => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_hidden_neg_we0,
        hidden_neg_d0 => grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_hidden_neg_d0);

    grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028 : component train_step_train_step_Pipeline_VITIS_LOOP_45_12
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_start,
        ap_done => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_done,
        ap_idle => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_idle,
        ap_ready => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_ready,
        m_axi_WEIGHTS_0_AWVALID => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWVALID,
        m_axi_WEIGHTS_0_AWREADY => ap_const_logic_0,
        m_axi_WEIGHTS_0_AWADDR => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWADDR,
        m_axi_WEIGHTS_0_AWID => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWID,
        m_axi_WEIGHTS_0_AWLEN => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWLEN,
        m_axi_WEIGHTS_0_AWSIZE => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWSIZE,
        m_axi_WEIGHTS_0_AWBURST => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWBURST,
        m_axi_WEIGHTS_0_AWLOCK => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWLOCK,
        m_axi_WEIGHTS_0_AWCACHE => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWCACHE,
        m_axi_WEIGHTS_0_AWPROT => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWPROT,
        m_axi_WEIGHTS_0_AWQOS => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWQOS,
        m_axi_WEIGHTS_0_AWREGION => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWREGION,
        m_axi_WEIGHTS_0_AWUSER => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_AWUSER,
        m_axi_WEIGHTS_0_WVALID => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_WVALID,
        m_axi_WEIGHTS_0_WREADY => ap_const_logic_0,
        m_axi_WEIGHTS_0_WDATA => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_WDATA,
        m_axi_WEIGHTS_0_WSTRB => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_WSTRB,
        m_axi_WEIGHTS_0_WLAST => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_WLAST,
        m_axi_WEIGHTS_0_WID => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_WID,
        m_axi_WEIGHTS_0_WUSER => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_WUSER,
        m_axi_WEIGHTS_0_ARVALID => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARVALID,
        m_axi_WEIGHTS_0_ARREADY => WEIGHTS_0_ARREADY,
        m_axi_WEIGHTS_0_ARADDR => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARADDR,
        m_axi_WEIGHTS_0_ARID => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARID,
        m_axi_WEIGHTS_0_ARLEN => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARLEN,
        m_axi_WEIGHTS_0_ARSIZE => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARSIZE,
        m_axi_WEIGHTS_0_ARBURST => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARBURST,
        m_axi_WEIGHTS_0_ARLOCK => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARLOCK,
        m_axi_WEIGHTS_0_ARCACHE => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARCACHE,
        m_axi_WEIGHTS_0_ARPROT => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARPROT,
        m_axi_WEIGHTS_0_ARQOS => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARQOS,
        m_axi_WEIGHTS_0_ARREGION => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARREGION,
        m_axi_WEIGHTS_0_ARUSER => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARUSER,
        m_axi_WEIGHTS_0_RVALID => WEIGHTS_0_RVALID,
        m_axi_WEIGHTS_0_RREADY => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_RREADY,
        m_axi_WEIGHTS_0_RDATA => WEIGHTS_0_RDATA,
        m_axi_WEIGHTS_0_RLAST => ap_const_logic_0,
        m_axi_WEIGHTS_0_RID => ap_const_lv1_0,
        m_axi_WEIGHTS_0_RFIFONUM => WEIGHTS_0_RFIFONUM,
        m_axi_WEIGHTS_0_RUSER => ap_const_lv1_0,
        m_axi_WEIGHTS_0_RRESP => ap_const_lv2_0,
        m_axi_WEIGHTS_0_BVALID => ap_const_logic_0,
        m_axi_WEIGHTS_0_BREADY => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_BREADY,
        m_axi_WEIGHTS_0_BRESP => ap_const_lv2_0,
        m_axi_WEIGHTS_0_BID => ap_const_lv1_0,
        m_axi_WEIGHTS_0_BUSER => ap_const_lv1_0,
        W2 => W2_read_reg_2690,
        hidden_1_load_cast => hidden_1_load_reg_3928,
        hidden_neg_load_cast => hidden_neg_load_reg_3933,
        hidden_neg_load_1_cast => hidden_neg_load_1_reg_3948,
        hidden_neg_load_2_cast => hidden_neg_load_2_reg_3953,
        hidden_neg_load_3_cast => hidden_neg_load_3_reg_3968,
        hidden_neg_load_4_cast => hidden_neg_load_4_reg_3973,
        hidden_neg_load_5_cast => hidden_neg_load_5_reg_3988,
        hidden_neg_load_6_cast => hidden_neg_load_6_reg_3993,
        hidden_neg_load_7_cast => hidden_neg_load_7_reg_4008,
        hidden_neg_load_8_cast => hidden_neg_load_8_reg_4013,
        hidden_neg_load_9_cast => hidden_neg_load_9_reg_4028,
        hidden_neg_load_10_cast => hidden_neg_load_10_reg_4033,
        hidden_neg_load_11_cast => hidden_neg_load_11_reg_4048,
        hidden_neg_load_12_cast => hidden_neg_load_12_reg_4053,
        hidden_neg_load_13_cast => hidden_neg_load_13_reg_4068,
        hidden_neg_load_14_cast => hidden_neg_load_14_reg_4073,
        hidden_neg_load_15_cast => hidden_neg_load_15_reg_4088,
        hidden_neg_load_16_cast => hidden_neg_load_16_reg_4093,
        hidden_neg_load_17_cast => hidden_neg_load_17_reg_4108,
        hidden_neg_load_18_cast => hidden_neg_load_18_reg_4113,
        hidden_neg_load_19_cast => hidden_neg_load_19_reg_4128,
        hidden_neg_load_20_cast => hidden_neg_load_20_reg_4133,
        hidden_neg_load_21_cast => hidden_neg_load_21_reg_4148,
        hidden_neg_load_22_cast => hidden_neg_load_22_reg_4153,
        hidden_neg_load_23_cast => hidden_neg_load_23_reg_4168,
        hidden_neg_load_24_cast => hidden_neg_load_24_reg_4173,
        hidden_neg_load_25_cast => hidden_neg_load_25_reg_4188,
        hidden_neg_load_26_cast => hidden_neg_load_26_reg_4193,
        hidden_neg_load_27_cast => hidden_neg_load_27_reg_4208,
        hidden_neg_load_28_cast => hidden_neg_load_28_reg_4213,
        hidden_neg_load_29_cast => hidden_neg_load_29_reg_4228,
        sext_ln45_2 => hidden_neg_load_30_reg_4233,
        out_neg_address0 => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_out_neg_address0,
        out_neg_ce0 => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_out_neg_ce0,
        out_neg_we0 => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_out_neg_we0,
        out_neg_d0 => grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_out_neg_d0);

    grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070 : component train_step_train_step_Pipeline_VITIS_LOOP_64_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_start,
        ap_done => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_done,
        ap_idle => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_idle,
        ap_ready => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_ready,
        m_axi_WEIGHTS_0_AWVALID => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWVALID,
        m_axi_WEIGHTS_0_AWREADY => WEIGHTS_0_AWREADY,
        m_axi_WEIGHTS_0_AWADDR => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWADDR,
        m_axi_WEIGHTS_0_AWID => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWID,
        m_axi_WEIGHTS_0_AWLEN => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWLEN,
        m_axi_WEIGHTS_0_AWSIZE => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWSIZE,
        m_axi_WEIGHTS_0_AWBURST => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWBURST,
        m_axi_WEIGHTS_0_AWLOCK => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWLOCK,
        m_axi_WEIGHTS_0_AWCACHE => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWCACHE,
        m_axi_WEIGHTS_0_AWPROT => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWPROT,
        m_axi_WEIGHTS_0_AWQOS => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWQOS,
        m_axi_WEIGHTS_0_AWREGION => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWREGION,
        m_axi_WEIGHTS_0_AWUSER => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWUSER,
        m_axi_WEIGHTS_0_WVALID => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WVALID,
        m_axi_WEIGHTS_0_WREADY => WEIGHTS_0_WREADY,
        m_axi_WEIGHTS_0_WDATA => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WDATA,
        m_axi_WEIGHTS_0_WSTRB => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WSTRB,
        m_axi_WEIGHTS_0_WLAST => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WLAST,
        m_axi_WEIGHTS_0_WID => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WID,
        m_axi_WEIGHTS_0_WUSER => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WUSER,
        m_axi_WEIGHTS_0_ARVALID => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARVALID,
        m_axi_WEIGHTS_0_ARREADY => WEIGHTS_0_ARREADY,
        m_axi_WEIGHTS_0_ARADDR => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARADDR,
        m_axi_WEIGHTS_0_ARID => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARID,
        m_axi_WEIGHTS_0_ARLEN => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARLEN,
        m_axi_WEIGHTS_0_ARSIZE => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARSIZE,
        m_axi_WEIGHTS_0_ARBURST => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARBURST,
        m_axi_WEIGHTS_0_ARLOCK => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARLOCK,
        m_axi_WEIGHTS_0_ARCACHE => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARCACHE,
        m_axi_WEIGHTS_0_ARPROT => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARPROT,
        m_axi_WEIGHTS_0_ARQOS => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARQOS,
        m_axi_WEIGHTS_0_ARREGION => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARREGION,
        m_axi_WEIGHTS_0_ARUSER => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARUSER,
        m_axi_WEIGHTS_0_RVALID => WEIGHTS_0_RVALID,
        m_axi_WEIGHTS_0_RREADY => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_RREADY,
        m_axi_WEIGHTS_0_RDATA => WEIGHTS_0_RDATA,
        m_axi_WEIGHTS_0_RLAST => ap_const_logic_0,
        m_axi_WEIGHTS_0_RID => ap_const_lv1_0,
        m_axi_WEIGHTS_0_RFIFONUM => WEIGHTS_0_RFIFONUM,
        m_axi_WEIGHTS_0_RUSER => ap_const_lv1_0,
        m_axi_WEIGHTS_0_RRESP => ap_const_lv2_0,
        m_axi_WEIGHTS_0_BVALID => WEIGHTS_0_BVALID,
        m_axi_WEIGHTS_0_BREADY => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_BREADY,
        m_axi_WEIGHTS_0_BRESP => ap_const_lv2_0,
        m_axi_WEIGHTS_0_BID => ap_const_lv1_0,
        m_axi_WEIGHTS_0_BUSER => ap_const_lv1_0,
        out_pos_address0 => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_pos_address0,
        out_pos_ce0 => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_pos_ce0,
        out_pos_q0 => out_pos_q0,
        out_neg_address0 => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_neg_address0,
        out_neg_ce0 => grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_neg_ce0,
        out_neg_q0 => out_neg_q0,
        W1 => W1_read_reg_2698,
        input_load_cast184 => input_load_reg_2206,
        input_load_1_cast185 => input_load_1_reg_2212,
        input_load_2_cast186 => input_load_2_reg_2233,
        input_load_3_cast187 => input_load_3_reg_2239,
        input_load_4_cast188 => input_load_4_reg_2250,
        input_load_5_cast189 => input_load_5_reg_2256,
        input_load_6_cast190 => input_load_6_reg_2277,
        input_load_7_cast191 => input_load_7_reg_2283,
        input_load_8_cast192 => input_load_8_reg_2294,
        input_load_9_cast193 => input_load_9_reg_2300,
        input_load_10_cast194 => input_load_10_reg_2321,
        input_load_11_cast195 => input_load_11_reg_2327,
        input_load_12_cast196 => input_load_12_reg_2338,
        input_load_13_cast197 => input_load_13_reg_2344,
        input_load_14_cast198 => input_load_14_reg_2365,
        input_load_15_cast199 => input_load_15_reg_2371,
        input_load_16_cast200 => input_load_16_reg_2382,
        input_load_17_cast201 => input_load_17_reg_2388,
        input_load_18_cast202 => input_load_18_reg_2409,
        input_load_19_cast203 => input_load_19_reg_2415,
        input_load_20_cast204 => input_load_20_reg_2426,
        input_load_21_cast205 => input_load_21_reg_2432,
        input_load_22_cast206 => input_load_22_reg_2453,
        input_load_23_cast207 => input_load_23_reg_2459,
        input_load_24_cast208 => input_load_24_reg_2470,
        input_load_25_cast209 => input_load_25_reg_2476,
        input_load_26_cast210 => input_load_26_reg_2497,
        input_load_27_cast211 => input_load_27_reg_2503,
        input_load_28_cast212 => input_load_28_reg_2514,
        input_load_29_cast213 => input_load_29_reg_2520,
        input_load_30_cast214 => input_load_30_reg_2541,
        input_load_31_cast215 => input_load_31_reg_2547,
        input_load_32_cast216 => input_load_32_reg_2558,
        input_load_33_cast217 => input_load_33_reg_2564,
        input_load_34_cast218 => input_load_34_reg_2585,
        input_load_35_cast219 => input_load_35_reg_2591,
        input_load_36_cast220 => input_load_36_reg_2602,
        input_load_37_cast221 => input_load_37_reg_2608,
        input_load_38_cast222 => input_load_38_reg_2629,
        input_load_39_cast223 => input_load_39_reg_2635,
        input_load_40_cast224 => input_load_40_reg_2646,
        input_load_41_cast225 => input_load_41_reg_2652,
        input_load_42_cast226 => input_load_42_reg_2673,
        input_load_43_cast227 => input_load_43_reg_2679,
        input_load_44_cast228 => input_load_44_reg_2706,
        input_load_45_cast229 => input_load_45_reg_2712,
        input_load_46_cast230 => input_load_46_reg_2738,
        input_load_47_cast231 => input_load_47_reg_2744,
        input_load_48_cast232 => input_load_48_reg_2755,
        input_load_49_cast233 => input_load_49_reg_2761,
        input_load_50_cast234 => input_load_50_reg_2782,
        input_load_51_cast235 => input_load_51_reg_2788,
        input_load_52_cast236 => input_load_52_reg_2799,
        input_load_53_cast237 => input_load_53_reg_2805,
        input_load_54_cast238 => input_load_54_reg_2826,
        input_load_55_cast239 => input_load_55_reg_2832,
        input_load_56_cast240 => input_load_56_reg_2853,
        input_load_57_cast241 => input_load_57_reg_2859,
        input_load_58_cast242 => input_load_58_reg_2900,
        input_load_59_cast243 => input_load_59_reg_2906,
        input_load_60_cast244 => input_load_60_reg_2937,
        input_load_61_cast245 => input_load_61_reg_2943,
        input_load_62_cast246 => input_load_62_reg_2979,
        sext_ln28 => input_load_63_reg_2985);

    grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143 : component train_step_train_step_Pipeline_VITIS_LOOP_85_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_start,
        ap_done => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_done,
        ap_idle => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_idle,
        ap_ready => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_ready,
        m_axi_WEIGHTS_0_AWVALID => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWVALID,
        m_axi_WEIGHTS_0_AWREADY => WEIGHTS_0_AWREADY,
        m_axi_WEIGHTS_0_AWADDR => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWADDR,
        m_axi_WEIGHTS_0_AWID => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWID,
        m_axi_WEIGHTS_0_AWLEN => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWLEN,
        m_axi_WEIGHTS_0_AWSIZE => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWSIZE,
        m_axi_WEIGHTS_0_AWBURST => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWBURST,
        m_axi_WEIGHTS_0_AWLOCK => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWLOCK,
        m_axi_WEIGHTS_0_AWCACHE => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWCACHE,
        m_axi_WEIGHTS_0_AWPROT => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWPROT,
        m_axi_WEIGHTS_0_AWQOS => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWQOS,
        m_axi_WEIGHTS_0_AWREGION => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWREGION,
        m_axi_WEIGHTS_0_AWUSER => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWUSER,
        m_axi_WEIGHTS_0_WVALID => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WVALID,
        m_axi_WEIGHTS_0_WREADY => WEIGHTS_0_WREADY,
        m_axi_WEIGHTS_0_WDATA => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WDATA,
        m_axi_WEIGHTS_0_WSTRB => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WSTRB,
        m_axi_WEIGHTS_0_WLAST => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WLAST,
        m_axi_WEIGHTS_0_WID => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WID,
        m_axi_WEIGHTS_0_WUSER => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WUSER,
        m_axi_WEIGHTS_0_ARVALID => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARVALID,
        m_axi_WEIGHTS_0_ARREADY => WEIGHTS_0_ARREADY,
        m_axi_WEIGHTS_0_ARADDR => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARADDR,
        m_axi_WEIGHTS_0_ARID => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARID,
        m_axi_WEIGHTS_0_ARLEN => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARLEN,
        m_axi_WEIGHTS_0_ARSIZE => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARSIZE,
        m_axi_WEIGHTS_0_ARBURST => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARBURST,
        m_axi_WEIGHTS_0_ARLOCK => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARLOCK,
        m_axi_WEIGHTS_0_ARCACHE => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARCACHE,
        m_axi_WEIGHTS_0_ARPROT => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARPROT,
        m_axi_WEIGHTS_0_ARQOS => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARQOS,
        m_axi_WEIGHTS_0_ARREGION => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARREGION,
        m_axi_WEIGHTS_0_ARUSER => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARUSER,
        m_axi_WEIGHTS_0_RVALID => WEIGHTS_0_RVALID,
        m_axi_WEIGHTS_0_RREADY => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_RREADY,
        m_axi_WEIGHTS_0_RDATA => WEIGHTS_0_RDATA,
        m_axi_WEIGHTS_0_RLAST => ap_const_logic_0,
        m_axi_WEIGHTS_0_RID => ap_const_lv1_0,
        m_axi_WEIGHTS_0_RFIFONUM => WEIGHTS_0_RFIFONUM,
        m_axi_WEIGHTS_0_RUSER => ap_const_lv1_0,
        m_axi_WEIGHTS_0_RRESP => ap_const_lv2_0,
        m_axi_WEIGHTS_0_BVALID => WEIGHTS_0_BVALID,
        m_axi_WEIGHTS_0_BREADY => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_BREADY,
        m_axi_WEIGHTS_0_BRESP => ap_const_lv2_0,
        m_axi_WEIGHTS_0_BID => ap_const_lv1_0,
        m_axi_WEIGHTS_0_BUSER => ap_const_lv1_0,
        out_pos_address0 => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_pos_address0,
        out_pos_ce0 => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_pos_ce0,
        out_pos_q0 => out_pos_q0,
        out_neg_address0 => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_neg_address0,
        out_neg_ce0 => grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_neg_ce0,
        out_neg_q0 => out_neg_q0,
        W2 => W2_read_reg_2690,
        hidden_load_cast248 => hidden_load_reg_3061,
        hidden_pos_load_cast249 => hidden_pos_load_reg_3067,
        hidden_pos_load_1_cast250 => hidden_pos_load_1_reg_3108,
        hidden_pos_load_2_cast251 => hidden_pos_load_2_reg_3114,
        hidden_pos_load_3_cast252 => hidden_pos_load_3_reg_3145,
        hidden_pos_load_4_cast253 => hidden_pos_load_4_reg_3151,
        hidden_pos_load_5_cast254 => hidden_pos_load_5_reg_3192,
        hidden_pos_load_6_cast255 => hidden_pos_load_6_reg_3198,
        hidden_pos_load_7_cast256 => hidden_pos_load_7_reg_3229,
        hidden_pos_load_8_cast257 => hidden_pos_load_8_reg_3235,
        hidden_pos_load_9_cast258 => hidden_pos_load_9_reg_3276,
        hidden_pos_load_10_cast259 => hidden_pos_load_10_reg_3282,
        hidden_pos_load_11_cast260 => hidden_pos_load_11_reg_3313,
        hidden_pos_load_12_cast261 => hidden_pos_load_12_reg_3319,
        hidden_pos_load_13_cast262 => hidden_pos_load_13_reg_3365,
        hidden_pos_load_14_cast263 => hidden_pos_load_14_reg_3371,
        hidden_pos_load_15_cast264 => hidden_pos_load_15_reg_3402,
        hidden_pos_load_16_cast265 => hidden_pos_load_16_reg_3408,
        hidden_pos_load_17_cast266 => hidden_pos_load_17_reg_3449,
        hidden_pos_load_18_cast267 => hidden_pos_load_18_reg_3455,
        hidden_pos_load_19_cast268 => hidden_pos_load_19_reg_3486,
        hidden_pos_load_20_cast269 => hidden_pos_load_20_reg_3492,
        hidden_pos_load_21_cast270 => hidden_pos_load_21_reg_3533,
        hidden_pos_load_22_cast271 => hidden_pos_load_22_reg_3539,
        hidden_pos_load_23_cast272 => hidden_pos_load_23_reg_3570,
        hidden_pos_load_24_cast273 => hidden_pos_load_24_reg_3576,
        hidden_pos_load_25_cast274 => hidden_pos_load_25_reg_3617,
        hidden_pos_load_26_cast275 => hidden_pos_load_26_reg_3623,
        hidden_pos_load_27_cast276 => hidden_pos_load_27_reg_3654,
        hidden_pos_load_28_cast277 => hidden_pos_load_28_reg_3660,
        hidden_pos_load_29_cast278 => hidden_pos_load_29_reg_3696,
        sext_ln45 => hidden_pos_load_30_reg_3702);

    CTRL_s_axi_U : component train_step_CTRL_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CTRL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CTRL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_CTRL_AWVALID,
        AWREADY => s_axi_CTRL_AWREADY,
        AWADDR => s_axi_CTRL_AWADDR,
        WVALID => s_axi_CTRL_WVALID,
        WREADY => s_axi_CTRL_WREADY,
        WDATA => s_axi_CTRL_WDATA,
        WSTRB => s_axi_CTRL_WSTRB,
        ARVALID => s_axi_CTRL_ARVALID,
        ARREADY => s_axi_CTRL_ARREADY,
        ARADDR => s_axi_CTRL_ARADDR,
        RVALID => s_axi_CTRL_RVALID,
        RREADY => s_axi_CTRL_RREADY,
        RDATA => s_axi_CTRL_RDATA,
        RRESP => s_axi_CTRL_RRESP,
        BVALID => s_axi_CTRL_BVALID,
        BREADY => s_axi_CTRL_BREADY,
        BRESP => s_axi_CTRL_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        sample_idx => sample_idx,
        ap_start => ap_start,
        interrupt => interrupt,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_idle => ap_idle);

    control_s_axi_U : component train_step_control_s_axi
    generic map (
        C_S_AXI_ADDR_WIDTH => C_S_AXI_CONTROL_ADDR_WIDTH,
        C_S_AXI_DATA_WIDTH => C_S_AXI_CONTROL_DATA_WIDTH)
    port map (
        AWVALID => s_axi_control_AWVALID,
        AWREADY => s_axi_control_AWREADY,
        AWADDR => s_axi_control_AWADDR,
        WVALID => s_axi_control_WVALID,
        WREADY => s_axi_control_WREADY,
        WDATA => s_axi_control_WDATA,
        WSTRB => s_axi_control_WSTRB,
        ARVALID => s_axi_control_ARVALID,
        ARREADY => s_axi_control_ARREADY,
        ARADDR => s_axi_control_ARADDR,
        RVALID => s_axi_control_RVALID,
        RREADY => s_axi_control_RREADY,
        RDATA => s_axi_control_RDATA,
        RRESP => s_axi_control_RRESP,
        BVALID => s_axi_control_BVALID,
        BREADY => s_axi_control_BREADY,
        BRESP => s_axi_control_BRESP,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        W1 => W1,
        W2 => W2);

    WEIGHTS_m_axi_U : component train_step_WEIGHTS_m_axi
    generic map (
        CONSERVATIVE => 1,
        USER_MAXREQS => 7,
        MAX_READ_BURST_LENGTH => 16,
        MAX_WRITE_BURST_LENGTH => 16,
        C_M_AXI_ID_WIDTH => C_M_AXI_WEIGHTS_ID_WIDTH,
        C_M_AXI_ADDR_WIDTH => C_M_AXI_WEIGHTS_ADDR_WIDTH,
        C_M_AXI_DATA_WIDTH => C_M_AXI_WEIGHTS_DATA_WIDTH,
        C_M_AXI_AWUSER_WIDTH => C_M_AXI_WEIGHTS_AWUSER_WIDTH,
        C_M_AXI_ARUSER_WIDTH => C_M_AXI_WEIGHTS_ARUSER_WIDTH,
        C_M_AXI_WUSER_WIDTH => C_M_AXI_WEIGHTS_WUSER_WIDTH,
        C_M_AXI_RUSER_WIDTH => C_M_AXI_WEIGHTS_RUSER_WIDTH,
        C_M_AXI_BUSER_WIDTH => C_M_AXI_WEIGHTS_BUSER_WIDTH,
        C_USER_VALUE => C_M_AXI_WEIGHTS_USER_VALUE,
        C_PROT_VALUE => C_M_AXI_WEIGHTS_PROT_VALUE,
        C_CACHE_VALUE => C_M_AXI_WEIGHTS_CACHE_VALUE,
        CH0_USER_RFIFONUM_WIDTH => 11,
        CH0_USER_DW => 8,
        CH0_USER_AW => 64,
        NUM_READ_OUTSTANDING => 16,
        NUM_WRITE_OUTSTANDING => 16)
    port map (
        AWVALID => m_axi_WEIGHTS_AWVALID,
        AWREADY => m_axi_WEIGHTS_AWREADY,
        AWADDR => m_axi_WEIGHTS_AWADDR,
        AWID => m_axi_WEIGHTS_AWID,
        AWLEN => m_axi_WEIGHTS_AWLEN,
        AWSIZE => m_axi_WEIGHTS_AWSIZE,
        AWBURST => m_axi_WEIGHTS_AWBURST,
        AWLOCK => m_axi_WEIGHTS_AWLOCK,
        AWCACHE => m_axi_WEIGHTS_AWCACHE,
        AWPROT => m_axi_WEIGHTS_AWPROT,
        AWQOS => m_axi_WEIGHTS_AWQOS,
        AWREGION => m_axi_WEIGHTS_AWREGION,
        AWUSER => m_axi_WEIGHTS_AWUSER,
        WVALID => m_axi_WEIGHTS_WVALID,
        WREADY => m_axi_WEIGHTS_WREADY,
        WDATA => m_axi_WEIGHTS_WDATA,
        WSTRB => m_axi_WEIGHTS_WSTRB,
        WLAST => m_axi_WEIGHTS_WLAST,
        WID => m_axi_WEIGHTS_WID,
        WUSER => m_axi_WEIGHTS_WUSER,
        ARVALID => m_axi_WEIGHTS_ARVALID,
        ARREADY => m_axi_WEIGHTS_ARREADY,
        ARADDR => m_axi_WEIGHTS_ARADDR,
        ARID => m_axi_WEIGHTS_ARID,
        ARLEN => m_axi_WEIGHTS_ARLEN,
        ARSIZE => m_axi_WEIGHTS_ARSIZE,
        ARBURST => m_axi_WEIGHTS_ARBURST,
        ARLOCK => m_axi_WEIGHTS_ARLOCK,
        ARCACHE => m_axi_WEIGHTS_ARCACHE,
        ARPROT => m_axi_WEIGHTS_ARPROT,
        ARQOS => m_axi_WEIGHTS_ARQOS,
        ARREGION => m_axi_WEIGHTS_ARREGION,
        ARUSER => m_axi_WEIGHTS_ARUSER,
        RVALID => m_axi_WEIGHTS_RVALID,
        RREADY => m_axi_WEIGHTS_RREADY,
        RDATA => m_axi_WEIGHTS_RDATA,
        RLAST => m_axi_WEIGHTS_RLAST,
        RID => m_axi_WEIGHTS_RID,
        RUSER => m_axi_WEIGHTS_RUSER,
        RRESP => m_axi_WEIGHTS_RRESP,
        BVALID => m_axi_WEIGHTS_BVALID,
        BREADY => m_axi_WEIGHTS_BREADY,
        BRESP => m_axi_WEIGHTS_BRESP,
        BID => m_axi_WEIGHTS_BID,
        BUSER => m_axi_WEIGHTS_BUSER,
        ACLK => ap_clk,
        ARESET => ap_rst_n_inv,
        ACLK_EN => ap_const_logic_1,
        I_CH0_ARVALID => WEIGHTS_0_ARVALID,
        I_CH0_ARREADY => WEIGHTS_0_ARREADY,
        I_CH0_ARADDR => WEIGHTS_0_ARADDR,
        I_CH0_ARLEN => WEIGHTS_0_ARLEN,
        I_CH0_RVALID => WEIGHTS_0_RVALID,
        I_CH0_RREADY => WEIGHTS_0_RREADY,
        I_CH0_RDATA => WEIGHTS_0_RDATA,
        I_CH0_RFIFONUM => WEIGHTS_0_RFIFONUM,
        I_CH0_AWVALID => WEIGHTS_0_AWVALID,
        I_CH0_AWREADY => WEIGHTS_0_AWREADY,
        I_CH0_AWADDR => WEIGHTS_0_AWADDR,
        I_CH0_AWLEN => WEIGHTS_0_AWLEN,
        I_CH0_WVALID => WEIGHTS_0_WVALID,
        I_CH0_WREADY => WEIGHTS_0_WREADY,
        I_CH0_WDATA => WEIGHTS_0_WDATA,
        I_CH0_WSTRB => WEIGHTS_0_WSTRB,
        I_CH0_BVALID => WEIGHTS_0_BVALID,
        I_CH0_BREADY => WEIGHTS_0_BREADY);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_ready = ap_const_logic_1)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_ready = ap_const_logic_1)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_ready = ap_const_logic_1)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state81)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_ready = ap_const_logic_1)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_ready = ap_const_logic_1)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state83)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_ready = ap_const_logic_1)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state85)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_ready = ap_const_logic_1)) then 
                    grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then
                W1_read_reg_2698 <= W1;
                W2_read_reg_2690 <= W2;
                input_load_44_reg_2706 <= in_pos_q1;
                input_load_45_reg_2712 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state45)) then
                WEIGHTS_addr_1_reg_3355 <= W2_read_reg_2690;
                hidden_pos_load_13_reg_3365 <= hidden_pos_q1;
                hidden_pos_load_14_reg_3371 <= hidden_pos_q0;
                input_1_load_26_reg_3382 <= in_neg_q1;
                input_1_load_27_reg_3387 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                WEIGHTS_addr_reg_2728 <= W1_read_reg_2698;
                input_load_46_reg_2738 <= in_pos_q1;
                input_load_47_reg_2744 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state66)) then
                hidden_1_load_reg_3928 <= hidden_neg_q1;
                hidden_neg_load_reg_3933 <= hidden_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state38)) then
                hidden_load_reg_3061 <= hidden_pos_q1;
                hidden_pos_load_reg_3067 <= hidden_pos_q0;
                input_1_load_12_reg_3083 <= in_neg_q1;
                input_1_load_13_reg_3088 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state71)) then
                hidden_neg_load_10_reg_4033 <= hidden_neg_q0;
                hidden_neg_load_9_reg_4028 <= hidden_neg_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state72)) then
                hidden_neg_load_11_reg_4048 <= hidden_neg_q1;
                hidden_neg_load_12_reg_4053 <= hidden_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state73)) then
                hidden_neg_load_13_reg_4068 <= hidden_neg_q1;
                hidden_neg_load_14_reg_4073 <= hidden_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state74)) then
                hidden_neg_load_15_reg_4088 <= hidden_neg_q1;
                hidden_neg_load_16_reg_4093 <= hidden_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state75)) then
                hidden_neg_load_17_reg_4108 <= hidden_neg_q1;
                hidden_neg_load_18_reg_4113 <= hidden_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state76)) then
                hidden_neg_load_19_reg_4128 <= hidden_neg_q1;
                hidden_neg_load_20_reg_4133 <= hidden_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state67)) then
                hidden_neg_load_1_reg_3948 <= hidden_neg_q1;
                hidden_neg_load_2_reg_3953 <= hidden_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state77)) then
                hidden_neg_load_21_reg_4148 <= hidden_neg_q1;
                hidden_neg_load_22_reg_4153 <= hidden_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state78)) then
                hidden_neg_load_23_reg_4168 <= hidden_neg_q1;
                hidden_neg_load_24_reg_4173 <= hidden_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state79)) then
                hidden_neg_load_25_reg_4188 <= hidden_neg_q1;
                hidden_neg_load_26_reg_4193 <= hidden_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state80)) then
                hidden_neg_load_27_reg_4208 <= hidden_neg_q1;
                hidden_neg_load_28_reg_4213 <= hidden_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state81)) then
                hidden_neg_load_29_reg_4228 <= hidden_neg_q1;
                hidden_neg_load_30_reg_4233 <= hidden_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state68)) then
                hidden_neg_load_3_reg_3968 <= hidden_neg_q1;
                hidden_neg_load_4_reg_3973 <= hidden_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state69)) then
                hidden_neg_load_5_reg_3988 <= hidden_neg_q1;
                hidden_neg_load_6_reg_3993 <= hidden_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state70)) then
                hidden_neg_load_7_reg_4008 <= hidden_neg_q1;
                hidden_neg_load_8_reg_4013 <= hidden_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state43)) then
                hidden_pos_load_10_reg_3282 <= hidden_pos_q0;
                hidden_pos_load_9_reg_3276 <= hidden_pos_q1;
                input_1_load_22_reg_3293 <= in_neg_q1;
                input_1_load_23_reg_3298 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state44)) then
                hidden_pos_load_11_reg_3313 <= hidden_pos_q1;
                hidden_pos_load_12_reg_3319 <= hidden_pos_q0;
                input_1_load_24_reg_3335 <= in_neg_q1;
                input_1_load_25_reg_3340 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state46)) then
                hidden_pos_load_15_reg_3402 <= hidden_pos_q1;
                hidden_pos_load_16_reg_3408 <= hidden_pos_q0;
                input_1_load_28_reg_3424 <= in_neg_q1;
                input_1_load_29_reg_3429 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state47)) then
                hidden_pos_load_17_reg_3449 <= hidden_pos_q1;
                hidden_pos_load_18_reg_3455 <= hidden_pos_q0;
                input_1_load_30_reg_3466 <= in_neg_q1;
                input_1_load_31_reg_3471 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state48)) then
                hidden_pos_load_19_reg_3486 <= hidden_pos_q1;
                hidden_pos_load_20_reg_3492 <= hidden_pos_q0;
                input_1_load_32_reg_3508 <= in_neg_q1;
                input_1_load_33_reg_3513 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state39)) then
                hidden_pos_load_1_reg_3108 <= hidden_pos_q1;
                hidden_pos_load_2_reg_3114 <= hidden_pos_q0;
                input_1_load_14_reg_3125 <= in_neg_q1;
                input_1_load_15_reg_3130 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state49)) then
                hidden_pos_load_21_reg_3533 <= hidden_pos_q1;
                hidden_pos_load_22_reg_3539 <= hidden_pos_q0;
                input_1_load_34_reg_3550 <= in_neg_q1;
                input_1_load_35_reg_3555 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state50)) then
                hidden_pos_load_23_reg_3570 <= hidden_pos_q1;
                hidden_pos_load_24_reg_3576 <= hidden_pos_q0;
                input_1_load_36_reg_3592 <= in_neg_q1;
                input_1_load_37_reg_3597 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then
                hidden_pos_load_25_reg_3617 <= hidden_pos_q1;
                hidden_pos_load_26_reg_3623 <= hidden_pos_q0;
                input_1_load_38_reg_3634 <= in_neg_q1;
                input_1_load_39_reg_3639 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                hidden_pos_load_27_reg_3654 <= hidden_pos_q1;
                hidden_pos_load_28_reg_3660 <= hidden_pos_q0;
                input_1_load_40_reg_3676 <= in_neg_q1;
                input_1_load_41_reg_3681 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                hidden_pos_load_29_reg_3696 <= hidden_pos_q1;
                hidden_pos_load_30_reg_3702 <= hidden_pos_q0;
                input_1_load_42_reg_3708 <= in_neg_q1;
                input_1_load_43_reg_3713 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state40)) then
                hidden_pos_load_3_reg_3145 <= hidden_pos_q1;
                hidden_pos_load_4_reg_3151 <= hidden_pos_q0;
                input_1_load_16_reg_3167 <= in_neg_q1;
                input_1_load_17_reg_3172 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state41)) then
                hidden_pos_load_5_reg_3192 <= hidden_pos_q1;
                hidden_pos_load_6_reg_3198 <= hidden_pos_q0;
                input_1_load_18_reg_3209 <= in_neg_q1;
                input_1_load_19_reg_3214 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state42)) then
                hidden_pos_load_7_reg_3229 <= hidden_pos_q1;
                hidden_pos_load_8_reg_3235 <= hidden_pos_q0;
                input_1_load_20_reg_3251 <= in_neg_q1;
                input_1_load_21_reg_3256 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state37)) then
                input_1_load_10_reg_3041 <= in_neg_q1;
                input_1_load_11_reg_3046 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then
                input_1_load_1_reg_2880 <= in_neg_q0;
                input_1_load_reg_2875 <= in_neg_q1;
                input_load_56_reg_2853 <= in_pos_q1;
                input_load_57_reg_2859 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                input_1_load_2_reg_2917 <= in_neg_q1;
                input_1_load_3_reg_2922 <= in_neg_q0;
                input_load_58_reg_2900 <= in_pos_q1;
                input_load_59_reg_2906 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then
                input_1_load_44_reg_3728 <= in_neg_q1;
                input_1_load_45_reg_3733 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state55)) then
                input_1_load_46_reg_3748 <= in_neg_q1;
                input_1_load_47_reg_3753 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state56)) then
                input_1_load_48_reg_3768 <= in_neg_q1;
                input_1_load_49_reg_3773 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state34)) then
                input_1_load_4_reg_2959 <= in_neg_q1;
                input_1_load_5_reg_2964 <= in_neg_q0;
                input_load_60_reg_2937 <= in_pos_q1;
                input_load_61_reg_2943 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then
                input_1_load_50_reg_3788 <= in_neg_q1;
                input_1_load_51_reg_3793 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                input_1_load_52_reg_3808 <= in_neg_q1;
                input_1_load_53_reg_3813 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then
                input_1_load_54_reg_3828 <= in_neg_q1;
                input_1_load_55_reg_3833 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state60)) then
                input_1_load_56_reg_3848 <= in_neg_q1;
                input_1_load_57_reg_3853 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state61)) then
                input_1_load_58_reg_3868 <= in_neg_q1;
                input_1_load_59_reg_3873 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state62)) then
                input_1_load_60_reg_3888 <= in_neg_q1;
                input_1_load_61_reg_3893 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state63)) then
                input_1_load_62_reg_3908 <= in_neg_q1;
                input_1_load_63_reg_3913 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state35)) then
                input_1_load_6_reg_2991 <= in_neg_q1;
                input_1_load_7_reg_2996 <= in_neg_q0;
                input_load_62_reg_2979 <= in_pos_q1;
                input_load_63_reg_2985 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state36)) then
                input_1_load_8_reg_3011 <= in_neg_q1;
                input_1_load_9_reg_3016 <= in_neg_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                input_load_10_reg_2321 <= in_pos_q1;
                input_load_11_reg_2327 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                input_load_12_reg_2338 <= in_pos_q1;
                input_load_13_reg_2344 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                input_load_14_reg_2365 <= in_pos_q1;
                input_load_15_reg_2371 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                input_load_16_reg_2382 <= in_pos_q1;
                input_load_17_reg_2388 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                input_load_18_reg_2409 <= in_pos_q1;
                input_load_19_reg_2415 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                input_load_1_reg_2212 <= in_pos_q0;
                input_load_reg_2206 <= in_pos_q1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                input_load_20_reg_2426 <= in_pos_q1;
                input_load_21_reg_2432 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                input_load_22_reg_2453 <= in_pos_q1;
                input_load_23_reg_2459 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                input_load_24_reg_2470 <= in_pos_q1;
                input_load_25_reg_2476 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then
                input_load_26_reg_2497 <= in_pos_q1;
                input_load_27_reg_2503 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                input_load_28_reg_2514 <= in_pos_q1;
                input_load_29_reg_2520 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                input_load_2_reg_2233 <= in_pos_q1;
                input_load_3_reg_2239 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then
                input_load_30_reg_2541 <= in_pos_q1;
                input_load_31_reg_2547 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state20)) then
                input_load_32_reg_2558 <= in_pos_q1;
                input_load_33_reg_2564 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state21)) then
                input_load_34_reg_2585 <= in_pos_q1;
                input_load_35_reg_2591 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state22)) then
                input_load_36_reg_2602 <= in_pos_q1;
                input_load_37_reg_2608 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state23)) then
                input_load_38_reg_2629 <= in_pos_q1;
                input_load_39_reg_2635 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state24)) then
                input_load_40_reg_2646 <= in_pos_q1;
                input_load_41_reg_2652 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                input_load_42_reg_2673 <= in_pos_q1;
                input_load_43_reg_2679 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then
                input_load_48_reg_2755 <= in_pos_q1;
                input_load_49_reg_2761 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                input_load_4_reg_2250 <= in_pos_q1;
                input_load_5_reg_2256 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state29)) then
                input_load_50_reg_2782 <= in_pos_q1;
                input_load_51_reg_2788 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state30)) then
                input_load_52_reg_2799 <= in_pos_q1;
                input_load_53_reg_2805 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                input_load_54_reg_2826 <= in_pos_q1;
                input_load_55_reg_2832 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                input_load_6_reg_2277 <= in_pos_q1;
                input_load_7_reg_2283 <= in_pos_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                input_load_8_reg_2294 <= in_pos_q1;
                input_load_9_reg_2300 <= in_pos_q0;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state27, ap_CS_fsm_state55, ap_CS_fsm_state45, ap_CS_fsm_state65, ap_CS_fsm_state36, ap_CS_fsm_state54, grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_done, grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_done, grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_done, grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_done, grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_done, grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_done, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_done, WEIGHTS_0_ARREADY, ap_CS_fsm_state2, ap_CS_fsm_state64, ap_CS_fsm_state82, ap_CS_fsm_state84, ap_CS_fsm_state86)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state18 => 
                ap_NS_fsm <= ap_ST_fsm_state19;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state20;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                ap_NS_fsm <= ap_ST_fsm_state23;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                ap_NS_fsm <= ap_ST_fsm_state26;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state27 => 
                if (((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state28;
                else
                    ap_NS_fsm <= ap_ST_fsm_state27;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state29;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                ap_NS_fsm <= ap_ST_fsm_state32;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state33 => 
                ap_NS_fsm <= ap_ST_fsm_state34;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state35;
            when ap_ST_fsm_state35 => 
                ap_NS_fsm <= ap_ST_fsm_state36;
            when ap_ST_fsm_state36 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state36) and (grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state37;
                else
                    ap_NS_fsm <= ap_ST_fsm_state36;
                end if;
            when ap_ST_fsm_state37 => 
                ap_NS_fsm <= ap_ST_fsm_state38;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                ap_NS_fsm <= ap_ST_fsm_state40;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                ap_NS_fsm <= ap_ST_fsm_state42;
            when ap_ST_fsm_state42 => 
                ap_NS_fsm <= ap_ST_fsm_state43;
            when ap_ST_fsm_state43 => 
                ap_NS_fsm <= ap_ST_fsm_state44;
            when ap_ST_fsm_state44 => 
                ap_NS_fsm <= ap_ST_fsm_state45;
            when ap_ST_fsm_state45 => 
                if (((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state45))) then
                    ap_NS_fsm <= ap_ST_fsm_state46;
                else
                    ap_NS_fsm <= ap_ST_fsm_state45;
                end if;
            when ap_ST_fsm_state46 => 
                ap_NS_fsm <= ap_ST_fsm_state47;
            when ap_ST_fsm_state47 => 
                ap_NS_fsm <= ap_ST_fsm_state48;
            when ap_ST_fsm_state48 => 
                ap_NS_fsm <= ap_ST_fsm_state49;
            when ap_ST_fsm_state49 => 
                ap_NS_fsm <= ap_ST_fsm_state50;
            when ap_ST_fsm_state50 => 
                ap_NS_fsm <= ap_ST_fsm_state51;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_state53 => 
                ap_NS_fsm <= ap_ST_fsm_state54;
            when ap_ST_fsm_state54 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state54) and (grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state55;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state55 => 
                if (((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state55))) then
                    ap_NS_fsm <= ap_ST_fsm_state56;
                else
                    ap_NS_fsm <= ap_ST_fsm_state55;
                end if;
            when ap_ST_fsm_state56 => 
                ap_NS_fsm <= ap_ST_fsm_state57;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                ap_NS_fsm <= ap_ST_fsm_state59;
            when ap_ST_fsm_state59 => 
                ap_NS_fsm <= ap_ST_fsm_state60;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                ap_NS_fsm <= ap_ST_fsm_state62;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state64;
            when ap_ST_fsm_state64 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state64) and (grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state65;
                else
                    ap_NS_fsm <= ap_ST_fsm_state64;
                end if;
            when ap_ST_fsm_state65 => 
                if (((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state65))) then
                    ap_NS_fsm <= ap_ST_fsm_state66;
                else
                    ap_NS_fsm <= ap_ST_fsm_state65;
                end if;
            when ap_ST_fsm_state66 => 
                ap_NS_fsm <= ap_ST_fsm_state67;
            when ap_ST_fsm_state67 => 
                ap_NS_fsm <= ap_ST_fsm_state68;
            when ap_ST_fsm_state68 => 
                ap_NS_fsm <= ap_ST_fsm_state69;
            when ap_ST_fsm_state69 => 
                ap_NS_fsm <= ap_ST_fsm_state70;
            when ap_ST_fsm_state70 => 
                ap_NS_fsm <= ap_ST_fsm_state71;
            when ap_ST_fsm_state71 => 
                ap_NS_fsm <= ap_ST_fsm_state72;
            when ap_ST_fsm_state72 => 
                ap_NS_fsm <= ap_ST_fsm_state73;
            when ap_ST_fsm_state73 => 
                ap_NS_fsm <= ap_ST_fsm_state74;
            when ap_ST_fsm_state74 => 
                ap_NS_fsm <= ap_ST_fsm_state75;
            when ap_ST_fsm_state75 => 
                ap_NS_fsm <= ap_ST_fsm_state76;
            when ap_ST_fsm_state76 => 
                ap_NS_fsm <= ap_ST_fsm_state77;
            when ap_ST_fsm_state77 => 
                ap_NS_fsm <= ap_ST_fsm_state78;
            when ap_ST_fsm_state78 => 
                ap_NS_fsm <= ap_ST_fsm_state79;
            when ap_ST_fsm_state79 => 
                ap_NS_fsm <= ap_ST_fsm_state80;
            when ap_ST_fsm_state80 => 
                ap_NS_fsm <= ap_ST_fsm_state81;
            when ap_ST_fsm_state81 => 
                ap_NS_fsm <= ap_ST_fsm_state82;
            when ap_ST_fsm_state82 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state82) and (grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state83;
                else
                    ap_NS_fsm <= ap_ST_fsm_state82;
                end if;
            when ap_ST_fsm_state83 => 
                ap_NS_fsm <= ap_ST_fsm_state84;
            when ap_ST_fsm_state84 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state84) and (grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state85;
                else
                    ap_NS_fsm <= ap_ST_fsm_state84;
                end if;
            when ap_ST_fsm_state85 => 
                ap_NS_fsm <= ap_ST_fsm_state86;
            when ap_ST_fsm_state86 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state86) and (grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state86;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    WEIGHTS_0_ARADDR_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state55, ap_CS_fsm_state45, ap_CS_fsm_state65, W2_read_reg_2690, W1_read_reg_2698, WEIGHTS_addr_reg_2728, ap_CS_fsm_state35, ap_CS_fsm_state36, WEIGHTS_addr_1_reg_3355, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state63, ap_CS_fsm_state81, grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARADDR, grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARADDR, grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARADDR, grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARADDR, grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARADDR, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARADDR, WEIGHTS_0_ARREADY, ap_CS_fsm_state64, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state65))) then 
            WEIGHTS_0_ARADDR <= WEIGHTS_addr_1_reg_3355;
        elsif (((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state45))) then 
            WEIGHTS_0_ARADDR <= W2_read_reg_2690;
        elsif (((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state55))) then 
            WEIGHTS_0_ARADDR <= WEIGHTS_addr_reg_2728;
        elsif (((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            WEIGHTS_0_ARADDR <= W1_read_reg_2698;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            WEIGHTS_0_ARADDR <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            WEIGHTS_0_ARADDR <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            WEIGHTS_0_ARADDR <= grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            WEIGHTS_0_ARADDR <= grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            WEIGHTS_0_ARADDR <= grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            WEIGHTS_0_ARADDR <= grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARADDR;
        else 
            WEIGHTS_0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    WEIGHTS_0_ARLEN_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state55, ap_CS_fsm_state45, ap_CS_fsm_state65, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state63, ap_CS_fsm_state81, grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARLEN, grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARLEN, grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARLEN, grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARLEN, grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARLEN, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARLEN, WEIGHTS_0_ARREADY, ap_CS_fsm_state64, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86)
    begin
        if ((((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state65)) or ((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state45)))) then 
            WEIGHTS_0_ARLEN <= ap_const_lv64_140(32 - 1 downto 0);
        elsif ((((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state55)) or ((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            WEIGHTS_0_ARLEN <= ap_const_lv64_800(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            WEIGHTS_0_ARLEN <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            WEIGHTS_0_ARLEN <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            WEIGHTS_0_ARLEN <= grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            WEIGHTS_0_ARLEN <= grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            WEIGHTS_0_ARLEN <= grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            WEIGHTS_0_ARLEN <= grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARLEN;
        else 
            WEIGHTS_0_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    WEIGHTS_0_ARVALID_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state55, ap_CS_fsm_state45, ap_CS_fsm_state65, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state63, ap_CS_fsm_state81, grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARVALID, grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARVALID, grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARVALID, grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARVALID, grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARVALID, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARVALID, WEIGHTS_0_ARREADY, ap_CS_fsm_state64, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86)
    begin
        if ((((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state65)) or ((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state45)) or ((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state55)) or ((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            WEIGHTS_0_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            WEIGHTS_0_ARVALID <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            WEIGHTS_0_ARVALID <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            WEIGHTS_0_ARVALID <= grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            WEIGHTS_0_ARVALID <= grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            WEIGHTS_0_ARVALID <= grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_ARVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            WEIGHTS_0_ARVALID <= grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_ARVALID;
        else 
            WEIGHTS_0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;


    WEIGHTS_0_AWADDR_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWADDR, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWADDR, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            WEIGHTS_0_AWADDR <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWADDR;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            WEIGHTS_0_AWADDR <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWADDR;
        else 
            WEIGHTS_0_AWADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    WEIGHTS_0_AWLEN_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWLEN, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWLEN, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            WEIGHTS_0_AWLEN <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWLEN;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            WEIGHTS_0_AWLEN <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWLEN;
        else 
            WEIGHTS_0_AWLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    WEIGHTS_0_AWVALID_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWVALID, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWVALID, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            WEIGHTS_0_AWVALID <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_AWVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            WEIGHTS_0_AWVALID <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_AWVALID;
        else 
            WEIGHTS_0_AWVALID <= ap_const_logic_0;
        end if; 
    end process;


    WEIGHTS_0_BREADY_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_BREADY, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_BREADY, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            WEIGHTS_0_BREADY <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_BREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            WEIGHTS_0_BREADY <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_BREADY;
        else 
            WEIGHTS_0_BREADY <= ap_const_logic_0;
        end if; 
    end process;


    WEIGHTS_0_RREADY_assign_proc : process(ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state63, ap_CS_fsm_state81, grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_RREADY, grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_RREADY, grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_RREADY, grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_RREADY, grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_RREADY, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_RREADY, ap_CS_fsm_state64, ap_CS_fsm_state82, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            WEIGHTS_0_RREADY <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            WEIGHTS_0_RREADY <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state82) or (ap_const_logic_1 = ap_CS_fsm_state81))) then 
            WEIGHTS_0_RREADY <= grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_m_axi_WEIGHTS_0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state63) or (ap_const_logic_1 = ap_CS_fsm_state64))) then 
            WEIGHTS_0_RREADY <= grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_m_axi_WEIGHTS_0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state54) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            WEIGHTS_0_RREADY <= grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_m_axi_WEIGHTS_0_RREADY;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state36) or (ap_const_logic_1 = ap_CS_fsm_state35))) then 
            WEIGHTS_0_RREADY <= grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_m_axi_WEIGHTS_0_RREADY;
        else 
            WEIGHTS_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;


    WEIGHTS_0_WDATA_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WDATA, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WDATA, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            WEIGHTS_0_WDATA <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WDATA;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            WEIGHTS_0_WDATA <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WDATA;
        else 
            WEIGHTS_0_WDATA <= "XXXXXXXX";
        end if; 
    end process;


    WEIGHTS_0_WSTRB_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WSTRB, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WSTRB, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            WEIGHTS_0_WSTRB <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WSTRB;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            WEIGHTS_0_WSTRB <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WSTRB;
        else 
            WEIGHTS_0_WSTRB <= "X";
        end if; 
    end process;


    WEIGHTS_0_WVALID_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WVALID, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WVALID, ap_CS_fsm_state83, ap_CS_fsm_state84, ap_CS_fsm_state85, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) or (ap_const_logic_1 = ap_CS_fsm_state85))) then 
            WEIGHTS_0_WVALID <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_m_axi_WEIGHTS_0_WVALID;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state84) or (ap_const_logic_1 = ap_CS_fsm_state83))) then 
            WEIGHTS_0_WVALID <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_m_axi_WEIGHTS_0_WVALID;
        else 
            WEIGHTS_0_WVALID <= ap_const_logic_0;
        end if; 
    end process;


    WEIGHTS_blk_n_AR_assign_proc : process(m_axi_WEIGHTS_ARREADY, ap_CS_fsm_state27, ap_CS_fsm_state55, ap_CS_fsm_state45, ap_CS_fsm_state65)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state65) or (ap_const_logic_1 = ap_CS_fsm_state45) or (ap_const_logic_1 = ap_CS_fsm_state55) or (ap_const_logic_1 = ap_CS_fsm_state27))) then 
            WEIGHTS_blk_n_AR <= m_axi_WEIGHTS_ARREADY;
        else 
            WEIGHTS_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state42 <= ap_CS_fsm(41);
    ap_CS_fsm_state43 <= ap_CS_fsm(42);
    ap_CS_fsm_state44 <= ap_CS_fsm(43);
    ap_CS_fsm_state45 <= ap_CS_fsm(44);
    ap_CS_fsm_state46 <= ap_CS_fsm(45);
    ap_CS_fsm_state47 <= ap_CS_fsm(46);
    ap_CS_fsm_state48 <= ap_CS_fsm(47);
    ap_CS_fsm_state49 <= ap_CS_fsm(48);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state50 <= ap_CS_fsm(49);
    ap_CS_fsm_state51 <= ap_CS_fsm(50);
    ap_CS_fsm_state52 <= ap_CS_fsm(51);
    ap_CS_fsm_state53 <= ap_CS_fsm(52);
    ap_CS_fsm_state54 <= ap_CS_fsm(53);
    ap_CS_fsm_state55 <= ap_CS_fsm(54);
    ap_CS_fsm_state56 <= ap_CS_fsm(55);
    ap_CS_fsm_state57 <= ap_CS_fsm(56);
    ap_CS_fsm_state58 <= ap_CS_fsm(57);
    ap_CS_fsm_state59 <= ap_CS_fsm(58);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state60 <= ap_CS_fsm(59);
    ap_CS_fsm_state61 <= ap_CS_fsm(60);
    ap_CS_fsm_state62 <= ap_CS_fsm(61);
    ap_CS_fsm_state63 <= ap_CS_fsm(62);
    ap_CS_fsm_state64 <= ap_CS_fsm(63);
    ap_CS_fsm_state65 <= ap_CS_fsm(64);
    ap_CS_fsm_state66 <= ap_CS_fsm(65);
    ap_CS_fsm_state67 <= ap_CS_fsm(66);
    ap_CS_fsm_state68 <= ap_CS_fsm(67);
    ap_CS_fsm_state69 <= ap_CS_fsm(68);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state70 <= ap_CS_fsm(69);
    ap_CS_fsm_state71 <= ap_CS_fsm(70);
    ap_CS_fsm_state72 <= ap_CS_fsm(71);
    ap_CS_fsm_state73 <= ap_CS_fsm(72);
    ap_CS_fsm_state74 <= ap_CS_fsm(73);
    ap_CS_fsm_state75 <= ap_CS_fsm(74);
    ap_CS_fsm_state76 <= ap_CS_fsm(75);
    ap_CS_fsm_state77 <= ap_CS_fsm(76);
    ap_CS_fsm_state78 <= ap_CS_fsm(77);
    ap_CS_fsm_state79 <= ap_CS_fsm(78);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state80 <= ap_CS_fsm(79);
    ap_CS_fsm_state81 <= ap_CS_fsm(80);
    ap_CS_fsm_state82 <= ap_CS_fsm(81);
    ap_CS_fsm_state83 <= ap_CS_fsm(82);
    ap_CS_fsm_state84 <= ap_CS_fsm(83);
    ap_CS_fsm_state85 <= ap_CS_fsm(84);
    ap_CS_fsm_state86 <= ap_CS_fsm(85);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;
    ap_ST_fsm_state11_blk <= ap_const_logic_0;
    ap_ST_fsm_state12_blk <= ap_const_logic_0;
    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;
    ap_ST_fsm_state17_blk <= ap_const_logic_0;
    ap_ST_fsm_state18_blk <= ap_const_logic_0;
    ap_ST_fsm_state19_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state20_blk <= ap_const_logic_0;
    ap_ST_fsm_state21_blk <= ap_const_logic_0;
    ap_ST_fsm_state22_blk <= ap_const_logic_0;
    ap_ST_fsm_state23_blk <= ap_const_logic_0;
    ap_ST_fsm_state24_blk <= ap_const_logic_0;
    ap_ST_fsm_state25_blk <= ap_const_logic_0;
    ap_ST_fsm_state26_blk <= ap_const_logic_0;

    ap_ST_fsm_state27_blk_assign_proc : process(WEIGHTS_0_ARREADY)
    begin
        if ((ap_const_logic_0 = WEIGHTS_0_ARREADY)) then 
            ap_ST_fsm_state27_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state27_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state28_blk <= ap_const_logic_0;
    ap_ST_fsm_state29_blk <= ap_const_logic_0;

    ap_ST_fsm_state2_blk_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_done)
    begin
        if ((grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state30_blk <= ap_const_logic_0;
    ap_ST_fsm_state31_blk <= ap_const_logic_0;
    ap_ST_fsm_state32_blk <= ap_const_logic_0;
    ap_ST_fsm_state33_blk <= ap_const_logic_0;
    ap_ST_fsm_state34_blk <= ap_const_logic_0;
    ap_ST_fsm_state35_blk <= ap_const_logic_0;

    ap_ST_fsm_state36_blk_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_done)
    begin
        if ((grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state36_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state36_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state37_blk <= ap_const_logic_0;
    ap_ST_fsm_state38_blk <= ap_const_logic_0;
    ap_ST_fsm_state39_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state40_blk <= ap_const_logic_0;
    ap_ST_fsm_state41_blk <= ap_const_logic_0;
    ap_ST_fsm_state42_blk <= ap_const_logic_0;
    ap_ST_fsm_state43_blk <= ap_const_logic_0;
    ap_ST_fsm_state44_blk <= ap_const_logic_0;

    ap_ST_fsm_state45_blk_assign_proc : process(WEIGHTS_0_ARREADY)
    begin
        if ((ap_const_logic_0 = WEIGHTS_0_ARREADY)) then 
            ap_ST_fsm_state45_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state45_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state46_blk <= ap_const_logic_0;
    ap_ST_fsm_state47_blk <= ap_const_logic_0;
    ap_ST_fsm_state48_blk <= ap_const_logic_0;
    ap_ST_fsm_state49_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state50_blk <= ap_const_logic_0;
    ap_ST_fsm_state51_blk <= ap_const_logic_0;
    ap_ST_fsm_state52_blk <= ap_const_logic_0;
    ap_ST_fsm_state53_blk <= ap_const_logic_0;

    ap_ST_fsm_state54_blk_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_done)
    begin
        if ((grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state54_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state54_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state55_blk_assign_proc : process(WEIGHTS_0_ARREADY)
    begin
        if ((ap_const_logic_0 = WEIGHTS_0_ARREADY)) then 
            ap_ST_fsm_state55_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state55_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state56_blk <= ap_const_logic_0;
    ap_ST_fsm_state57_blk <= ap_const_logic_0;
    ap_ST_fsm_state58_blk <= ap_const_logic_0;
    ap_ST_fsm_state59_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state60_blk <= ap_const_logic_0;
    ap_ST_fsm_state61_blk <= ap_const_logic_0;
    ap_ST_fsm_state62_blk <= ap_const_logic_0;
    ap_ST_fsm_state63_blk <= ap_const_logic_0;

    ap_ST_fsm_state64_blk_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_done)
    begin
        if ((grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state64_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state64_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state65_blk_assign_proc : process(WEIGHTS_0_ARREADY)
    begin
        if ((ap_const_logic_0 = WEIGHTS_0_ARREADY)) then 
            ap_ST_fsm_state65_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state65_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state66_blk <= ap_const_logic_0;
    ap_ST_fsm_state67_blk <= ap_const_logic_0;
    ap_ST_fsm_state68_blk <= ap_const_logic_0;
    ap_ST_fsm_state69_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state70_blk <= ap_const_logic_0;
    ap_ST_fsm_state71_blk <= ap_const_logic_0;
    ap_ST_fsm_state72_blk <= ap_const_logic_0;
    ap_ST_fsm_state73_blk <= ap_const_logic_0;
    ap_ST_fsm_state74_blk <= ap_const_logic_0;
    ap_ST_fsm_state75_blk <= ap_const_logic_0;
    ap_ST_fsm_state76_blk <= ap_const_logic_0;
    ap_ST_fsm_state77_blk <= ap_const_logic_0;
    ap_ST_fsm_state78_blk <= ap_const_logic_0;
    ap_ST_fsm_state79_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state80_blk <= ap_const_logic_0;
    ap_ST_fsm_state81_blk <= ap_const_logic_0;

    ap_ST_fsm_state82_blk_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_done)
    begin
        if ((grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state82_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state82_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state83_blk <= ap_const_logic_0;

    ap_ST_fsm_state84_blk_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_done)
    begin
        if ((grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state84_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state84_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state85_blk <= ap_const_logic_0;

    ap_ST_fsm_state86_blk_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_done)
    begin
        if ((grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state86_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state86_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_done, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) and (grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_done = ap_const_logic_1))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_done, ap_CS_fsm_state86)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state86) and (grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_done = ap_const_logic_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;

    grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_start <= grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_ap_start_reg;
    grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_start <= grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_ap_start_reg;
    grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_start <= grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_start_reg;
    grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_start <= grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_ap_start_reg;
    grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_start <= grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_start_reg;
    grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_start <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_ap_start_reg;
    grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_start <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_ap_start_reg;

    hidden_neg_address0_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_hidden_neg_address0, ap_CS_fsm_state64, hidden_neg_address0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            hidden_neg_address0 <= grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_hidden_neg_address0;
        else 
            hidden_neg_address0 <= hidden_neg_address0_local;
        end if; 
    end process;


    hidden_neg_address0_local_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            hidden_neg_address0_local <= ap_const_lv64_1F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            hidden_neg_address0_local <= ap_const_lv64_1D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            hidden_neg_address0_local <= ap_const_lv64_1B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            hidden_neg_address0_local <= ap_const_lv64_19(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            hidden_neg_address0_local <= ap_const_lv64_17(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            hidden_neg_address0_local <= ap_const_lv64_15(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            hidden_neg_address0_local <= ap_const_lv64_13(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            hidden_neg_address0_local <= ap_const_lv64_11(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            hidden_neg_address0_local <= ap_const_lv64_F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            hidden_neg_address0_local <= ap_const_lv64_D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            hidden_neg_address0_local <= ap_const_lv64_B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            hidden_neg_address0_local <= ap_const_lv64_9(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            hidden_neg_address0_local <= ap_const_lv64_7(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            hidden_neg_address0_local <= ap_const_lv64_5(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            hidden_neg_address0_local <= ap_const_lv64_3(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            hidden_neg_address0_local <= ap_const_lv64_1(5 - 1 downto 0);
        else 
            hidden_neg_address0_local <= "XXXXX";
        end if; 
    end process;


    hidden_neg_address1_local_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state80)) then 
            hidden_neg_address1_local <= ap_const_lv64_1E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state79)) then 
            hidden_neg_address1_local <= ap_const_lv64_1C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state78)) then 
            hidden_neg_address1_local <= ap_const_lv64_1A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state77)) then 
            hidden_neg_address1_local <= ap_const_lv64_18(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state76)) then 
            hidden_neg_address1_local <= ap_const_lv64_16(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state75)) then 
            hidden_neg_address1_local <= ap_const_lv64_14(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state74)) then 
            hidden_neg_address1_local <= ap_const_lv64_12(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state73)) then 
            hidden_neg_address1_local <= ap_const_lv64_10(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state72)) then 
            hidden_neg_address1_local <= ap_const_lv64_E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state71)) then 
            hidden_neg_address1_local <= ap_const_lv64_C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state70)) then 
            hidden_neg_address1_local <= ap_const_lv64_A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state69)) then 
            hidden_neg_address1_local <= ap_const_lv64_8(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state68)) then 
            hidden_neg_address1_local <= ap_const_lv64_6(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state67)) then 
            hidden_neg_address1_local <= ap_const_lv64_4(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state66)) then 
            hidden_neg_address1_local <= ap_const_lv64_2(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state65)) then 
            hidden_neg_address1_local <= ap_const_lv64_0(5 - 1 downto 0);
        else 
            hidden_neg_address1_local <= "XXXXX";
        end if; 
    end process;


    hidden_neg_ce0_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_hidden_neg_ce0, ap_CS_fsm_state64, hidden_neg_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            hidden_neg_ce0 <= grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_hidden_neg_ce0;
        else 
            hidden_neg_ce0 <= hidden_neg_ce0_local;
        end if; 
    end process;


    hidden_neg_ce0_local_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, WEIGHTS_0_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state67) or ((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state65)))) then 
            hidden_neg_ce0_local <= ap_const_logic_1;
        else 
            hidden_neg_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    hidden_neg_ce1_local_assign_proc : process(ap_CS_fsm_state65, ap_CS_fsm_state66, ap_CS_fsm_state67, ap_CS_fsm_state68, ap_CS_fsm_state69, ap_CS_fsm_state70, ap_CS_fsm_state71, ap_CS_fsm_state72, ap_CS_fsm_state73, ap_CS_fsm_state74, ap_CS_fsm_state75, ap_CS_fsm_state76, ap_CS_fsm_state77, ap_CS_fsm_state78, ap_CS_fsm_state79, ap_CS_fsm_state80, WEIGHTS_0_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state66) or (ap_const_logic_1 = ap_CS_fsm_state80) or (ap_const_logic_1 = ap_CS_fsm_state79) or (ap_const_logic_1 = ap_CS_fsm_state78) or (ap_const_logic_1 = ap_CS_fsm_state77) or (ap_const_logic_1 = ap_CS_fsm_state76) or (ap_const_logic_1 = ap_CS_fsm_state75) or (ap_const_logic_1 = ap_CS_fsm_state74) or (ap_const_logic_1 = ap_CS_fsm_state73) or (ap_const_logic_1 = ap_CS_fsm_state72) or (ap_const_logic_1 = ap_CS_fsm_state71) or (ap_const_logic_1 = ap_CS_fsm_state70) or (ap_const_logic_1 = ap_CS_fsm_state69) or (ap_const_logic_1 = ap_CS_fsm_state68) or (ap_const_logic_1 = ap_CS_fsm_state67) or ((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state65)))) then 
            hidden_neg_ce1_local <= ap_const_logic_1;
        else 
            hidden_neg_ce1_local <= ap_const_logic_0;
        end if; 
    end process;


    hidden_neg_we0_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_hidden_neg_we0, ap_CS_fsm_state64)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state64)) then 
            hidden_neg_we0 <= grp_train_step_Pipeline_VITIS_LOOP_28_11_fu_1954_hidden_neg_we0;
        else 
            hidden_neg_we0 <= ap_const_logic_0;
        end if; 
    end process;


    hidden_pos_address0_assign_proc : process(ap_CS_fsm_state36, grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_hidden_pos_address0, hidden_pos_address0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            hidden_pos_address0 <= grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_hidden_pos_address0;
        else 
            hidden_pos_address0 <= hidden_pos_address0_local;
        end if; 
    end process;


    hidden_pos_address0_local_assign_proc : process(ap_CS_fsm_state45, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            hidden_pos_address0_local <= ap_const_lv64_1F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            hidden_pos_address0_local <= ap_const_lv64_1D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            hidden_pos_address0_local <= ap_const_lv64_1B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            hidden_pos_address0_local <= ap_const_lv64_19(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            hidden_pos_address0_local <= ap_const_lv64_17(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            hidden_pos_address0_local <= ap_const_lv64_15(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            hidden_pos_address0_local <= ap_const_lv64_13(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            hidden_pos_address0_local <= ap_const_lv64_11(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            hidden_pos_address0_local <= ap_const_lv64_F(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            hidden_pos_address0_local <= ap_const_lv64_D(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            hidden_pos_address0_local <= ap_const_lv64_B(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            hidden_pos_address0_local <= ap_const_lv64_9(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            hidden_pos_address0_local <= ap_const_lv64_7(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            hidden_pos_address0_local <= ap_const_lv64_5(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            hidden_pos_address0_local <= ap_const_lv64_3(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            hidden_pos_address0_local <= ap_const_lv64_1(5 - 1 downto 0);
        else 
            hidden_pos_address0_local <= "XXXXX";
        end if; 
    end process;


    hidden_pos_address1_local_assign_proc : process(ap_CS_fsm_state45, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            hidden_pos_address1_local <= ap_const_lv64_1E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            hidden_pos_address1_local <= ap_const_lv64_1C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            hidden_pos_address1_local <= ap_const_lv64_1A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            hidden_pos_address1_local <= ap_const_lv64_18(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            hidden_pos_address1_local <= ap_const_lv64_16(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            hidden_pos_address1_local <= ap_const_lv64_14(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            hidden_pos_address1_local <= ap_const_lv64_12(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            hidden_pos_address1_local <= ap_const_lv64_10(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            hidden_pos_address1_local <= ap_const_lv64_E(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            hidden_pos_address1_local <= ap_const_lv64_C(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            hidden_pos_address1_local <= ap_const_lv64_A(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            hidden_pos_address1_local <= ap_const_lv64_8(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            hidden_pos_address1_local <= ap_const_lv64_6(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            hidden_pos_address1_local <= ap_const_lv64_4(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            hidden_pos_address1_local <= ap_const_lv64_2(5 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            hidden_pos_address1_local <= ap_const_lv64_0(5 - 1 downto 0);
        else 
            hidden_pos_address1_local <= "XXXXX";
        end if; 
    end process;


    hidden_pos_ce0_assign_proc : process(ap_CS_fsm_state36, grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_hidden_pos_ce0, hidden_pos_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            hidden_pos_ce0 <= grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_hidden_pos_ce0;
        else 
            hidden_pos_ce0 <= hidden_pos_ce0_local;
        end if; 
    end process;


    hidden_pos_ce0_local_assign_proc : process(ap_CS_fsm_state45, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, WEIGHTS_0_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or ((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state45)))) then 
            hidden_pos_ce0_local <= ap_const_logic_1;
        else 
            hidden_pos_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    hidden_pos_ce1_local_assign_proc : process(ap_CS_fsm_state45, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, WEIGHTS_0_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or ((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state45)))) then 
            hidden_pos_ce1_local <= ap_const_logic_1;
        else 
            hidden_pos_ce1_local <= ap_const_logic_0;
        end if; 
    end process;


    hidden_pos_we0_assign_proc : process(ap_CS_fsm_state36, grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_hidden_pos_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            hidden_pos_we0 <= grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_hidden_pos_we0;
        else 
            hidden_pos_we0 <= ap_const_logic_0;
        end if; 
    end process;

    img_neg_address0 <= grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_img_neg_address0;
    img_neg_ce0 <= grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_img_neg_ce0;
    img_pos_address0 <= grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_img_pos_address0;
    img_pos_ce0 <= grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_img_pos_ce0;

    in_neg_address0_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_neg_address0, ap_CS_fsm_state2, in_neg_address0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_neg_address0 <= grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_neg_address0;
        else 
            in_neg_address0 <= in_neg_address0_local;
        end if; 
    end process;


    in_neg_address0_local_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state45, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            in_neg_address0_local <= ap_const_lv64_3F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            in_neg_address0_local <= ap_const_lv64_3D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            in_neg_address0_local <= ap_const_lv64_3B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            in_neg_address0_local <= ap_const_lv64_39(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            in_neg_address0_local <= ap_const_lv64_37(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            in_neg_address0_local <= ap_const_lv64_35(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            in_neg_address0_local <= ap_const_lv64_33(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            in_neg_address0_local <= ap_const_lv64_31(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            in_neg_address0_local <= ap_const_lv64_2F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            in_neg_address0_local <= ap_const_lv64_2D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            in_neg_address0_local <= ap_const_lv64_2B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            in_neg_address0_local <= ap_const_lv64_29(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            in_neg_address0_local <= ap_const_lv64_27(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            in_neg_address0_local <= ap_const_lv64_25(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            in_neg_address0_local <= ap_const_lv64_23(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            in_neg_address0_local <= ap_const_lv64_21(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            in_neg_address0_local <= ap_const_lv64_1F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            in_neg_address0_local <= ap_const_lv64_1D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            in_neg_address0_local <= ap_const_lv64_1B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            in_neg_address0_local <= ap_const_lv64_19(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            in_neg_address0_local <= ap_const_lv64_17(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            in_neg_address0_local <= ap_const_lv64_15(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            in_neg_address0_local <= ap_const_lv64_13(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            in_neg_address0_local <= ap_const_lv64_11(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            in_neg_address0_local <= ap_const_lv64_F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            in_neg_address0_local <= ap_const_lv64_D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            in_neg_address0_local <= ap_const_lv64_B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            in_neg_address0_local <= ap_const_lv64_9(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            in_neg_address0_local <= ap_const_lv64_7(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            in_neg_address0_local <= ap_const_lv64_5(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            in_neg_address0_local <= ap_const_lv64_3(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            in_neg_address0_local <= ap_const_lv64_1(6 - 1 downto 0);
        else 
            in_neg_address0_local <= "XXXXXX";
        end if; 
    end process;


    in_neg_address1_local_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state45, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            in_neg_address1_local <= ap_const_lv64_3E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            in_neg_address1_local <= ap_const_lv64_3C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            in_neg_address1_local <= ap_const_lv64_3A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state59)) then 
            in_neg_address1_local <= ap_const_lv64_38(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            in_neg_address1_local <= ap_const_lv64_36(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
            in_neg_address1_local <= ap_const_lv64_34(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state56)) then 
            in_neg_address1_local <= ap_const_lv64_32(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state55)) then 
            in_neg_address1_local <= ap_const_lv64_30(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            in_neg_address1_local <= ap_const_lv64_2E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            in_neg_address1_local <= ap_const_lv64_2C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state52)) then 
            in_neg_address1_local <= ap_const_lv64_2A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
            in_neg_address1_local <= ap_const_lv64_28(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state50)) then 
            in_neg_address1_local <= ap_const_lv64_26(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state49)) then 
            in_neg_address1_local <= ap_const_lv64_24(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state48)) then 
            in_neg_address1_local <= ap_const_lv64_22(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state47)) then 
            in_neg_address1_local <= ap_const_lv64_20(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state46)) then 
            in_neg_address1_local <= ap_const_lv64_1E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state45)) then 
            in_neg_address1_local <= ap_const_lv64_1C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state44)) then 
            in_neg_address1_local <= ap_const_lv64_1A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state43)) then 
            in_neg_address1_local <= ap_const_lv64_18(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state42)) then 
            in_neg_address1_local <= ap_const_lv64_16(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            in_neg_address1_local <= ap_const_lv64_14(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
            in_neg_address1_local <= ap_const_lv64_12(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            in_neg_address1_local <= ap_const_lv64_10(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
            in_neg_address1_local <= ap_const_lv64_E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            in_neg_address1_local <= ap_const_lv64_C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
            in_neg_address1_local <= ap_const_lv64_A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            in_neg_address1_local <= ap_const_lv64_8(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            in_neg_address1_local <= ap_const_lv64_6(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            in_neg_address1_local <= ap_const_lv64_4(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            in_neg_address1_local <= ap_const_lv64_2(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            in_neg_address1_local <= ap_const_lv64_0(6 - 1 downto 0);
        else 
            in_neg_address1_local <= "XXXXXX";
        end if; 
    end process;


    in_neg_ce0_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_neg_ce0, ap_CS_fsm_state2, in_neg_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_neg_ce0 <= grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_neg_ce0;
        else 
            in_neg_ce0 <= in_neg_ce0_local;
        end if; 
    end process;


    in_neg_ce0_local_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state45, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_done, grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_done, WEIGHTS_0_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 
    = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or ((ap_const_logic_1 = ap_CS_fsm_state54) and (grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state36) and (grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state45)) or ((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state55)))) then 
            in_neg_ce0_local <= ap_const_logic_1;
        else 
            in_neg_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    in_neg_ce1_local_assign_proc : process(ap_CS_fsm_state55, ap_CS_fsm_state45, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, ap_CS_fsm_state35, ap_CS_fsm_state36, ap_CS_fsm_state37, ap_CS_fsm_state38, ap_CS_fsm_state39, ap_CS_fsm_state40, ap_CS_fsm_state41, ap_CS_fsm_state42, ap_CS_fsm_state43, ap_CS_fsm_state44, ap_CS_fsm_state46, ap_CS_fsm_state47, ap_CS_fsm_state48, ap_CS_fsm_state49, ap_CS_fsm_state50, ap_CS_fsm_state51, ap_CS_fsm_state52, ap_CS_fsm_state53, ap_CS_fsm_state54, ap_CS_fsm_state56, ap_CS_fsm_state57, ap_CS_fsm_state58, ap_CS_fsm_state59, ap_CS_fsm_state60, ap_CS_fsm_state61, ap_CS_fsm_state62, grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_done, grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_done, WEIGHTS_0_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or (ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state59) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state57) or (ap_const_logic_1 = ap_CS_fsm_state56) or (ap_const_logic_1 = ap_CS_fsm_state53) or (ap_const_logic_1 = ap_CS_fsm_state52) or (ap_const_logic_1 = ap_CS_fsm_state51) or (ap_const_logic_1 = ap_CS_fsm_state50) or (ap_const_logic_1 = ap_CS_fsm_state49) or (ap_const_logic_1 = ap_CS_fsm_state48) or (ap_const_logic_1 = ap_CS_fsm_state47) or (ap_const_logic_1 = ap_CS_fsm_state46) or (ap_const_logic_1 = ap_CS_fsm_state44) or (ap_const_logic_1 = ap_CS_fsm_state43) or (ap_const_logic_1 = ap_CS_fsm_state42) or (ap_const_logic_1 = ap_CS_fsm_state41) or (ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state39) or (ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state37) or (ap_const_logic_1 = ap_CS_fsm_state35) or (ap_const_logic_1 
    = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or ((ap_const_logic_1 = ap_CS_fsm_state54) and (grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state36) and (grp_train_step_Pipeline_VITIS_LOOP_28_1_fu_1838_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state45)) or ((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state55)))) then 
            in_neg_ce1_local <= ap_const_logic_1;
        else 
            in_neg_ce1_local <= ap_const_logic_0;
        end if; 
    end process;


    in_neg_we0_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_neg_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_neg_we0 <= grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_neg_we0;
        else 
            in_neg_we0 <= ap_const_logic_0;
        end if; 
    end process;


    in_pos_address0_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_pos_address0, ap_CS_fsm_state2, in_pos_address0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_pos_address0 <= grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_pos_address0;
        else 
            in_pos_address0 <= in_pos_address0_local;
        end if; 
    end process;


    in_pos_address0_local_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            in_pos_address0_local <= ap_const_lv64_3F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            in_pos_address0_local <= ap_const_lv64_3D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            in_pos_address0_local <= ap_const_lv64_3B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            in_pos_address0_local <= ap_const_lv64_39(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            in_pos_address0_local <= ap_const_lv64_37(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            in_pos_address0_local <= ap_const_lv64_35(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            in_pos_address0_local <= ap_const_lv64_33(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            in_pos_address0_local <= ap_const_lv64_31(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            in_pos_address0_local <= ap_const_lv64_2F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            in_pos_address0_local <= ap_const_lv64_2D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            in_pos_address0_local <= ap_const_lv64_2B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            in_pos_address0_local <= ap_const_lv64_29(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            in_pos_address0_local <= ap_const_lv64_27(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            in_pos_address0_local <= ap_const_lv64_25(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            in_pos_address0_local <= ap_const_lv64_23(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            in_pos_address0_local <= ap_const_lv64_21(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            in_pos_address0_local <= ap_const_lv64_1F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            in_pos_address0_local <= ap_const_lv64_1D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            in_pos_address0_local <= ap_const_lv64_1B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            in_pos_address0_local <= ap_const_lv64_19(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            in_pos_address0_local <= ap_const_lv64_17(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            in_pos_address0_local <= ap_const_lv64_15(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            in_pos_address0_local <= ap_const_lv64_13(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            in_pos_address0_local <= ap_const_lv64_11(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            in_pos_address0_local <= ap_const_lv64_F(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            in_pos_address0_local <= ap_const_lv64_D(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            in_pos_address0_local <= ap_const_lv64_B(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            in_pos_address0_local <= ap_const_lv64_9(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            in_pos_address0_local <= ap_const_lv64_7(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            in_pos_address0_local <= ap_const_lv64_5(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            in_pos_address0_local <= ap_const_lv64_3(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_pos_address0_local <= ap_const_lv64_1(6 - 1 downto 0);
        else 
            in_pos_address0_local <= "XXXXXX";
        end if; 
    end process;


    in_pos_address1_local_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            in_pos_address1_local <= ap_const_lv64_3E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            in_pos_address1_local <= ap_const_lv64_3C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            in_pos_address1_local <= ap_const_lv64_3A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            in_pos_address1_local <= ap_const_lv64_38(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            in_pos_address1_local <= ap_const_lv64_36(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            in_pos_address1_local <= ap_const_lv64_34(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            in_pos_address1_local <= ap_const_lv64_32(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            in_pos_address1_local <= ap_const_lv64_30(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            in_pos_address1_local <= ap_const_lv64_2E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            in_pos_address1_local <= ap_const_lv64_2C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            in_pos_address1_local <= ap_const_lv64_2A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            in_pos_address1_local <= ap_const_lv64_28(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            in_pos_address1_local <= ap_const_lv64_26(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            in_pos_address1_local <= ap_const_lv64_24(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            in_pos_address1_local <= ap_const_lv64_22(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            in_pos_address1_local <= ap_const_lv64_20(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            in_pos_address1_local <= ap_const_lv64_1E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            in_pos_address1_local <= ap_const_lv64_1C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            in_pos_address1_local <= ap_const_lv64_1A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            in_pos_address1_local <= ap_const_lv64_18(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            in_pos_address1_local <= ap_const_lv64_16(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            in_pos_address1_local <= ap_const_lv64_14(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            in_pos_address1_local <= ap_const_lv64_12(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            in_pos_address1_local <= ap_const_lv64_10(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            in_pos_address1_local <= ap_const_lv64_E(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            in_pos_address1_local <= ap_const_lv64_C(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            in_pos_address1_local <= ap_const_lv64_A(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            in_pos_address1_local <= ap_const_lv64_8(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            in_pos_address1_local <= ap_const_lv64_6(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            in_pos_address1_local <= ap_const_lv64_4(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            in_pos_address1_local <= ap_const_lv64_2(6 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            in_pos_address1_local <= ap_const_lv64_0(6 - 1 downto 0);
        else 
            in_pos_address1_local <= "XXXXXX";
        end if; 
    end process;


    in_pos_ce0_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_pos_ce0, ap_CS_fsm_state2, in_pos_ce0_local)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_pos_ce0 <= grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_pos_ce0;
        else 
            in_pos_ce0 <= in_pos_ce0_local;
        end if; 
    end process;


    in_pos_ce0_local_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, WEIGHTS_0_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 
    = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            in_pos_ce0_local <= ap_const_logic_1;
        else 
            in_pos_ce0_local <= ap_const_logic_0;
        end if; 
    end process;


    in_pos_ce1_local_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state3, ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6, ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state13, ap_CS_fsm_state14, ap_CS_fsm_state15, ap_CS_fsm_state16, ap_CS_fsm_state17, ap_CS_fsm_state18, ap_CS_fsm_state19, ap_CS_fsm_state20, ap_CS_fsm_state21, ap_CS_fsm_state22, ap_CS_fsm_state23, ap_CS_fsm_state24, ap_CS_fsm_state25, ap_CS_fsm_state26, ap_CS_fsm_state28, ap_CS_fsm_state29, ap_CS_fsm_state30, ap_CS_fsm_state31, ap_CS_fsm_state32, ap_CS_fsm_state33, ap_CS_fsm_state34, WEIGHTS_0_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state34) or (ap_const_logic_1 = ap_CS_fsm_state33) or (ap_const_logic_1 = ap_CS_fsm_state32) or (ap_const_logic_1 = ap_CS_fsm_state31) or (ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or (ap_const_logic_1 = ap_CS_fsm_state28) or (ap_const_logic_1 = ap_CS_fsm_state26) or (ap_const_logic_1 = ap_CS_fsm_state25) or (ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or (ap_const_logic_1 = ap_CS_fsm_state19) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state17) or (ap_const_logic_1 = ap_CS_fsm_state16) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 
    = ap_CS_fsm_state9) or (ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = WEIGHTS_0_ARREADY) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            in_pos_ce1_local <= ap_const_logic_1;
        else 
            in_pos_ce1_local <= ap_const_logic_0;
        end if; 
    end process;


    in_pos_we0_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_pos_we0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            in_pos_we0 <= grp_train_step_Pipeline_VITIS_LOOP_118_1_fu_1826_in_pos_we0;
        else 
            in_pos_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_neg_address0_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_out_neg_address0, grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_neg_address0, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_neg_address0, ap_CS_fsm_state82, ap_CS_fsm_state84, ap_CS_fsm_state86)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            out_neg_address0 <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_neg_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            out_neg_address0 <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_neg_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            out_neg_address0 <= grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_out_neg_address0;
        else 
            out_neg_address0 <= "XXXX";
        end if; 
    end process;


    out_neg_ce0_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_out_neg_ce0, grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_neg_ce0, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_neg_ce0, ap_CS_fsm_state82, ap_CS_fsm_state84, ap_CS_fsm_state86)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            out_neg_ce0 <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_neg_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            out_neg_ce0 <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_neg_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            out_neg_ce0 <= grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_out_neg_ce0;
        else 
            out_neg_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_neg_we0_assign_proc : process(grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_out_neg_we0, ap_CS_fsm_state82)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state82)) then 
            out_neg_we0 <= grp_train_step_Pipeline_VITIS_LOOP_45_12_fu_2028_out_neg_we0;
        else 
            out_neg_we0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pos_address0_assign_proc : process(ap_CS_fsm_state54, grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_out_pos_address0, grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_pos_address0, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_pos_address0, ap_CS_fsm_state84, ap_CS_fsm_state86)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            out_pos_address0 <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_pos_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            out_pos_address0 <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_pos_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            out_pos_address0 <= grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_out_pos_address0;
        else 
            out_pos_address0 <= "XXXX";
        end if; 
    end process;


    out_pos_ce0_assign_proc : process(ap_CS_fsm_state54, grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_out_pos_ce0, grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_pos_ce0, grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_pos_ce0, ap_CS_fsm_state84, ap_CS_fsm_state86)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state86)) then 
            out_pos_ce0 <= grp_train_step_Pipeline_VITIS_LOOP_85_1_fu_2143_out_pos_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state84)) then 
            out_pos_ce0 <= grp_train_step_Pipeline_VITIS_LOOP_64_1_fu_2070_out_pos_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            out_pos_ce0 <= grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_out_pos_ce0;
        else 
            out_pos_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    out_pos_we0_assign_proc : process(ap_CS_fsm_state54, grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_out_pos_we0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
            out_pos_we0 <= grp_train_step_Pipeline_VITIS_LOOP_45_1_fu_1912_out_pos_we0;
        else 
            out_pos_we0 <= ap_const_logic_0;
        end if; 
    end process;

end behav;
