-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity train_step_forwardOutput is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    hidden_0_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_1_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_2_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_3_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_4_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_5_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_6_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_7_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_8_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_9_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_10_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_11_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_12_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_13_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_14_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_15_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_16_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_17_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_18_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_19_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_20_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_21_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_22_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_23_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_24_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_25_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_26_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_27_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_28_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_29_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_30_val : IN STD_LOGIC_VECTOR (1 downto 0);
    hidden_31_val : IN STD_LOGIC_VECTOR (1 downto 0);
    output_0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_0_ap_vld : OUT STD_LOGIC;
    output_1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_1_ap_vld : OUT STD_LOGIC;
    output_2 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_2_ap_vld : OUT STD_LOGIC;
    output_3 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_3_ap_vld : OUT STD_LOGIC;
    output_4 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_4_ap_vld : OUT STD_LOGIC;
    output_5 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_5_ap_vld : OUT STD_LOGIC;
    output_6 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_6_ap_vld : OUT STD_LOGIC;
    output_7 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_7_ap_vld : OUT STD_LOGIC;
    output_8 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_8_ap_vld : OUT STD_LOGIC;
    output_9 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_9_ap_vld : OUT STD_LOGIC;
    m_axi_WEIGHTS_0_AWVALID : OUT STD_LOGIC;
    m_axi_WEIGHTS_0_AWREADY : IN STD_LOGIC;
    m_axi_WEIGHTS_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_WEIGHTS_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_WEIGHTS_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHTS_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHTS_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_WVALID : OUT STD_LOGIC;
    m_axi_WEIGHTS_0_WREADY : IN STD_LOGIC;
    m_axi_WEIGHTS_0_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_WEIGHTS_0_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_WLAST : OUT STD_LOGIC;
    m_axi_WEIGHTS_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_ARVALID : OUT STD_LOGIC;
    m_axi_WEIGHTS_0_ARREADY : IN STD_LOGIC;
    m_axi_WEIGHTS_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_WEIGHTS_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_WEIGHTS_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHTS_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHTS_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_RVALID : IN STD_LOGIC;
    m_axi_WEIGHTS_0_RREADY : OUT STD_LOGIC;
    m_axi_WEIGHTS_0_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_WEIGHTS_0_RLAST : IN STD_LOGIC;
    m_axi_WEIGHTS_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
    m_axi_WEIGHTS_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_0_BVALID : IN STD_LOGIC;
    m_axi_WEIGHTS_0_BREADY : OUT STD_LOGIC;
    m_axi_WEIGHTS_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    W2 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of train_step_forwardOutput is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv64_140 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000101000000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal WEIGHTS_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_start : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_done : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_idle : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_ready : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWVALID : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_WVALID : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_WDATA : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_WSTRB : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_WLAST : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARVALID : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_RREADY : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_BREADY : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_0 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_0_ap_vld : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_9 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_9_ap_vld : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_8 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_8_ap_vld : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_7 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_7_ap_vld : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_6 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_6_ap_vld : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_5 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_5_ap_vld : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_4 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_4_ap_vld : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_3 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_3_ap_vld : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_2 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_2_ap_vld : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_1_ap_vld : STD_LOGIC;
    signal grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_start_reg : STD_LOGIC := '0';
    signal output_0_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal output_9_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal output_8_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal output_7_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal output_6_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal output_5_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal output_4_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal output_3_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal output_2_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal output_1_reg : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component train_step_forwardOutput_Pipeline_VITIS_LOOP_54_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_AWVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_AWREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_WEIGHTS_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_WEIGHTS_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_WREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
        m_axi_WEIGHTS_0_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WLAST : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_ARVALID : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_ARREADY : IN STD_LOGIC;
        m_axi_WEIGHTS_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_WEIGHTS_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_WEIGHTS_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_WEIGHTS_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_WEIGHTS_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RVALID : IN STD_LOGIC;
        m_axi_WEIGHTS_0_RREADY : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
        m_axi_WEIGHTS_0_RLAST : IN STD_LOGIC;
        m_axi_WEIGHTS_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
        m_axi_WEIGHTS_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_BVALID : IN STD_LOGIC;
        m_axi_WEIGHTS_0_BREADY : OUT STD_LOGIC;
        m_axi_WEIGHTS_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_WEIGHTS_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_WEIGHTS_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        output_0 : OUT STD_LOGIC_VECTOR (1 downto 0);
        output_0_ap_vld : OUT STD_LOGIC;
        W2 : IN STD_LOGIC_VECTOR (63 downto 0);
        output_9 : OUT STD_LOGIC_VECTOR (1 downto 0);
        output_9_ap_vld : OUT STD_LOGIC;
        output_8 : OUT STD_LOGIC_VECTOR (1 downto 0);
        output_8_ap_vld : OUT STD_LOGIC;
        output_7 : OUT STD_LOGIC_VECTOR (1 downto 0);
        output_7_ap_vld : OUT STD_LOGIC;
        output_6 : OUT STD_LOGIC_VECTOR (1 downto 0);
        output_6_ap_vld : OUT STD_LOGIC;
        output_5 : OUT STD_LOGIC_VECTOR (1 downto 0);
        output_5_ap_vld : OUT STD_LOGIC;
        output_4 : OUT STD_LOGIC_VECTOR (1 downto 0);
        output_4_ap_vld : OUT STD_LOGIC;
        output_3 : OUT STD_LOGIC_VECTOR (1 downto 0);
        output_3_ap_vld : OUT STD_LOGIC;
        output_2 : OUT STD_LOGIC_VECTOR (1 downto 0);
        output_2_ap_vld : OUT STD_LOGIC;
        output_1 : OUT STD_LOGIC_VECTOR (1 downto 0);
        output_1_ap_vld : OUT STD_LOGIC;
        sext_ln58 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_1 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_2 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_3 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_4 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_5 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_6 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_7 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_8 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_9 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_10 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_11 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_12 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_13 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_14 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_15 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_16 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_17 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_18 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_19 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_20 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_21 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_22 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_23 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_24 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_25 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_26 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_27 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_28 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_29 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln58_30 : IN STD_LOGIC_VECTOR (1 downto 0);
        sext_ln54 : IN STD_LOGIC_VECTOR (1 downto 0) );
    end component;



begin
    grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321 : component train_step_forwardOutput_Pipeline_VITIS_LOOP_54_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_start,
        ap_done => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_done,
        ap_idle => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_idle,
        ap_ready => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_ready,
        m_axi_WEIGHTS_0_AWVALID => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWVALID,
        m_axi_WEIGHTS_0_AWREADY => ap_const_logic_0,
        m_axi_WEIGHTS_0_AWADDR => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWADDR,
        m_axi_WEIGHTS_0_AWID => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWID,
        m_axi_WEIGHTS_0_AWLEN => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWLEN,
        m_axi_WEIGHTS_0_AWSIZE => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWSIZE,
        m_axi_WEIGHTS_0_AWBURST => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWBURST,
        m_axi_WEIGHTS_0_AWLOCK => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWLOCK,
        m_axi_WEIGHTS_0_AWCACHE => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWCACHE,
        m_axi_WEIGHTS_0_AWPROT => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWPROT,
        m_axi_WEIGHTS_0_AWQOS => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWQOS,
        m_axi_WEIGHTS_0_AWREGION => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWREGION,
        m_axi_WEIGHTS_0_AWUSER => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_AWUSER,
        m_axi_WEIGHTS_0_WVALID => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_WVALID,
        m_axi_WEIGHTS_0_WREADY => ap_const_logic_0,
        m_axi_WEIGHTS_0_WDATA => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_WDATA,
        m_axi_WEIGHTS_0_WSTRB => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_WSTRB,
        m_axi_WEIGHTS_0_WLAST => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_WLAST,
        m_axi_WEIGHTS_0_WID => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_WID,
        m_axi_WEIGHTS_0_WUSER => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_WUSER,
        m_axi_WEIGHTS_0_ARVALID => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARVALID,
        m_axi_WEIGHTS_0_ARREADY => m_axi_WEIGHTS_0_ARREADY,
        m_axi_WEIGHTS_0_ARADDR => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARADDR,
        m_axi_WEIGHTS_0_ARID => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARID,
        m_axi_WEIGHTS_0_ARLEN => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARLEN,
        m_axi_WEIGHTS_0_ARSIZE => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARSIZE,
        m_axi_WEIGHTS_0_ARBURST => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARBURST,
        m_axi_WEIGHTS_0_ARLOCK => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARLOCK,
        m_axi_WEIGHTS_0_ARCACHE => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARCACHE,
        m_axi_WEIGHTS_0_ARPROT => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARPROT,
        m_axi_WEIGHTS_0_ARQOS => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARQOS,
        m_axi_WEIGHTS_0_ARREGION => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARREGION,
        m_axi_WEIGHTS_0_ARUSER => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARUSER,
        m_axi_WEIGHTS_0_RVALID => m_axi_WEIGHTS_0_RVALID,
        m_axi_WEIGHTS_0_RREADY => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_RREADY,
        m_axi_WEIGHTS_0_RDATA => m_axi_WEIGHTS_0_RDATA,
        m_axi_WEIGHTS_0_RLAST => m_axi_WEIGHTS_0_RLAST,
        m_axi_WEIGHTS_0_RID => m_axi_WEIGHTS_0_RID,
        m_axi_WEIGHTS_0_RFIFONUM => m_axi_WEIGHTS_0_RFIFONUM,
        m_axi_WEIGHTS_0_RUSER => m_axi_WEIGHTS_0_RUSER,
        m_axi_WEIGHTS_0_RRESP => m_axi_WEIGHTS_0_RRESP,
        m_axi_WEIGHTS_0_BVALID => ap_const_logic_0,
        m_axi_WEIGHTS_0_BREADY => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_BREADY,
        m_axi_WEIGHTS_0_BRESP => ap_const_lv2_0,
        m_axi_WEIGHTS_0_BID => ap_const_lv1_0,
        m_axi_WEIGHTS_0_BUSER => ap_const_lv1_0,
        output_0 => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_0,
        output_0_ap_vld => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_0_ap_vld,
        W2 => W2,
        output_9 => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_9,
        output_9_ap_vld => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_9_ap_vld,
        output_8 => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_8,
        output_8_ap_vld => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_8_ap_vld,
        output_7 => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_7,
        output_7_ap_vld => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_7_ap_vld,
        output_6 => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_6,
        output_6_ap_vld => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_6_ap_vld,
        output_5 => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_5,
        output_5_ap_vld => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_5_ap_vld,
        output_4 => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_4,
        output_4_ap_vld => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_4_ap_vld,
        output_3 => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_3,
        output_3_ap_vld => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_3_ap_vld,
        output_2 => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_2,
        output_2_ap_vld => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_2_ap_vld,
        output_1 => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_1,
        output_1_ap_vld => grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_1_ap_vld,
        sext_ln58 => hidden_0_val,
        sext_ln58_1 => hidden_1_val,
        sext_ln58_2 => hidden_2_val,
        sext_ln58_3 => hidden_3_val,
        sext_ln58_4 => hidden_4_val,
        sext_ln58_5 => hidden_5_val,
        sext_ln58_6 => hidden_6_val,
        sext_ln58_7 => hidden_7_val,
        sext_ln58_8 => hidden_8_val,
        sext_ln58_9 => hidden_9_val,
        sext_ln58_10 => hidden_10_val,
        sext_ln58_11 => hidden_11_val,
        sext_ln58_12 => hidden_12_val,
        sext_ln58_13 => hidden_13_val,
        sext_ln58_14 => hidden_14_val,
        sext_ln58_15 => hidden_15_val,
        sext_ln58_16 => hidden_16_val,
        sext_ln58_17 => hidden_17_val,
        sext_ln58_18 => hidden_18_val,
        sext_ln58_19 => hidden_19_val,
        sext_ln58_20 => hidden_20_val,
        sext_ln58_21 => hidden_21_val,
        sext_ln58_22 => hidden_22_val,
        sext_ln58_23 => hidden_23_val,
        sext_ln58_24 => hidden_24_val,
        sext_ln58_25 => hidden_25_val,
        sext_ln58_26 => hidden_26_val,
        sext_ln58_27 => hidden_27_val,
        sext_ln58_28 => hidden_28_val,
        sext_ln58_29 => hidden_29_val,
        sext_ln58_30 => hidden_30_val,
        sext_ln54 => hidden_31_val);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_ready = ap_const_logic_1)) then 
                    grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_0_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                output_0_reg <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_1_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                output_1_reg <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_2_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                output_2_reg <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_3_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                output_3_reg <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_4_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                output_4_reg <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_4;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_5_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                output_5_reg <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_5;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_6_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                output_6_reg <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_6;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_7_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                output_7_reg <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_7;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_8_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                output_8_reg <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_8;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_9_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                output_9_reg <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_9;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, m_axi_WEIGHTS_0_ARREADY, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_done, ap_CS_fsm_state10)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (m_axi_WEIGHTS_0_ARREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;

    WEIGHTS_blk_n_AR_assign_proc : process(ap_start, ap_CS_fsm_state1, m_axi_WEIGHTS_0_ARREADY)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            WEIGHTS_blk_n_AR <= m_axi_WEIGHTS_0_ARREADY;
        else 
            WEIGHTS_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;

    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_ST_fsm_state10_blk_assign_proc : process(grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_done)
    begin
        if ((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state10_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state10_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, m_axi_WEIGHTS_0_ARREADY)
    begin
        if (((ap_start = ap_const_logic_0) or (m_axi_WEIGHTS_0_ARREADY = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_done, ap_CS_fsm_state10)
    begin
        if ((((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_done, ap_CS_fsm_state10)
    begin
        if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_start <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_ap_start_reg;

    m_axi_WEIGHTS_0_ARADDR_assign_proc : process(ap_start, ap_CS_fsm_state1, m_axi_WEIGHTS_0_ARREADY, W2, ap_CS_fsm_state9, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARADDR, ap_CS_fsm_state10)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (m_axi_WEIGHTS_0_ARREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_WEIGHTS_0_ARADDR <= W2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_WEIGHTS_0_ARADDR <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARADDR;
        else 
            m_axi_WEIGHTS_0_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_WEIGHTS_0_ARBURST_assign_proc : process(ap_CS_fsm_state9, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARBURST, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_WEIGHTS_0_ARBURST <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARBURST;
        else 
            m_axi_WEIGHTS_0_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_WEIGHTS_0_ARCACHE_assign_proc : process(ap_CS_fsm_state9, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARCACHE, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_WEIGHTS_0_ARCACHE <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARCACHE;
        else 
            m_axi_WEIGHTS_0_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_WEIGHTS_0_ARID_assign_proc : process(ap_CS_fsm_state9, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARID, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_WEIGHTS_0_ARID <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARID;
        else 
            m_axi_WEIGHTS_0_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_WEIGHTS_0_ARLEN_assign_proc : process(ap_start, ap_CS_fsm_state1, m_axi_WEIGHTS_0_ARREADY, ap_CS_fsm_state9, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARLEN, ap_CS_fsm_state10)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (m_axi_WEIGHTS_0_ARREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_WEIGHTS_0_ARLEN <= ap_const_lv64_140(32 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_WEIGHTS_0_ARLEN <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARLEN;
        else 
            m_axi_WEIGHTS_0_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_WEIGHTS_0_ARLOCK_assign_proc : process(ap_CS_fsm_state9, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARLOCK, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_WEIGHTS_0_ARLOCK <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARLOCK;
        else 
            m_axi_WEIGHTS_0_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_WEIGHTS_0_ARPROT_assign_proc : process(ap_CS_fsm_state9, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARPROT, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_WEIGHTS_0_ARPROT <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARPROT;
        else 
            m_axi_WEIGHTS_0_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_WEIGHTS_0_ARQOS_assign_proc : process(ap_CS_fsm_state9, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARQOS, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_WEIGHTS_0_ARQOS <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARQOS;
        else 
            m_axi_WEIGHTS_0_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_WEIGHTS_0_ARREGION_assign_proc : process(ap_CS_fsm_state9, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARREGION, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_WEIGHTS_0_ARREGION <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARREGION;
        else 
            m_axi_WEIGHTS_0_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_WEIGHTS_0_ARSIZE_assign_proc : process(ap_CS_fsm_state9, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARSIZE, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_WEIGHTS_0_ARSIZE <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARSIZE;
        else 
            m_axi_WEIGHTS_0_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_WEIGHTS_0_ARUSER_assign_proc : process(ap_CS_fsm_state9, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARUSER, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_WEIGHTS_0_ARUSER <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARUSER;
        else 
            m_axi_WEIGHTS_0_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_WEIGHTS_0_ARVALID_assign_proc : process(ap_start, ap_CS_fsm_state1, m_axi_WEIGHTS_0_ARREADY, ap_CS_fsm_state9, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARVALID, ap_CS_fsm_state10)
    begin
        if ((not(((ap_start = ap_const_logic_0) or (m_axi_WEIGHTS_0_ARREADY = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            m_axi_WEIGHTS_0_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_WEIGHTS_0_ARVALID <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_ARVALID;
        else 
            m_axi_WEIGHTS_0_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_WEIGHTS_0_AWADDR <= ap_const_lv64_0;
    m_axi_WEIGHTS_0_AWBURST <= ap_const_lv2_0;
    m_axi_WEIGHTS_0_AWCACHE <= ap_const_lv4_0;
    m_axi_WEIGHTS_0_AWID <= ap_const_lv1_0;
    m_axi_WEIGHTS_0_AWLEN <= ap_const_lv32_0;
    m_axi_WEIGHTS_0_AWLOCK <= ap_const_lv2_0;
    m_axi_WEIGHTS_0_AWPROT <= ap_const_lv3_0;
    m_axi_WEIGHTS_0_AWQOS <= ap_const_lv4_0;
    m_axi_WEIGHTS_0_AWREGION <= ap_const_lv4_0;
    m_axi_WEIGHTS_0_AWSIZE <= ap_const_lv3_0;
    m_axi_WEIGHTS_0_AWUSER <= ap_const_lv1_0;
    m_axi_WEIGHTS_0_AWVALID <= ap_const_logic_0;
    m_axi_WEIGHTS_0_BREADY <= ap_const_logic_0;

    m_axi_WEIGHTS_0_RREADY_assign_proc : process(ap_CS_fsm_state9, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_RREADY, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            m_axi_WEIGHTS_0_RREADY <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_m_axi_WEIGHTS_0_RREADY;
        else 
            m_axi_WEIGHTS_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_WEIGHTS_0_WDATA <= ap_const_lv8_0;
    m_axi_WEIGHTS_0_WID <= ap_const_lv1_0;
    m_axi_WEIGHTS_0_WLAST <= ap_const_logic_0;
    m_axi_WEIGHTS_0_WSTRB <= ap_const_lv1_0;
    m_axi_WEIGHTS_0_WUSER <= ap_const_lv1_0;
    m_axi_WEIGHTS_0_WVALID <= ap_const_logic_0;

    output_0_assign_proc : process(grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_0, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_0_ap_vld, output_0_reg, ap_CS_fsm_state10)
    begin
        if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_0_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_0 <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_0;
        else 
            output_0 <= output_0_reg;
        end if; 
    end process;

    output_0_ap_vld <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_0_ap_vld;

    output_1_assign_proc : process(grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_1, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_1_ap_vld, ap_CS_fsm_state10, output_1_reg)
    begin
        if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_1_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_1 <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_1;
        else 
            output_1 <= output_1_reg;
        end if; 
    end process;

    output_1_ap_vld <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_1_ap_vld;

    output_2_assign_proc : process(grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_2, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_2_ap_vld, ap_CS_fsm_state10, output_2_reg)
    begin
        if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_2_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_2 <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_2;
        else 
            output_2 <= output_2_reg;
        end if; 
    end process;

    output_2_ap_vld <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_2_ap_vld;

    output_3_assign_proc : process(grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_3, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_3_ap_vld, ap_CS_fsm_state10, output_3_reg)
    begin
        if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_3_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_3 <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_3;
        else 
            output_3 <= output_3_reg;
        end if; 
    end process;

    output_3_ap_vld <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_3_ap_vld;

    output_4_assign_proc : process(grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_4, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_4_ap_vld, ap_CS_fsm_state10, output_4_reg)
    begin
        if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_4_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_4 <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_4;
        else 
            output_4 <= output_4_reg;
        end if; 
    end process;

    output_4_ap_vld <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_4_ap_vld;

    output_5_assign_proc : process(grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_5, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_5_ap_vld, ap_CS_fsm_state10, output_5_reg)
    begin
        if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_5_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_5 <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_5;
        else 
            output_5 <= output_5_reg;
        end if; 
    end process;

    output_5_ap_vld <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_5_ap_vld;

    output_6_assign_proc : process(grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_6, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_6_ap_vld, ap_CS_fsm_state10, output_6_reg)
    begin
        if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_6_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_6 <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_6;
        else 
            output_6 <= output_6_reg;
        end if; 
    end process;

    output_6_ap_vld <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_6_ap_vld;

    output_7_assign_proc : process(grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_7, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_7_ap_vld, ap_CS_fsm_state10, output_7_reg)
    begin
        if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_7_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_7 <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_7;
        else 
            output_7 <= output_7_reg;
        end if; 
    end process;

    output_7_ap_vld <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_7_ap_vld;

    output_8_assign_proc : process(grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_8, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_8_ap_vld, ap_CS_fsm_state10, output_8_reg)
    begin
        if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_8_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_8 <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_8;
        else 
            output_8 <= output_8_reg;
        end if; 
    end process;

    output_8_ap_vld <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_8_ap_vld;

    output_9_assign_proc : process(grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_9, grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_9_ap_vld, ap_CS_fsm_state10, output_9_reg)
    begin
        if (((grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_9_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then 
            output_9 <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_9;
        else 
            output_9 <= output_9_reg;
        end if; 
    end process;

    output_9_ap_vld <= grp_forwardOutput_Pipeline_VITIS_LOOP_54_1_fu_321_output_9_ap_vld;
end behav;
