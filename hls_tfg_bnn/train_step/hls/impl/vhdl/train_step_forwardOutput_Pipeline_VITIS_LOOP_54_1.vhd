-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity train_step_forwardOutput_Pipeline_VITIS_LOOP_54_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    m_axi_WEIGHTS_0_AWVALID : OUT STD_LOGIC;
    m_axi_WEIGHTS_0_AWREADY : IN STD_LOGIC;
    m_axi_WEIGHTS_0_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_WEIGHTS_0_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_WEIGHTS_0_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHTS_0_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_0_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_0_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_0_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHTS_0_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_0_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_0_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_WVALID : OUT STD_LOGIC;
    m_axi_WEIGHTS_0_WREADY : IN STD_LOGIC;
    m_axi_WEIGHTS_0_WDATA : OUT STD_LOGIC_VECTOR (7 downto 0);
    m_axi_WEIGHTS_0_WSTRB : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_WLAST : OUT STD_LOGIC;
    m_axi_WEIGHTS_0_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_ARVALID : OUT STD_LOGIC;
    m_axi_WEIGHTS_0_ARREADY : IN STD_LOGIC;
    m_axi_WEIGHTS_0_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_WEIGHTS_0_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_WEIGHTS_0_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHTS_0_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_0_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_0_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_0_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_WEIGHTS_0_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_0_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_WEIGHTS_0_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_RVALID : IN STD_LOGIC;
    m_axi_WEIGHTS_0_RREADY : OUT STD_LOGIC;
    m_axi_WEIGHTS_0_RDATA : IN STD_LOGIC_VECTOR (7 downto 0);
    m_axi_WEIGHTS_0_RLAST : IN STD_LOGIC;
    m_axi_WEIGHTS_0_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_RFIFONUM : IN STD_LOGIC_VECTOR (10 downto 0);
    m_axi_WEIGHTS_0_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_0_BVALID : IN STD_LOGIC;
    m_axi_WEIGHTS_0_BREADY : OUT STD_LOGIC;
    m_axi_WEIGHTS_0_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_WEIGHTS_0_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_WEIGHTS_0_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    output_0 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_0_ap_vld : OUT STD_LOGIC;
    W2 : IN STD_LOGIC_VECTOR (63 downto 0);
    output_9 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_9_ap_vld : OUT STD_LOGIC;
    output_8 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_8_ap_vld : OUT STD_LOGIC;
    output_7 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_7_ap_vld : OUT STD_LOGIC;
    output_6 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_6_ap_vld : OUT STD_LOGIC;
    output_5 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_5_ap_vld : OUT STD_LOGIC;
    output_4 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_4_ap_vld : OUT STD_LOGIC;
    output_3 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_3_ap_vld : OUT STD_LOGIC;
    output_2 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_2_ap_vld : OUT STD_LOGIC;
    output_1 : OUT STD_LOGIC_VECTOR (1 downto 0);
    output_1_ap_vld : OUT STD_LOGIC;
    sext_ln58 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_1 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_2 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_3 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_4 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_5 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_6 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_7 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_8 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_9 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_10 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_11 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_12 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_13 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_14 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_15 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_16 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_17 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_18 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_19 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_20 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_21 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_22 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_23 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_24 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_25 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_26 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_27 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_28 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_29 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln58_30 : IN STD_LOGIC_VECTOR (1 downto 0);
    sext_ln54 : IN STD_LOGIC_VECTOR (1 downto 0) );
end;


architecture behav of train_step_forwardOutput_Pipeline_VITIS_LOOP_54_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000000";
    constant ap_ST_fsm_pp0_stage8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000100000000";
    constant ap_ST_fsm_pp0_stage9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001000000000";
    constant ap_ST_fsm_pp0_stage10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000010000000000";
    constant ap_ST_fsm_pp0_stage11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000100000000000";
    constant ap_ST_fsm_pp0_stage12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000001000000000000";
    constant ap_ST_fsm_pp0_stage13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000010000000000000";
    constant ap_ST_fsm_pp0_stage14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000100000000000000";
    constant ap_ST_fsm_pp0_stage15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000001000000000000000";
    constant ap_ST_fsm_pp0_stage16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000010000000000000000";
    constant ap_ST_fsm_pp0_stage17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000100000000000000000";
    constant ap_ST_fsm_pp0_stage18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000001000000000000000000";
    constant ap_ST_fsm_pp0_stage19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000010000000000000000000";
    constant ap_ST_fsm_pp0_stage20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000100000000000000000000";
    constant ap_ST_fsm_pp0_stage21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000001000000000000000000000";
    constant ap_ST_fsm_pp0_stage22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000010000000000000000000000";
    constant ap_ST_fsm_pp0_stage23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000100000000000000000000000";
    constant ap_ST_fsm_pp0_stage24 : STD_LOGIC_VECTOR (31 downto 0) := "00000001000000000000000000000000";
    constant ap_ST_fsm_pp0_stage25 : STD_LOGIC_VECTOR (31 downto 0) := "00000010000000000000000000000000";
    constant ap_ST_fsm_pp0_stage26 : STD_LOGIC_VECTOR (31 downto 0) := "00000100000000000000000000000000";
    constant ap_ST_fsm_pp0_stage27 : STD_LOGIC_VECTOR (31 downto 0) := "00001000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage28 : STD_LOGIC_VECTOR (31 downto 0) := "00010000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage29 : STD_LOGIC_VECTOR (31 downto 0) := "00100000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage30 : STD_LOGIC_VECTOR (31 downto 0) := "01000000000000000000000000000000";
    constant ap_ST_fsm_pp0_stage31 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_7 : STD_LOGIC_VECTOR (3 downto 0) := "0111";
    constant ap_const_lv4_6 : STD_LOGIC_VECTOR (3 downto 0) := "0110";
    constant ap_const_lv4_5 : STD_LOGIC_VECTOR (3 downto 0) := "0101";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_3 : STD_LOGIC_VECTOR (3 downto 0) := "0011";
    constant ap_const_lv4_2 : STD_LOGIC_VECTOR (3 downto 0) := "0010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal icmp_ln54_reg_1292 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter0_stage7 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage31 : signal is "none";
    signal ap_block_state32_pp0_stage31_iter0 : BOOLEAN;
    signal ap_block_pp0_stage31_subdone : BOOLEAN;
    signal WEIGHTS_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage8 : signal is "none";
    signal ap_block_pp0_stage8 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage9 : signal is "none";
    signal ap_block_pp0_stage9 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage10 : signal is "none";
    signal ap_block_pp0_stage10 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage11 : signal is "none";
    signal ap_block_pp0_stage11 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage12 : signal is "none";
    signal ap_block_pp0_stage12 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage13 : signal is "none";
    signal ap_block_pp0_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage14 : signal is "none";
    signal ap_block_pp0_stage14 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage15 : signal is "none";
    signal ap_block_pp0_stage15 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage16 : signal is "none";
    signal ap_block_pp0_stage16 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage17 : signal is "none";
    signal ap_block_pp0_stage17 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage18 : signal is "none";
    signal ap_block_pp0_stage18 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage19 : signal is "none";
    signal ap_block_pp0_stage19 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage20 : signal is "none";
    signal ap_block_pp0_stage20 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage21 : signal is "none";
    signal ap_block_pp0_stage21 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage22 : signal is "none";
    signal ap_block_pp0_stage22 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage23 : signal is "none";
    signal ap_block_pp0_stage23 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage24 : signal is "none";
    signal ap_block_pp0_stage24 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage25 : signal is "none";
    signal ap_block_pp0_stage25 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage26 : signal is "none";
    signal ap_block_pp0_stage26 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage27 : signal is "none";
    signal ap_block_pp0_stage27 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage28 : signal is "none";
    signal ap_block_pp0_stage28 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage29 : signal is "none";
    signal ap_block_pp0_stage29 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage30 : signal is "none";
    signal ap_block_pp0_stage30 : BOOLEAN;
    signal ap_block_pp0_stage31 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal reg_431 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal ap_block_state9_pp0_stage8_iter0 : BOOLEAN;
    signal ap_block_pp0_stage8_11001 : BOOLEAN;
    signal ap_block_state10_pp0_stage9_iter0 : BOOLEAN;
    signal ap_block_pp0_stage9_11001 : BOOLEAN;
    signal ap_block_state11_pp0_stage10_iter0 : BOOLEAN;
    signal ap_block_pp0_stage10_11001 : BOOLEAN;
    signal ap_block_state12_pp0_stage11_iter0 : BOOLEAN;
    signal ap_block_pp0_stage11_11001 : BOOLEAN;
    signal ap_block_state13_pp0_stage12_iter0 : BOOLEAN;
    signal ap_block_pp0_stage12_11001 : BOOLEAN;
    signal ap_block_state14_pp0_stage13_iter0 : BOOLEAN;
    signal ap_block_pp0_stage13_11001 : BOOLEAN;
    signal ap_block_state15_pp0_stage14_iter0 : BOOLEAN;
    signal ap_block_pp0_stage14_11001 : BOOLEAN;
    signal ap_block_state16_pp0_stage15_iter0 : BOOLEAN;
    signal ap_block_pp0_stage15_11001 : BOOLEAN;
    signal ap_block_state17_pp0_stage16_iter0 : BOOLEAN;
    signal ap_block_pp0_stage16_11001 : BOOLEAN;
    signal ap_block_state18_pp0_stage17_iter0 : BOOLEAN;
    signal ap_block_pp0_stage17_11001 : BOOLEAN;
    signal ap_block_state19_pp0_stage18_iter0 : BOOLEAN;
    signal ap_block_pp0_stage18_11001 : BOOLEAN;
    signal ap_block_state20_pp0_stage19_iter0 : BOOLEAN;
    signal ap_block_pp0_stage19_11001 : BOOLEAN;
    signal ap_block_state21_pp0_stage20_iter0 : BOOLEAN;
    signal ap_block_pp0_stage20_11001 : BOOLEAN;
    signal ap_block_state22_pp0_stage21_iter0 : BOOLEAN;
    signal ap_block_pp0_stage21_11001 : BOOLEAN;
    signal ap_block_state23_pp0_stage22_iter0 : BOOLEAN;
    signal ap_block_pp0_stage22_11001 : BOOLEAN;
    signal ap_block_state24_pp0_stage23_iter0 : BOOLEAN;
    signal ap_block_pp0_stage23_11001 : BOOLEAN;
    signal ap_block_state25_pp0_stage24_iter0 : BOOLEAN;
    signal ap_block_pp0_stage24_11001 : BOOLEAN;
    signal ap_block_state26_pp0_stage25_iter0 : BOOLEAN;
    signal ap_block_pp0_stage25_11001 : BOOLEAN;
    signal ap_block_state27_pp0_stage26_iter0 : BOOLEAN;
    signal ap_block_pp0_stage26_11001 : BOOLEAN;
    signal ap_block_state28_pp0_stage27_iter0 : BOOLEAN;
    signal ap_block_pp0_stage27_11001 : BOOLEAN;
    signal ap_block_state29_pp0_stage28_iter0 : BOOLEAN;
    signal ap_block_pp0_stage28_11001 : BOOLEAN;
    signal ap_block_state30_pp0_stage29_iter0 : BOOLEAN;
    signal ap_block_pp0_stage29_11001 : BOOLEAN;
    signal ap_block_state31_pp0_stage30_iter0 : BOOLEAN;
    signal ap_block_pp0_stage30_11001 : BOOLEAN;
    signal ap_block_pp0_stage31_11001 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal sext_ln54_cast_fu_435_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln54_cast_reg_1128 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_30_cast_fu_439_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_30_cast_reg_1133 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_29_cast_fu_443_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_29_cast_reg_1138 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_28_cast_fu_447_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_28_cast_reg_1143 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_27_cast_fu_451_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_27_cast_reg_1148 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_26_cast_fu_455_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_26_cast_reg_1153 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_25_cast_fu_459_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_25_cast_reg_1158 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_24_cast_fu_463_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_24_cast_reg_1163 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_23_cast_fu_467_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_23_cast_reg_1168 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_22_cast_fu_471_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_22_cast_reg_1173 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_21_cast_fu_475_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_21_cast_reg_1178 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_20_cast_fu_479_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_20_cast_reg_1183 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_19_cast_fu_483_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_19_cast_reg_1188 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_18_cast_fu_487_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_18_cast_reg_1193 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_17_cast_fu_491_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_17_cast_reg_1198 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_16_cast_fu_495_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_16_cast_reg_1203 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_15_cast_fu_499_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_15_cast_reg_1208 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_14_cast_fu_503_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_14_cast_reg_1213 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_13_cast_fu_507_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_13_cast_reg_1218 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_12_cast_fu_511_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_12_cast_reg_1223 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_11_cast_fu_515_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_11_cast_reg_1228 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_10_cast_fu_519_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_10_cast_reg_1233 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_9_cast_fu_523_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_9_cast_reg_1238 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_8_cast_fu_527_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_8_cast_reg_1243 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_7_cast_fu_531_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_7_cast_reg_1248 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_6_cast_fu_535_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_6_cast_reg_1253 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_5_cast_fu_539_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_5_cast_reg_1258 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_4_cast_fu_543_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_4_cast_reg_1263 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_3_cast_fu_547_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_3_cast_reg_1268 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_2_cast_fu_551_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_2_cast_reg_1273 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_1_cast_fu_555_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_1_cast_reg_1278 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_cast_fu_559_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln58_cast_reg_1283 : STD_LOGIC_VECTOR (9 downto 0);
    signal k_2_reg_1288 : STD_LOGIC_VECTOR (3 downto 0);
    signal k_2_reg_1288_pp0_iter1_reg : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln54_fu_571_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln54_fu_577_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln54_reg_1296 : STD_LOGIC_VECTOR (3 downto 0);
    signal mul_ln58_fu_601_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_reg_1311 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_1_fu_613_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_1_reg_1321 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1004_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln58_reg_1331 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln58_3_fu_626_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_3_reg_1336 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_5_fu_642_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_5_reg_1351 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1011_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln58_1_reg_1356 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln58_7_fu_658_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_7_reg_1371 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1018_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln58_3_reg_1376 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln58_9_fu_674_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_9_reg_1391 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln58_5_fu_685_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_5_reg_1396 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_6_fu_710_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_6_reg_1411 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln58_11_fu_719_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_11_reg_1416 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1033_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln58_7_reg_1421 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln58_13_fu_735_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_13_reg_1436 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1040_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln58_8_reg_1441 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln58_15_fu_751_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_15_reg_1456 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1047_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln58_10_reg_1461 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln58_17_fu_767_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_17_reg_1476 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln58_12_fu_778_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_12_reg_1481 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_13_fu_803_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_13_reg_1496 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln58_19_fu_812_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_19_reg_1501 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1062_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln58_15_reg_1506 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln58_21_fu_828_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_21_reg_1521 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln58_17_fu_839_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_17_reg_1526 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln58_23_fu_856_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_23_reg_1541 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1077_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln58_18_reg_1546 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln58_25_fu_872_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_25_reg_1561 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln58_20_fu_883_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_20_reg_1566 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln58_27_fu_900_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_27_reg_1581 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1092_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln58_22_reg_1586 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_ln58_29_fu_916_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal mul_ln58_29_reg_1601 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_1099_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln58_23_reg_1606 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_fu_1106_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln58_25_reg_1621 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln58_27_fu_937_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_27_reg_1631 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_28_fu_955_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_28_reg_1636 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_29_fu_964_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_29_reg_1641 : STD_LOGIC_VECTOR (11 downto 0);
    signal k_fu_154 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    signal ap_loop_init : STD_LOGIC;
    signal ap_sig_allocacmp_k_2 : STD_LOGIC_VECTOR (3 downto 0);
    signal select_ln13_fu_986_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage7_01001 : BOOLEAN;
    signal mul_ln58_fu_601_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln58_1_fu_613_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln58_3_fu_626_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln58_5_fu_642_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln58_7_fu_658_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln58_9_fu_674_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1025_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln58_97_fu_682_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln58_96_fu_679_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln58_95_fu_701_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln58_94_fu_698_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_2_fu_704_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln58_11_fu_719_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln58_13_fu_735_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln58_15_fu_751_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln58_17_fu_767_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1054_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln58_101_fu_775_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln58_100_fu_772_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln58_99_fu_794_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln58_98_fu_791_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_9_fu_797_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln58_19_fu_812_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln58_21_fu_828_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1069_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln58_103_fu_836_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln58_102_fu_833_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln58_23_fu_856_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln58_25_fu_872_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1084_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln58_105_fu_880_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln58_104_fu_877_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal mul_ln58_27_fu_900_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal mul_ln58_29_fu_916_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal sext_ln58_92_fu_924_p0 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_1113_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal sext_ln58_109_fu_934_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln58_108_fu_931_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln58_107_fu_946_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln58_106_fu_943_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_24_fu_949_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_21_fu_960_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal add_ln58_14_fu_969_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal x_fu_973_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_978_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1004_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1011_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1018_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1025_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1033_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1040_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1047_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1054_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1062_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1069_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1077_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1084_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1092_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1099_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1106_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1113_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1004_ce : STD_LOGIC;
    signal grp_fu_1011_ce : STD_LOGIC;
    signal grp_fu_1018_ce : STD_LOGIC;
    signal grp_fu_1025_ce : STD_LOGIC;
    signal grp_fu_1033_ce : STD_LOGIC;
    signal grp_fu_1040_ce : STD_LOGIC;
    signal grp_fu_1047_ce : STD_LOGIC;
    signal grp_fu_1054_ce : STD_LOGIC;
    signal grp_fu_1062_ce : STD_LOGIC;
    signal grp_fu_1069_ce : STD_LOGIC;
    signal grp_fu_1077_ce : STD_LOGIC;
    signal grp_fu_1084_ce : STD_LOGIC;
    signal grp_fu_1092_ce : STD_LOGIC;
    signal grp_fu_1099_ce : STD_LOGIC;
    signal grp_fu_1106_ce : STD_LOGIC;
    signal grp_fu_1113_ce : STD_LOGIC;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_block_pp0_stage8_subdone : BOOLEAN;
    signal ap_block_pp0_stage9_subdone : BOOLEAN;
    signal ap_block_pp0_stage10_subdone : BOOLEAN;
    signal ap_block_pp0_stage11_subdone : BOOLEAN;
    signal ap_block_pp0_stage12_subdone : BOOLEAN;
    signal ap_block_pp0_stage13_subdone : BOOLEAN;
    signal ap_block_pp0_stage14_subdone : BOOLEAN;
    signal ap_block_pp0_stage15_subdone : BOOLEAN;
    signal ap_block_pp0_stage16_subdone : BOOLEAN;
    signal ap_block_pp0_stage17_subdone : BOOLEAN;
    signal ap_block_pp0_stage18_subdone : BOOLEAN;
    signal ap_block_pp0_stage19_subdone : BOOLEAN;
    signal ap_block_pp0_stage20_subdone : BOOLEAN;
    signal ap_block_pp0_stage21_subdone : BOOLEAN;
    signal ap_block_pp0_stage22_subdone : BOOLEAN;
    signal ap_block_pp0_stage23_subdone : BOOLEAN;
    signal ap_block_pp0_stage24_subdone : BOOLEAN;
    signal ap_block_pp0_stage25_subdone : BOOLEAN;
    signal ap_block_pp0_stage26_subdone : BOOLEAN;
    signal ap_block_pp0_stage27_subdone : BOOLEAN;
    signal ap_block_pp0_stage28_subdone : BOOLEAN;
    signal ap_block_pp0_stage29_subdone : BOOLEAN;
    signal ap_block_pp0_stage30_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ready_sig : STD_LOGIC;
    signal ap_done_sig : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component train_step_mul_8s_2s_10_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;


    component train_step_mac_muladd_8s_2s_10s_11_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (1 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (10 downto 0) );
    end component;


    component train_step_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    mul_8s_2s_10_1_1_U263 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_fu_601_p1,
        dout => mul_ln58_fu_601_p2);

    mul_8s_2s_10_1_1_U264 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_1_fu_613_p1,
        dout => mul_ln58_1_fu_613_p2);

    mul_8s_2s_10_1_1_U265 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_3_fu_626_p1,
        dout => mul_ln58_3_fu_626_p2);

    mul_8s_2s_10_1_1_U266 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_5_fu_642_p1,
        dout => mul_ln58_5_fu_642_p2);

    mul_8s_2s_10_1_1_U267 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_7_fu_658_p1,
        dout => mul_ln58_7_fu_658_p2);

    mul_8s_2s_10_1_1_U268 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_9_fu_674_p1,
        dout => mul_ln58_9_fu_674_p2);

    mul_8s_2s_10_1_1_U269 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_11_fu_719_p1,
        dout => mul_ln58_11_fu_719_p2);

    mul_8s_2s_10_1_1_U270 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_13_fu_735_p1,
        dout => mul_ln58_13_fu_735_p2);

    mul_8s_2s_10_1_1_U271 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_15_fu_751_p1,
        dout => mul_ln58_15_fu_751_p2);

    mul_8s_2s_10_1_1_U272 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_17_fu_767_p1,
        dout => mul_ln58_17_fu_767_p2);

    mul_8s_2s_10_1_1_U273 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_19_fu_812_p1,
        dout => mul_ln58_19_fu_812_p2);

    mul_8s_2s_10_1_1_U274 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_21_fu_828_p1,
        dout => mul_ln58_21_fu_828_p2);

    mul_8s_2s_10_1_1_U275 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_23_fu_856_p1,
        dout => mul_ln58_23_fu_856_p2);

    mul_8s_2s_10_1_1_U276 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_25_fu_872_p1,
        dout => mul_ln58_25_fu_872_p2);

    mul_8s_2s_10_1_1_U277 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_27_fu_900_p1,
        dout => mul_ln58_27_fu_900_p2);

    mul_8s_2s_10_1_1_U278 : component train_step_mul_8s_2s_10_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        dout_WIDTH => 10)
    port map (
        din0 => reg_431,
        din1 => mul_ln58_29_fu_916_p1,
        dout => mul_ln58_29_fu_916_p2);

    mac_muladd_8s_2s_10s_11_4_1_U279 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_431,
        din1 => grp_fu_1004_p1,
        din2 => mul_ln58_reg_1311,
        ce => grp_fu_1004_ce,
        dout => grp_fu_1004_p3);

    mac_muladd_8s_2s_10s_11_4_1_U280 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_431,
        din1 => grp_fu_1011_p1,
        din2 => mul_ln58_1_reg_1321,
        ce => grp_fu_1011_ce,
        dout => grp_fu_1011_p3);

    mac_muladd_8s_2s_10s_11_4_1_U281 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_431,
        din1 => grp_fu_1018_p1,
        din2 => mul_ln58_3_reg_1336,
        ce => grp_fu_1018_ce,
        dout => grp_fu_1018_p3);

    mac_muladd_8s_2s_10s_11_4_1_U282 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_431,
        din1 => grp_fu_1025_p1,
        din2 => mul_ln58_5_reg_1351,
        ce => grp_fu_1025_ce,
        dout => grp_fu_1025_p3);

    mac_muladd_8s_2s_10s_11_4_1_U283 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_431,
        din1 => grp_fu_1033_p1,
        din2 => mul_ln58_7_reg_1371,
        ce => grp_fu_1033_ce,
        dout => grp_fu_1033_p3);

    mac_muladd_8s_2s_10s_11_4_1_U284 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_431,
        din1 => grp_fu_1040_p1,
        din2 => mul_ln58_9_reg_1391,
        ce => grp_fu_1040_ce,
        dout => grp_fu_1040_p3);

    mac_muladd_8s_2s_10s_11_4_1_U285 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_431,
        din1 => grp_fu_1047_p1,
        din2 => mul_ln58_11_reg_1416,
        ce => grp_fu_1047_ce,
        dout => grp_fu_1047_p3);

    mac_muladd_8s_2s_10s_11_4_1_U286 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_431,
        din1 => grp_fu_1054_p1,
        din2 => mul_ln58_13_reg_1436,
        ce => grp_fu_1054_ce,
        dout => grp_fu_1054_p3);

    mac_muladd_8s_2s_10s_11_4_1_U287 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_431,
        din1 => grp_fu_1062_p1,
        din2 => mul_ln58_15_reg_1456,
        ce => grp_fu_1062_ce,
        dout => grp_fu_1062_p3);

    mac_muladd_8s_2s_10s_11_4_1_U288 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_431,
        din1 => grp_fu_1069_p1,
        din2 => mul_ln58_17_reg_1476,
        ce => grp_fu_1069_ce,
        dout => grp_fu_1069_p3);

    mac_muladd_8s_2s_10s_11_4_1_U289 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_431,
        din1 => grp_fu_1077_p1,
        din2 => mul_ln58_19_reg_1501,
        ce => grp_fu_1077_ce,
        dout => grp_fu_1077_p3);

    mac_muladd_8s_2s_10s_11_4_1_U290 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_431,
        din1 => grp_fu_1084_p1,
        din2 => mul_ln58_21_reg_1521,
        ce => grp_fu_1084_ce,
        dout => grp_fu_1084_p3);

    mac_muladd_8s_2s_10s_11_4_1_U291 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_431,
        din1 => grp_fu_1092_p1,
        din2 => mul_ln58_23_reg_1541,
        ce => grp_fu_1092_ce,
        dout => grp_fu_1092_p3);

    mac_muladd_8s_2s_10s_11_4_1_U292 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_431,
        din1 => grp_fu_1099_p1,
        din2 => mul_ln58_25_reg_1561,
        ce => grp_fu_1099_ce,
        dout => grp_fu_1099_p3);

    mac_muladd_8s_2s_10s_11_4_1_U293 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => reg_431,
        din1 => grp_fu_1106_p1,
        din2 => mul_ln58_27_reg_1581,
        ce => grp_fu_1106_ce,
        dout => grp_fu_1106_p3);

    mac_muladd_8s_2s_10s_11_4_1_U294 : component train_step_mac_muladd_8s_2s_10s_11_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 8,
        din1_WIDTH => 2,
        din2_WIDTH => 10,
        dout_WIDTH => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => sext_ln58_92_fu_924_p0,
        din1 => grp_fu_1113_p1,
        din2 => mul_ln58_29_reg_1601,
        ce => grp_fu_1113_ce,
        dout => grp_fu_1113_p3);

    flow_control_loop_pipe_sequential_init_U : component train_step_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready_sig,
        ap_done => ap_done_sig,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage7,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage7)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_const_boolean_0 = ap_block_pp0_stage31_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    k_fu_154_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_loop_init = ap_const_logic_1))) then 
                k_fu_154 <= ap_const_lv4_0;
            elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0))) then 
                k_fu_154 <= add_ln54_reg_1296;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln54_reg_1296 <= add_ln54_fu_577_p2;
                icmp_ln54_reg_1292 <= icmp_ln54_fu_571_p2;
                k_2_reg_1288 <= ap_sig_allocacmp_k_2;
                k_2_reg_1288_pp0_iter1_reg <= k_2_reg_1288;
                mul_ln58_29_reg_1601 <= mul_ln58_29_fu_916_p2;
                sext_ln54_cast_reg_1128 <= sext_ln54_cast_fu_435_p1;
                sext_ln58_10_cast_reg_1233 <= sext_ln58_10_cast_fu_519_p1;
                sext_ln58_11_cast_reg_1228 <= sext_ln58_11_cast_fu_515_p1;
                sext_ln58_12_cast_reg_1223 <= sext_ln58_12_cast_fu_511_p1;
                sext_ln58_13_cast_reg_1218 <= sext_ln58_13_cast_fu_507_p1;
                sext_ln58_14_cast_reg_1213 <= sext_ln58_14_cast_fu_503_p1;
                sext_ln58_15_cast_reg_1208 <= sext_ln58_15_cast_fu_499_p1;
                sext_ln58_16_cast_reg_1203 <= sext_ln58_16_cast_fu_495_p1;
                sext_ln58_17_cast_reg_1198 <= sext_ln58_17_cast_fu_491_p1;
                sext_ln58_18_cast_reg_1193 <= sext_ln58_18_cast_fu_487_p1;
                sext_ln58_19_cast_reg_1188 <= sext_ln58_19_cast_fu_483_p1;
                sext_ln58_1_cast_reg_1278 <= sext_ln58_1_cast_fu_555_p1;
                sext_ln58_20_cast_reg_1183 <= sext_ln58_20_cast_fu_479_p1;
                sext_ln58_21_cast_reg_1178 <= sext_ln58_21_cast_fu_475_p1;
                sext_ln58_22_cast_reg_1173 <= sext_ln58_22_cast_fu_471_p1;
                sext_ln58_23_cast_reg_1168 <= sext_ln58_23_cast_fu_467_p1;
                sext_ln58_24_cast_reg_1163 <= sext_ln58_24_cast_fu_463_p1;
                sext_ln58_25_cast_reg_1158 <= sext_ln58_25_cast_fu_459_p1;
                sext_ln58_26_cast_reg_1153 <= sext_ln58_26_cast_fu_455_p1;
                sext_ln58_27_cast_reg_1148 <= sext_ln58_27_cast_fu_451_p1;
                sext_ln58_28_cast_reg_1143 <= sext_ln58_28_cast_fu_447_p1;
                sext_ln58_29_cast_reg_1138 <= sext_ln58_29_cast_fu_443_p1;
                sext_ln58_2_cast_reg_1273 <= sext_ln58_2_cast_fu_551_p1;
                sext_ln58_30_cast_reg_1133 <= sext_ln58_30_cast_fu_439_p1;
                sext_ln58_3_cast_reg_1268 <= sext_ln58_3_cast_fu_547_p1;
                sext_ln58_4_cast_reg_1263 <= sext_ln58_4_cast_fu_543_p1;
                sext_ln58_5_cast_reg_1258 <= sext_ln58_5_cast_fu_539_p1;
                sext_ln58_6_cast_reg_1253 <= sext_ln58_6_cast_fu_535_p1;
                sext_ln58_7_cast_reg_1248 <= sext_ln58_7_cast_fu_531_p1;
                sext_ln58_8_cast_reg_1243 <= sext_ln58_8_cast_fu_527_p1;
                sext_ln58_9_cast_reg_1238 <= sext_ln58_9_cast_fu_523_p1;
                sext_ln58_cast_reg_1283 <= sext_ln58_cast_fu_559_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1))) then
                add_ln58_10_reg_1461 <= grp_fu_1047_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001))) then
                add_ln58_12_reg_1481 <= add_ln58_12_fu_778_p2;
                mul_ln58_17_reg_1476 <= mul_ln58_17_fu_767_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001))) then
                add_ln58_13_reg_1496 <= add_ln58_13_fu_803_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1))) then
                add_ln58_15_reg_1506 <= grp_fu_1062_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001))) then
                add_ln58_17_reg_1526 <= add_ln58_17_fu_839_p2;
                mul_ln58_21_reg_1521 <= mul_ln58_21_fu_828_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1))) then
                add_ln58_18_reg_1546 <= grp_fu_1077_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1))) then
                add_ln58_1_reg_1356 <= grp_fu_1011_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_const_boolean_0 = ap_block_pp0_stage28_11001))) then
                add_ln58_20_reg_1566 <= add_ln58_20_fu_883_p2;
                mul_ln58_25_reg_1561 <= mul_ln58_25_fu_872_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1))) then
                add_ln58_22_reg_1586 <= grp_fu_1092_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln58_23_reg_1606 <= grp_fu_1099_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001))) then
                add_ln58_25_reg_1621 <= grp_fu_1106_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001))) then
                add_ln58_27_reg_1631 <= add_ln58_27_fu_937_p2;
                mul_ln58_1_reg_1321 <= mul_ln58_1_fu_613_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001))) then
                add_ln58_28_reg_1636 <= add_ln58_28_fu_955_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001))) then
                add_ln58_29_reg_1641 <= add_ln58_29_fu_964_p2;
                mul_ln58_3_reg_1336 <= mul_ln58_3_fu_626_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1))) then
                add_ln58_3_reg_1376 <= grp_fu_1018_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001))) then
                add_ln58_5_reg_1396 <= add_ln58_5_fu_685_p2;
                mul_ln58_9_reg_1391 <= mul_ln58_9_fu_674_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001))) then
                add_ln58_6_reg_1411 <= add_ln58_6_fu_710_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1))) then
                add_ln58_7_reg_1421 <= grp_fu_1033_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1))) then
                add_ln58_8_reg_1441 <= grp_fu_1040_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1))) then
                add_ln58_reg_1331 <= grp_fu_1004_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001))) then
                mul_ln58_11_reg_1416 <= mul_ln58_11_fu_719_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001))) then
                mul_ln58_13_reg_1436 <= mul_ln58_13_fu_735_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001))) then
                mul_ln58_15_reg_1456 <= mul_ln58_15_fu_751_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001))) then
                mul_ln58_19_reg_1501 <= mul_ln58_19_fu_812_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001))) then
                mul_ln58_23_reg_1541 <= mul_ln58_23_fu_856_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_const_boolean_0 = ap_block_pp0_stage30_11001))) then
                mul_ln58_27_reg_1581 <= mul_ln58_27_fu_900_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001))) then
                mul_ln58_5_reg_1351 <= mul_ln58_5_fu_642_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001))) then
                mul_ln58_7_reg_1371 <= mul_ln58_7_fu_658_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001))) then
                mul_ln58_reg_1311 <= mul_ln58_fu_601_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001) and 
    (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) 
    and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) 
    or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and 
    (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1)))) then
                reg_431 <= m_axi_WEIGHTS_0_RDATA;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage7_subdone, ap_condition_exit_pp0_iter0_stage7, ap_block_pp0_stage31_subdone, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to1, ap_block_pp0_stage1_subdone, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_block_pp0_stage8_subdone, ap_block_pp0_stage9_subdone, ap_block_pp0_stage10_subdone, ap_block_pp0_stage11_subdone, ap_block_pp0_stage12_subdone, ap_block_pp0_stage13_subdone, ap_block_pp0_stage14_subdone, ap_block_pp0_stage15_subdone, ap_block_pp0_stage16_subdone, ap_block_pp0_stage17_subdone, ap_block_pp0_stage18_subdone, ap_block_pp0_stage19_subdone, ap_block_pp0_stage20_subdone, ap_block_pp0_stage21_subdone, ap_block_pp0_stage22_subdone, ap_block_pp0_stage23_subdone, ap_block_pp0_stage24_subdone, ap_block_pp0_stage25_subdone, ap_block_pp0_stage26_subdone, ap_block_pp0_stage27_subdone, ap_block_pp0_stage28_subdone, ap_block_pp0_stage29_subdone, ap_block_pp0_stage30_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_logic_1 = ap_condition_exit_pp0_iter0_stage7)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when ap_ST_fsm_pp0_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage8;
                end if;
            when ap_ST_fsm_pp0_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage9;
                end if;
            when ap_ST_fsm_pp0_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage10;
                end if;
            when ap_ST_fsm_pp0_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage11;
                end if;
            when ap_ST_fsm_pp0_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage12;
                end if;
            when ap_ST_fsm_pp0_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage13;
                end if;
            when ap_ST_fsm_pp0_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage14;
                end if;
            when ap_ST_fsm_pp0_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage15;
                end if;
            when ap_ST_fsm_pp0_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage16;
                end if;
            when ap_ST_fsm_pp0_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage17;
                end if;
            when ap_ST_fsm_pp0_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage18;
                end if;
            when ap_ST_fsm_pp0_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage19;
                end if;
            when ap_ST_fsm_pp0_stage20 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage20_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage20;
                end if;
            when ap_ST_fsm_pp0_stage21 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage21_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage21;
                end if;
            when ap_ST_fsm_pp0_stage22 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage22_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage22;
                end if;
            when ap_ST_fsm_pp0_stage23 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage23_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage23;
                end if;
            when ap_ST_fsm_pp0_stage24 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage24_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage24;
                end if;
            when ap_ST_fsm_pp0_stage25 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage25_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage25;
                end if;
            when ap_ST_fsm_pp0_stage26 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage26_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage26;
                end if;
            when ap_ST_fsm_pp0_stage27 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage27_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage27;
                end if;
            when ap_ST_fsm_pp0_stage28 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage28_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage28;
                end if;
            when ap_ST_fsm_pp0_stage29 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage29_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage29;
                end if;
            when ap_ST_fsm_pp0_stage30 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage30_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage30;
                end if;
            when ap_ST_fsm_pp0_stage31 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage31_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage31;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;

    WEIGHTS_blk_n_R_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_block_pp0_stage6, ap_block_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_block_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_block_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_block_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_block_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_block_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_block_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_block_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_block_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_block_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_block_pp0_stage27, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage28, ap_CS_fsm_pp0_stage29, ap_block_pp0_stage29, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage30, ap_block_pp0_stage31, ap_block_pp0_stage0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_const_boolean_0 = ap_block_pp0_stage30) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_const_boolean_0 = ap_block_pp0_stage29) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_const_boolean_0 = ap_block_pp0_stage28) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27) and (ap_enable_reg_pp0_iter0_reg 
    = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 
    = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16) 
    and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 
    = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 
    = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_const_boolean_0 = ap_block_pp0_stage31) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)))) then 
            WEIGHTS_blk_n_R <= m_axi_WEIGHTS_0_RVALID;
        else 
            WEIGHTS_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    add_ln54_fu_577_p2 <= std_logic_vector(unsigned(ap_sig_allocacmp_k_2) + unsigned(ap_const_lv4_1));
    add_ln58_12_fu_778_p2 <= std_logic_vector(signed(sext_ln58_101_fu_775_p1) + signed(sext_ln58_100_fu_772_p1));
    add_ln58_13_fu_803_p2 <= std_logic_vector(unsigned(add_ln58_12_reg_1481) + unsigned(add_ln58_9_fu_797_p2));
    add_ln58_14_fu_969_p2 <= std_logic_vector(unsigned(add_ln58_13_reg_1496) + unsigned(add_ln58_6_reg_1411));
    add_ln58_17_fu_839_p2 <= std_logic_vector(signed(sext_ln58_103_fu_836_p1) + signed(sext_ln58_102_fu_833_p1));
    add_ln58_20_fu_883_p2 <= std_logic_vector(signed(sext_ln58_105_fu_880_p1) + signed(sext_ln58_104_fu_877_p1));
    add_ln58_21_fu_960_p2 <= std_logic_vector(unsigned(add_ln58_20_reg_1566) + unsigned(add_ln58_17_reg_1526));
    add_ln58_24_fu_949_p2 <= std_logic_vector(signed(sext_ln58_107_fu_946_p1) + signed(sext_ln58_106_fu_943_p1));
    add_ln58_27_fu_937_p2 <= std_logic_vector(signed(sext_ln58_109_fu_934_p1) + signed(sext_ln58_108_fu_931_p1));
    add_ln58_28_fu_955_p2 <= std_logic_vector(unsigned(add_ln58_27_reg_1631) + unsigned(add_ln58_24_fu_949_p2));
    add_ln58_29_fu_964_p2 <= std_logic_vector(unsigned(add_ln58_28_reg_1636) + unsigned(add_ln58_21_fu_960_p2));
    add_ln58_2_fu_704_p2 <= std_logic_vector(signed(sext_ln58_95_fu_701_p1) + signed(sext_ln58_94_fu_698_p1));
    add_ln58_5_fu_685_p2 <= std_logic_vector(signed(sext_ln58_97_fu_682_p1) + signed(sext_ln58_96_fu_679_p1));
    add_ln58_6_fu_710_p2 <= std_logic_vector(unsigned(add_ln58_5_reg_1396) + unsigned(add_ln58_2_fu_704_p2));
    add_ln58_9_fu_797_p2 <= std_logic_vector(signed(sext_ln58_99_fu_794_p1) + signed(sext_ln58_98_fu_791_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage10 <= ap_CS_fsm(10);
    ap_CS_fsm_pp0_stage11 <= ap_CS_fsm(11);
    ap_CS_fsm_pp0_stage12 <= ap_CS_fsm(12);
    ap_CS_fsm_pp0_stage13 <= ap_CS_fsm(13);
    ap_CS_fsm_pp0_stage14 <= ap_CS_fsm(14);
    ap_CS_fsm_pp0_stage15 <= ap_CS_fsm(15);
    ap_CS_fsm_pp0_stage16 <= ap_CS_fsm(16);
    ap_CS_fsm_pp0_stage17 <= ap_CS_fsm(17);
    ap_CS_fsm_pp0_stage18 <= ap_CS_fsm(18);
    ap_CS_fsm_pp0_stage19 <= ap_CS_fsm(19);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage20 <= ap_CS_fsm(20);
    ap_CS_fsm_pp0_stage21 <= ap_CS_fsm(21);
    ap_CS_fsm_pp0_stage22 <= ap_CS_fsm(22);
    ap_CS_fsm_pp0_stage23 <= ap_CS_fsm(23);
    ap_CS_fsm_pp0_stage24 <= ap_CS_fsm(24);
    ap_CS_fsm_pp0_stage25 <= ap_CS_fsm(25);
    ap_CS_fsm_pp0_stage26 <= ap_CS_fsm(26);
    ap_CS_fsm_pp0_stage27 <= ap_CS_fsm(27);
    ap_CS_fsm_pp0_stage28 <= ap_CS_fsm(28);
    ap_CS_fsm_pp0_stage29 <= ap_CS_fsm(29);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage30 <= ap_CS_fsm(30);
    ap_CS_fsm_pp0_stage31 <= ap_CS_fsm(31);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
    ap_CS_fsm_pp0_stage8 <= ap_CS_fsm(8);
    ap_CS_fsm_pp0_stage9 <= ap_CS_fsm(9);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state33_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state33_pp0_stage0_iter1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, ap_block_state33_pp0_stage0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_1 = ap_block_state33_pp0_stage0_iter1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage10_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state11_pp0_stage10_iter0)
    begin
                ap_block_pp0_stage10_11001 <= ((ap_const_boolean_1 = ap_block_state11_pp0_stage10_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage10_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state11_pp0_stage10_iter0)
    begin
                ap_block_pp0_stage10_subdone <= ((ap_const_boolean_1 = ap_block_state11_pp0_stage10_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage11_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state12_pp0_stage11_iter0)
    begin
                ap_block_pp0_stage11_11001 <= ((ap_const_boolean_1 = ap_block_state12_pp0_stage11_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage11_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state12_pp0_stage11_iter0)
    begin
                ap_block_pp0_stage11_subdone <= ((ap_const_boolean_1 = ap_block_state12_pp0_stage11_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage12_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state13_pp0_stage12_iter0)
    begin
                ap_block_pp0_stage12_11001 <= ((ap_const_boolean_1 = ap_block_state13_pp0_stage12_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage12_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state13_pp0_stage12_iter0)
    begin
                ap_block_pp0_stage12_subdone <= ((ap_const_boolean_1 = ap_block_state13_pp0_stage12_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage13_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state14_pp0_stage13_iter0)
    begin
                ap_block_pp0_stage13_11001 <= ((ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage13_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state14_pp0_stage13_iter0)
    begin
                ap_block_pp0_stage13_subdone <= ((ap_const_boolean_1 = ap_block_state14_pp0_stage13_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage14_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state15_pp0_stage14_iter0)
    begin
                ap_block_pp0_stage14_11001 <= ((ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage14_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state15_pp0_stage14_iter0)
    begin
                ap_block_pp0_stage14_subdone <= ((ap_const_boolean_1 = ap_block_state15_pp0_stage14_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage15_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state16_pp0_stage15_iter0)
    begin
                ap_block_pp0_stage15_11001 <= ((ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage15_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state16_pp0_stage15_iter0)
    begin
                ap_block_pp0_stage15_subdone <= ((ap_const_boolean_1 = ap_block_state16_pp0_stage15_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage16_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state17_pp0_stage16_iter0)
    begin
                ap_block_pp0_stage16_11001 <= ((ap_const_boolean_1 = ap_block_state17_pp0_stage16_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage16_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state17_pp0_stage16_iter0)
    begin
                ap_block_pp0_stage16_subdone <= ((ap_const_boolean_1 = ap_block_state17_pp0_stage16_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage17_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state18_pp0_stage17_iter0)
    begin
                ap_block_pp0_stage17_11001 <= ((ap_const_boolean_1 = ap_block_state18_pp0_stage17_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage17_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state18_pp0_stage17_iter0)
    begin
                ap_block_pp0_stage17_subdone <= ((ap_const_boolean_1 = ap_block_state18_pp0_stage17_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage18_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state19_pp0_stage18_iter0)
    begin
                ap_block_pp0_stage18_11001 <= ((ap_const_boolean_1 = ap_block_state19_pp0_stage18_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage18_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state19_pp0_stage18_iter0)
    begin
                ap_block_pp0_stage18_subdone <= ((ap_const_boolean_1 = ap_block_state19_pp0_stage18_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage19_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state20_pp0_stage19_iter0)
    begin
                ap_block_pp0_stage19_11001 <= ((ap_const_boolean_1 = ap_block_state20_pp0_stage19_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage19_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state20_pp0_stage19_iter0)
    begin
                ap_block_pp0_stage19_subdone <= ((ap_const_boolean_1 = ap_block_state20_pp0_stage19_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state2_pp0_stage1_iter0)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state2_pp0_stage1_iter0)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_const_boolean_1 = ap_block_state2_pp0_stage1_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage20_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state21_pp0_stage20_iter0)
    begin
                ap_block_pp0_stage20_11001 <= ((ap_const_boolean_1 = ap_block_state21_pp0_stage20_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage20_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state21_pp0_stage20_iter0)
    begin
                ap_block_pp0_stage20_subdone <= ((ap_const_boolean_1 = ap_block_state21_pp0_stage20_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage21 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage21_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state22_pp0_stage21_iter0)
    begin
                ap_block_pp0_stage21_11001 <= ((ap_const_boolean_1 = ap_block_state22_pp0_stage21_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage21_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state22_pp0_stage21_iter0)
    begin
                ap_block_pp0_stage21_subdone <= ((ap_const_boolean_1 = ap_block_state22_pp0_stage21_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage22 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage22_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state23_pp0_stage22_iter0)
    begin
                ap_block_pp0_stage22_11001 <= ((ap_const_boolean_1 = ap_block_state23_pp0_stage22_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage22_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state23_pp0_stage22_iter0)
    begin
                ap_block_pp0_stage22_subdone <= ((ap_const_boolean_1 = ap_block_state23_pp0_stage22_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage23 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage23_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state24_pp0_stage23_iter0)
    begin
                ap_block_pp0_stage23_11001 <= ((ap_const_boolean_1 = ap_block_state24_pp0_stage23_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage23_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state24_pp0_stage23_iter0)
    begin
                ap_block_pp0_stage23_subdone <= ((ap_const_boolean_1 = ap_block_state24_pp0_stage23_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage24 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage24_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state25_pp0_stage24_iter0)
    begin
                ap_block_pp0_stage24_11001 <= ((ap_const_boolean_1 = ap_block_state25_pp0_stage24_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage24_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state25_pp0_stage24_iter0)
    begin
                ap_block_pp0_stage24_subdone <= ((ap_const_boolean_1 = ap_block_state25_pp0_stage24_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage25 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage25_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state26_pp0_stage25_iter0)
    begin
                ap_block_pp0_stage25_11001 <= ((ap_const_boolean_1 = ap_block_state26_pp0_stage25_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage25_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state26_pp0_stage25_iter0)
    begin
                ap_block_pp0_stage25_subdone <= ((ap_const_boolean_1 = ap_block_state26_pp0_stage25_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage26 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage26_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state27_pp0_stage26_iter0)
    begin
                ap_block_pp0_stage26_11001 <= ((ap_const_boolean_1 = ap_block_state27_pp0_stage26_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage26_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state27_pp0_stage26_iter0)
    begin
                ap_block_pp0_stage26_subdone <= ((ap_const_boolean_1 = ap_block_state27_pp0_stage26_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage27 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage27_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state28_pp0_stage27_iter0)
    begin
                ap_block_pp0_stage27_11001 <= ((ap_const_boolean_1 = ap_block_state28_pp0_stage27_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage27_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state28_pp0_stage27_iter0)
    begin
                ap_block_pp0_stage27_subdone <= ((ap_const_boolean_1 = ap_block_state28_pp0_stage27_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage28 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage28_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state29_pp0_stage28_iter0)
    begin
                ap_block_pp0_stage28_11001 <= ((ap_const_boolean_1 = ap_block_state29_pp0_stage28_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage28_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state29_pp0_stage28_iter0)
    begin
                ap_block_pp0_stage28_subdone <= ((ap_const_boolean_1 = ap_block_state29_pp0_stage28_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage29 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage29_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state30_pp0_stage29_iter0)
    begin
                ap_block_pp0_stage29_11001 <= ((ap_const_boolean_1 = ap_block_state30_pp0_stage29_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage29_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state30_pp0_stage29_iter0)
    begin
                ap_block_pp0_stage29_subdone <= ((ap_const_boolean_1 = ap_block_state30_pp0_stage29_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state3_pp0_stage2_iter0)
    begin
                ap_block_pp0_stage2_11001 <= ((ap_const_boolean_1 = ap_block_state3_pp0_stage2_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage2_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state3_pp0_stage2_iter0)
    begin
                ap_block_pp0_stage2_subdone <= ((ap_const_boolean_1 = ap_block_state3_pp0_stage2_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage30 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage30_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state31_pp0_stage30_iter0)
    begin
                ap_block_pp0_stage30_11001 <= ((ap_const_boolean_1 = ap_block_state31_pp0_stage30_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage30_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state31_pp0_stage30_iter0)
    begin
                ap_block_pp0_stage30_subdone <= ((ap_const_boolean_1 = ap_block_state31_pp0_stage30_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage31 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage31_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state32_pp0_stage31_iter0)
    begin
                ap_block_pp0_stage31_11001 <= ((ap_const_boolean_1 = ap_block_state32_pp0_stage31_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage31_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state32_pp0_stage31_iter0)
    begin
                ap_block_pp0_stage31_subdone <= ((ap_const_boolean_1 = ap_block_state32_pp0_stage31_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state4_pp0_stage3_iter0)
    begin
                ap_block_pp0_stage3_11001 <= ((ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage3_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state4_pp0_stage3_iter0)
    begin
                ap_block_pp0_stage3_subdone <= ((ap_const_boolean_1 = ap_block_state4_pp0_stage3_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage4_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state5_pp0_stage4_iter0)
    begin
                ap_block_pp0_stage4_11001 <= ((ap_const_boolean_1 = ap_block_state5_pp0_stage4_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage4_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state5_pp0_stage4_iter0)
    begin
                ap_block_pp0_stage4_subdone <= ((ap_const_boolean_1 = ap_block_state5_pp0_stage4_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage5_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state6_pp0_stage5_iter0)
    begin
                ap_block_pp0_stage5_11001 <= ((ap_const_boolean_1 = ap_block_state6_pp0_stage5_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage5_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state6_pp0_stage5_iter0)
    begin
                ap_block_pp0_stage5_subdone <= ((ap_const_boolean_1 = ap_block_state6_pp0_stage5_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage6_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state7_pp0_stage6_iter0)
    begin
                ap_block_pp0_stage6_11001 <= ((ap_const_boolean_1 = ap_block_state7_pp0_stage6_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage6_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state7_pp0_stage6_iter0)
    begin
                ap_block_pp0_stage6_subdone <= ((ap_const_boolean_1 = ap_block_state7_pp0_stage6_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage7_01001_assign_proc : process(ap_block_state8_pp0_stage7_iter0, ap_enable_reg_pp0_iter0_reg)
    begin
                ap_block_pp0_stage7_01001 <= ((ap_const_boolean_1 = ap_block_state8_pp0_stage7_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage7_11001_assign_proc : process(ap_block_state8_pp0_stage7_iter0, ap_enable_reg_pp0_iter0_reg)
    begin
                ap_block_pp0_stage7_11001 <= ((ap_const_boolean_1 = ap_block_state8_pp0_stage7_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage7_subdone_assign_proc : process(ap_block_state8_pp0_stage7_iter0, ap_enable_reg_pp0_iter0_reg)
    begin
                ap_block_pp0_stage7_subdone <= ((ap_const_boolean_1 = ap_block_state8_pp0_stage7_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage8_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state9_pp0_stage8_iter0)
    begin
                ap_block_pp0_stage8_11001 <= ((ap_const_boolean_1 = ap_block_state9_pp0_stage8_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage8_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state9_pp0_stage8_iter0)
    begin
                ap_block_pp0_stage8_subdone <= ((ap_const_boolean_1 = ap_block_state9_pp0_stage8_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;

        ap_block_pp0_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage9_11001_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state10_pp0_stage9_iter0)
    begin
                ap_block_pp0_stage9_11001 <= ((ap_const_boolean_1 = ap_block_state10_pp0_stage9_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_pp0_stage9_subdone_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_block_state10_pp0_stage9_iter0)
    begin
                ap_block_pp0_stage9_subdone <= ((ap_const_boolean_1 = ap_block_state10_pp0_stage9_iter0) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1));
    end process;


    ap_block_state10_pp0_stage9_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state10_pp0_stage9_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state11_pp0_stage10_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state11_pp0_stage10_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state12_pp0_stage11_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state12_pp0_stage11_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state13_pp0_stage12_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state13_pp0_stage12_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state14_pp0_stage13_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state14_pp0_stage13_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state15_pp0_stage14_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state15_pp0_stage14_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state16_pp0_stage15_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state16_pp0_stage15_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state17_pp0_stage16_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state17_pp0_stage16_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state18_pp0_stage17_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state18_pp0_stage17_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state19_pp0_stage18_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state19_pp0_stage18_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state20_pp0_stage19_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state20_pp0_stage19_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state21_pp0_stage20_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state21_pp0_stage20_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state22_pp0_stage21_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state22_pp0_stage21_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state23_pp0_stage22_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state23_pp0_stage22_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state24_pp0_stage23_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state24_pp0_stage23_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state25_pp0_stage24_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state25_pp0_stage24_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state26_pp0_stage25_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state26_pp0_stage25_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state27_pp0_stage26_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state27_pp0_stage26_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state28_pp0_stage27_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state28_pp0_stage27_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state29_pp0_stage28_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state29_pp0_stage28_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state2_pp0_stage1_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state2_pp0_stage1_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state30_pp0_stage29_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state30_pp0_stage29_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state31_pp0_stage30_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state31_pp0_stage30_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state32_pp0_stage31_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state32_pp0_stage31_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state33_pp0_stage0_iter1_assign_proc : process(m_axi_WEIGHTS_0_RVALID)
    begin
                ap_block_state33_pp0_stage0_iter1 <= (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0);
    end process;


    ap_block_state3_pp0_stage2_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state3_pp0_stage2_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state4_pp0_stage3_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state4_pp0_stage3_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state5_pp0_stage4_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state5_pp0_stage4_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state6_pp0_stage5_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state6_pp0_stage5_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state7_pp0_stage6_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state7_pp0_stage6_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state8_pp0_stage7_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state8_pp0_stage7_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_block_state9_pp0_stage8_iter0_assign_proc : process(m_axi_WEIGHTS_0_RVALID, icmp_ln54_reg_1292)
    begin
                ap_block_state9_pp0_stage8_iter0 <= ((icmp_ln54_reg_1292 = ap_const_lv1_0) and (m_axi_WEIGHTS_0_RVALID = ap_const_logic_0));
    end process;


    ap_condition_exit_pp0_iter0_stage7_assign_proc : process(ap_CS_fsm_pp0_stage7, icmp_ln54_reg_1292, ap_enable_reg_pp0_iter0_reg, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_1))) then 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_0;
        end if; 
    end process;

    ap_done <= ap_done_sig;

    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone, ap_loop_exit_ready, ap_done_reg)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_loop_exit_ready = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_start_int = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage7;
    ap_ready <= ap_ready_sig;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage31, ap_block_pp0_stage31_subdone)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_const_boolean_0 = ap_block_pp0_stage31_subdone) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_k_2_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, k_fu_154, ap_loop_init)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
            ap_sig_allocacmp_k_2 <= ap_const_lv4_0;
        else 
            ap_sig_allocacmp_k_2 <= k_fu_154;
        end if; 
    end process;


    grp_fu_1004_ce_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)))) then 
            grp_fu_1004_ce <= ap_const_logic_1;
        else 
            grp_fu_1004_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1004_p1 <= sext_ln58_cast_reg_1283(2 - 1 downto 0);

    grp_fu_1011_ce_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001)))) then 
            grp_fu_1011_ce <= ap_const_logic_1;
        else 
            grp_fu_1011_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1011_p1 <= sext_ln58_3_cast_reg_1268(2 - 1 downto 0);

    grp_fu_1018_ce_assign_proc : process(ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001)))) then 
            grp_fu_1018_ce <= ap_const_logic_1;
        else 
            grp_fu_1018_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1018_p1 <= sext_ln58_5_cast_reg_1258(2 - 1 downto 0);

    grp_fu_1025_ce_assign_proc : process(ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001)))) then 
            grp_fu_1025_ce <= ap_const_logic_1;
        else 
            grp_fu_1025_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1025_p1 <= sext_ln58_7_cast_reg_1248(2 - 1 downto 0);

    grp_fu_1033_ce_assign_proc : process(ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) and (ap_const_boolean_0 = ap_block_pp0_stage11_11001)))) then 
            grp_fu_1033_ce <= ap_const_logic_1;
        else 
            grp_fu_1033_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1033_p1 <= sext_ln58_9_cast_reg_1238(2 - 1 downto 0);

    grp_fu_1040_ce_assign_proc : process(ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001)))) then 
            grp_fu_1040_ce <= ap_const_logic_1;
        else 
            grp_fu_1040_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1040_p1 <= sext_ln58_11_cast_reg_1228(2 - 1 downto 0);

    grp_fu_1047_ce_assign_proc : process(ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001)))) then 
            grp_fu_1047_ce <= ap_const_logic_1;
        else 
            grp_fu_1047_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1047_p1 <= sext_ln58_13_cast_reg_1218(2 - 1 downto 0);

    grp_fu_1054_ce_assign_proc : process(ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001)))) then 
            grp_fu_1054_ce <= ap_const_logic_1;
        else 
            grp_fu_1054_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1054_p1 <= sext_ln58_15_cast_reg_1208(2 - 1 downto 0);

    grp_fu_1062_ce_assign_proc : process(ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001)))) then 
            grp_fu_1062_ce <= ap_const_logic_1;
        else 
            grp_fu_1062_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1062_p1 <= sext_ln58_17_cast_reg_1198(2 - 1 downto 0);

    grp_fu_1069_ce_assign_proc : process(ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001)))) then 
            grp_fu_1069_ce <= ap_const_logic_1;
        else 
            grp_fu_1069_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1069_p1 <= sext_ln58_19_cast_reg_1188(2 - 1 downto 0);

    grp_fu_1077_ce_assign_proc : process(ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage26_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001)))) then 
            grp_fu_1077_ce <= ap_const_logic_1;
        else 
            grp_fu_1077_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1077_p1 <= sext_ln58_21_cast_reg_1178(2 - 1 downto 0);

    grp_fu_1084_ce_assign_proc : process(ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage28, ap_block_pp0_stage25_11001, ap_block_pp0_stage26_11001, ap_block_pp0_stage27_11001, ap_block_pp0_stage28_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_const_boolean_0 = ap_block_pp0_stage28_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001)))) then 
            grp_fu_1084_ce <= ap_const_logic_1;
        else 
            grp_fu_1084_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1084_p1 <= sext_ln58_23_cast_reg_1168(2 - 1 downto 0);

    grp_fu_1092_ce_assign_proc : process(ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage27_11001, ap_block_pp0_stage28_11001, ap_block_pp0_stage29_11001, ap_block_pp0_stage30_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_const_boolean_0 = ap_block_pp0_stage30_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_const_boolean_0 = ap_block_pp0_stage29_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_const_boolean_0 = ap_block_pp0_stage28_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001)))) then 
            grp_fu_1092_ce <= ap_const_logic_1;
        else 
            grp_fu_1092_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1092_p1 <= sext_ln58_25_cast_reg_1158(2 - 1 downto 0);

    grp_fu_1099_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage29_11001, ap_block_pp0_stage30_11001, ap_block_pp0_stage31_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_const_boolean_0 = ap_block_pp0_stage30_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_const_boolean_0 = ap_block_pp0_stage29_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_const_boolean_0 = ap_block_pp0_stage31_11001)))) then 
            grp_fu_1099_ce <= ap_const_logic_1;
        else 
            grp_fu_1099_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1099_p1 <= sext_ln58_27_cast_reg_1148(2 - 1 downto 0);

    grp_fu_1106_ce_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage31_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_const_boolean_0 = ap_block_pp0_stage31_11001)))) then 
            grp_fu_1106_ce <= ap_const_logic_1;
        else 
            grp_fu_1106_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1106_p1 <= sext_ln58_29_cast_reg_1138(2 - 1 downto 0);

    grp_fu_1113_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
            grp_fu_1113_ce <= ap_const_logic_1;
        else 
            grp_fu_1113_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_1113_p1 <= sext_ln54_cast_reg_1128(2 - 1 downto 0);
    icmp_ln54_fu_571_p2 <= "1" when (ap_sig_allocacmp_k_2 = ap_const_lv4_A) else "0";
    m_axi_WEIGHTS_0_ARADDR <= ap_const_lv64_0;
    m_axi_WEIGHTS_0_ARBURST <= ap_const_lv2_0;
    m_axi_WEIGHTS_0_ARCACHE <= ap_const_lv4_0;
    m_axi_WEIGHTS_0_ARID <= ap_const_lv1_0;
    m_axi_WEIGHTS_0_ARLEN <= ap_const_lv32_0;
    m_axi_WEIGHTS_0_ARLOCK <= ap_const_lv2_0;
    m_axi_WEIGHTS_0_ARPROT <= ap_const_lv3_0;
    m_axi_WEIGHTS_0_ARQOS <= ap_const_lv4_0;
    m_axi_WEIGHTS_0_ARREGION <= ap_const_lv4_0;
    m_axi_WEIGHTS_0_ARSIZE <= ap_const_lv3_0;
    m_axi_WEIGHTS_0_ARUSER <= ap_const_lv1_0;
    m_axi_WEIGHTS_0_ARVALID <= ap_const_logic_0;
    m_axi_WEIGHTS_0_AWADDR <= ap_const_lv64_0;
    m_axi_WEIGHTS_0_AWBURST <= ap_const_lv2_0;
    m_axi_WEIGHTS_0_AWCACHE <= ap_const_lv4_0;
    m_axi_WEIGHTS_0_AWID <= ap_const_lv1_0;
    m_axi_WEIGHTS_0_AWLEN <= ap_const_lv32_0;
    m_axi_WEIGHTS_0_AWLOCK <= ap_const_lv2_0;
    m_axi_WEIGHTS_0_AWPROT <= ap_const_lv3_0;
    m_axi_WEIGHTS_0_AWQOS <= ap_const_lv4_0;
    m_axi_WEIGHTS_0_AWREGION <= ap_const_lv4_0;
    m_axi_WEIGHTS_0_AWSIZE <= ap_const_lv3_0;
    m_axi_WEIGHTS_0_AWUSER <= ap_const_lv1_0;
    m_axi_WEIGHTS_0_AWVALID <= ap_const_logic_0;
    m_axi_WEIGHTS_0_BREADY <= ap_const_logic_0;

    m_axi_WEIGHTS_0_RREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, icmp_ln54_reg_1292, ap_enable_reg_pp0_iter0_reg, ap_CS_fsm_pp0_stage31, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage8, ap_CS_fsm_pp0_stage9, ap_CS_fsm_pp0_stage10, ap_CS_fsm_pp0_stage11, ap_CS_fsm_pp0_stage12, ap_CS_fsm_pp0_stage13, ap_CS_fsm_pp0_stage14, ap_CS_fsm_pp0_stage15, ap_CS_fsm_pp0_stage16, ap_CS_fsm_pp0_stage17, ap_CS_fsm_pp0_stage18, ap_CS_fsm_pp0_stage19, ap_CS_fsm_pp0_stage20, ap_CS_fsm_pp0_stage21, ap_CS_fsm_pp0_stage22, ap_CS_fsm_pp0_stage23, ap_CS_fsm_pp0_stage24, ap_CS_fsm_pp0_stage25, ap_CS_fsm_pp0_stage26, ap_CS_fsm_pp0_stage27, ap_CS_fsm_pp0_stage28, ap_CS_fsm_pp0_stage29, ap_CS_fsm_pp0_stage30, ap_block_pp0_stage1_11001, ap_block_pp0_stage2_11001, ap_block_pp0_stage3_11001, ap_block_pp0_stage4_11001, ap_block_pp0_stage5_11001, ap_block_pp0_stage6_11001, ap_block_pp0_stage7_11001, ap_block_pp0_stage8_11001, ap_block_pp0_stage9_11001, ap_block_pp0_stage10_11001, ap_block_pp0_stage11_11001, ap_block_pp0_stage12_11001, ap_block_pp0_stage13_11001, ap_block_pp0_stage14_11001, ap_block_pp0_stage15_11001, ap_block_pp0_stage16_11001, ap_block_pp0_stage17_11001, ap_block_pp0_stage18_11001, ap_block_pp0_stage19_11001, ap_block_pp0_stage20_11001, ap_block_pp0_stage21_11001, ap_block_pp0_stage22_11001, ap_block_pp0_stage23_11001, ap_block_pp0_stage24_11001, ap_block_pp0_stage25_11001, ap_block_pp0_stage26_11001, ap_block_pp0_stage27_11001, ap_block_pp0_stage28_11001, ap_block_pp0_stage29_11001, ap_block_pp0_stage30_11001, ap_block_pp0_stage31_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage30) and (ap_const_boolean_0 = ap_block_pp0_stage30_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage29) and (ap_const_boolean_0 = ap_block_pp0_stage29_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage28) and (ap_const_boolean_0 = ap_block_pp0_stage28_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage27) and (ap_const_boolean_0 = ap_block_pp0_stage27_11001) 
    and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage26) and (ap_const_boolean_0 = ap_block_pp0_stage26_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage25) and (ap_const_boolean_0 = ap_block_pp0_stage25_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage24) and (ap_const_boolean_0 = ap_block_pp0_stage24_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage23) and (ap_const_boolean_0 = ap_block_pp0_stage23_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage22) and (ap_const_boolean_0 = ap_block_pp0_stage22_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) 
    and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage21) and (ap_const_boolean_0 = ap_block_pp0_stage21_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage20) and (ap_const_boolean_0 = ap_block_pp0_stage20_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage19) and (ap_const_boolean_0 = ap_block_pp0_stage19_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage18) and (ap_const_boolean_0 = ap_block_pp0_stage18_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage17) and (ap_const_boolean_0 = ap_block_pp0_stage17_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) 
    or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage16) and (ap_const_boolean_0 = ap_block_pp0_stage16_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage15) and (ap_const_boolean_0 = ap_block_pp0_stage15_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage14) and (ap_const_boolean_0 = ap_block_pp0_stage14_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage13) and (ap_const_boolean_0 = ap_block_pp0_stage13_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage12) and (ap_const_boolean_0 = ap_block_pp0_stage12_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage11) 
    and (ap_const_boolean_0 = ap_block_pp0_stage11_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage10) and (ap_const_boolean_0 = ap_block_pp0_stage10_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage9) and (ap_const_boolean_0 = ap_block_pp0_stage9_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage8) and (ap_const_boolean_0 = ap_block_pp0_stage8_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) 
    and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) and (icmp_ln54_reg_1292 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage31) and (ap_const_boolean_0 = ap_block_pp0_stage31_11001) and (ap_enable_reg_pp0_iter0_reg = ap_const_logic_1) 
    and (icmp_ln54_reg_1292 = ap_const_lv1_0)))) then 
            m_axi_WEIGHTS_0_RREADY <= ap_const_logic_1;
        else 
            m_axi_WEIGHTS_0_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_WEIGHTS_0_WDATA <= ap_const_lv8_0;
    m_axi_WEIGHTS_0_WID <= ap_const_lv1_0;
    m_axi_WEIGHTS_0_WLAST <= ap_const_logic_0;
    m_axi_WEIGHTS_0_WSTRB <= ap_const_lv1_0;
    m_axi_WEIGHTS_0_WUSER <= ap_const_lv1_0;
    m_axi_WEIGHTS_0_WVALID <= ap_const_logic_0;
    mul_ln58_11_fu_719_p1 <= sext_ln58_12_cast_reg_1223(2 - 1 downto 0);
    mul_ln58_13_fu_735_p1 <= sext_ln58_14_cast_reg_1213(2 - 1 downto 0);
    mul_ln58_15_fu_751_p1 <= sext_ln58_16_cast_reg_1203(2 - 1 downto 0);
    mul_ln58_17_fu_767_p1 <= sext_ln58_18_cast_reg_1193(2 - 1 downto 0);
    mul_ln58_19_fu_812_p1 <= sext_ln58_20_cast_reg_1183(2 - 1 downto 0);
    mul_ln58_1_fu_613_p1 <= sext_ln58_2_cast_reg_1273(2 - 1 downto 0);
    mul_ln58_21_fu_828_p1 <= sext_ln58_22_cast_reg_1173(2 - 1 downto 0);
    mul_ln58_23_fu_856_p1 <= sext_ln58_24_cast_reg_1163(2 - 1 downto 0);
    mul_ln58_25_fu_872_p1 <= sext_ln58_26_cast_reg_1153(2 - 1 downto 0);
    mul_ln58_27_fu_900_p1 <= sext_ln58_28_cast_reg_1143(2 - 1 downto 0);
    mul_ln58_29_fu_916_p1 <= sext_ln58_30_cast_reg_1133(2 - 1 downto 0);
    mul_ln58_3_fu_626_p1 <= sext_ln58_4_cast_reg_1263(2 - 1 downto 0);
    mul_ln58_5_fu_642_p1 <= sext_ln58_6_cast_reg_1253(2 - 1 downto 0);
    mul_ln58_7_fu_658_p1 <= sext_ln58_8_cast_reg_1243(2 - 1 downto 0);
    mul_ln58_9_fu_674_p1 <= sext_ln58_10_cast_reg_1233(2 - 1 downto 0);
    mul_ln58_fu_601_p1 <= sext_ln58_1_cast_reg_1278(2 - 1 downto 0);
    output_0 <= select_ln13_fu_986_p3;

    output_0_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, k_2_reg_1288_pp0_iter1_reg)
    begin
        if (((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
            output_0_ap_vld <= ap_const_logic_1;
        else 
            output_0_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_1 <= select_ln13_fu_986_p3;

    output_1_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, k_2_reg_1288_pp0_iter1_reg)
    begin
        if (((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
            output_1_ap_vld <= ap_const_logic_1;
        else 
            output_1_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_2 <= select_ln13_fu_986_p3;

    output_2_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, k_2_reg_1288_pp0_iter1_reg)
    begin
        if (((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
            output_2_ap_vld <= ap_const_logic_1;
        else 
            output_2_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_3 <= select_ln13_fu_986_p3;

    output_3_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, k_2_reg_1288_pp0_iter1_reg)
    begin
        if (((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
            output_3_ap_vld <= ap_const_logic_1;
        else 
            output_3_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_4 <= select_ln13_fu_986_p3;

    output_4_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, k_2_reg_1288_pp0_iter1_reg)
    begin
        if (((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
            output_4_ap_vld <= ap_const_logic_1;
        else 
            output_4_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_5 <= select_ln13_fu_986_p3;

    output_5_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, k_2_reg_1288_pp0_iter1_reg)
    begin
        if (((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
            output_5_ap_vld <= ap_const_logic_1;
        else 
            output_5_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_6 <= select_ln13_fu_986_p3;

    output_6_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, k_2_reg_1288_pp0_iter1_reg)
    begin
        if (((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
            output_6_ap_vld <= ap_const_logic_1;
        else 
            output_6_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_7 <= select_ln13_fu_986_p3;

    output_7_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, k_2_reg_1288_pp0_iter1_reg)
    begin
        if (((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
            output_7_ap_vld <= ap_const_logic_1;
        else 
            output_7_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_8 <= select_ln13_fu_986_p3;

    output_8_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, k_2_reg_1288_pp0_iter1_reg)
    begin
        if (((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_8) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
            output_8_ap_vld <= ap_const_logic_1;
        else 
            output_8_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    output_9 <= select_ln13_fu_986_p3;

    output_9_ap_vld_assign_proc : process(ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_11001, k_2_reg_1288_pp0_iter1_reg)
    begin
        if ((not((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_0)) and not((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_1)) and not((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_2)) and not((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_3)) and not((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_4)) and not((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_5)) and not((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_6)) and not((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_7)) and not((k_2_reg_1288_pp0_iter1_reg = ap_const_lv4_8)) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001))) then 
            output_9_ap_vld <= ap_const_logic_1;
        else 
            output_9_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    select_ln13_fu_986_p3 <= 
        ap_const_lv2_3 when (tmp_fu_978_p3(0) = '1') else 
        ap_const_lv2_1;
        sext_ln54_cast_fu_435_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln54),10));

        sext_ln58_100_fu_772_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_10_reg_1461),12));

        sext_ln58_101_fu_775_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1054_p3),12));

        sext_ln58_102_fu_833_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_15_reg_1506),12));

        sext_ln58_103_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1069_p3),12));

        sext_ln58_104_fu_877_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_18_reg_1546),12));

        sext_ln58_105_fu_880_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1084_p3),12));

        sext_ln58_106_fu_943_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_22_reg_1586),12));

        sext_ln58_107_fu_946_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_23_reg_1606),12));

        sext_ln58_108_fu_931_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_25_reg_1621),12));

        sext_ln58_109_fu_934_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1113_p3),12));

        sext_ln58_10_cast_fu_519_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_10),10));

        sext_ln58_11_cast_fu_515_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_11),10));

        sext_ln58_12_cast_fu_511_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_12),10));

        sext_ln58_13_cast_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_13),10));

        sext_ln58_14_cast_fu_503_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_14),10));

        sext_ln58_15_cast_fu_499_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_15),10));

        sext_ln58_16_cast_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_16),10));

        sext_ln58_17_cast_fu_491_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_17),10));

        sext_ln58_18_cast_fu_487_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_18),10));

        sext_ln58_19_cast_fu_483_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_19),10));

        sext_ln58_1_cast_fu_555_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_1),10));

        sext_ln58_20_cast_fu_479_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_20),10));

        sext_ln58_21_cast_fu_475_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_21),10));

        sext_ln58_22_cast_fu_471_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_22),10));

        sext_ln58_23_cast_fu_467_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_23),10));

        sext_ln58_24_cast_fu_463_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_24),10));

        sext_ln58_25_cast_fu_459_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_25),10));

        sext_ln58_26_cast_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_26),10));

        sext_ln58_27_cast_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_27),10));

        sext_ln58_28_cast_fu_447_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_28),10));

        sext_ln58_29_cast_fu_443_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_29),10));

        sext_ln58_2_cast_fu_551_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_2),10));

        sext_ln58_30_cast_fu_439_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_30),10));

        sext_ln58_3_cast_fu_547_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_3),10));

        sext_ln58_4_cast_fu_543_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_4),10));

        sext_ln58_5_cast_fu_539_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_5),10));

        sext_ln58_6_cast_fu_535_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_6),10));

        sext_ln58_7_cast_fu_531_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_7),10));

        sext_ln58_8_cast_fu_527_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_8),10));

    sext_ln58_92_fu_924_p0 <= reg_431;
        sext_ln58_94_fu_698_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_reg_1331),12));

        sext_ln58_95_fu_701_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_1_reg_1356),12));

        sext_ln58_96_fu_679_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_3_reg_1376),12));

        sext_ln58_97_fu_682_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_1025_p3),12));

        sext_ln58_98_fu_791_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_7_reg_1421),12));

        sext_ln58_99_fu_794_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln58_8_reg_1441),12));

        sext_ln58_9_cast_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58_9),10));

        sext_ln58_cast_fu_559_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln58),10));

    tmp_fu_978_p3 <= x_fu_973_p2(11 downto 11);
    x_fu_973_p2 <= std_logic_vector(unsigned(add_ln58_29_reg_1641) + unsigned(add_ln58_14_fu_969_p2));
end behav;
