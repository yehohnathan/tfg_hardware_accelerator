// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module train_step_forwardOutput_Pipeline_VITIS_LOOP_54_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_WEIGHTS_0_AWVALID,
        m_axi_WEIGHTS_0_AWREADY,
        m_axi_WEIGHTS_0_AWADDR,
        m_axi_WEIGHTS_0_AWID,
        m_axi_WEIGHTS_0_AWLEN,
        m_axi_WEIGHTS_0_AWSIZE,
        m_axi_WEIGHTS_0_AWBURST,
        m_axi_WEIGHTS_0_AWLOCK,
        m_axi_WEIGHTS_0_AWCACHE,
        m_axi_WEIGHTS_0_AWPROT,
        m_axi_WEIGHTS_0_AWQOS,
        m_axi_WEIGHTS_0_AWREGION,
        m_axi_WEIGHTS_0_AWUSER,
        m_axi_WEIGHTS_0_WVALID,
        m_axi_WEIGHTS_0_WREADY,
        m_axi_WEIGHTS_0_WDATA,
        m_axi_WEIGHTS_0_WSTRB,
        m_axi_WEIGHTS_0_WLAST,
        m_axi_WEIGHTS_0_WID,
        m_axi_WEIGHTS_0_WUSER,
        m_axi_WEIGHTS_0_ARVALID,
        m_axi_WEIGHTS_0_ARREADY,
        m_axi_WEIGHTS_0_ARADDR,
        m_axi_WEIGHTS_0_ARID,
        m_axi_WEIGHTS_0_ARLEN,
        m_axi_WEIGHTS_0_ARSIZE,
        m_axi_WEIGHTS_0_ARBURST,
        m_axi_WEIGHTS_0_ARLOCK,
        m_axi_WEIGHTS_0_ARCACHE,
        m_axi_WEIGHTS_0_ARPROT,
        m_axi_WEIGHTS_0_ARQOS,
        m_axi_WEIGHTS_0_ARREGION,
        m_axi_WEIGHTS_0_ARUSER,
        m_axi_WEIGHTS_0_RVALID,
        m_axi_WEIGHTS_0_RREADY,
        m_axi_WEIGHTS_0_RDATA,
        m_axi_WEIGHTS_0_RLAST,
        m_axi_WEIGHTS_0_RID,
        m_axi_WEIGHTS_0_RFIFONUM,
        m_axi_WEIGHTS_0_RUSER,
        m_axi_WEIGHTS_0_RRESP,
        m_axi_WEIGHTS_0_BVALID,
        m_axi_WEIGHTS_0_BREADY,
        m_axi_WEIGHTS_0_BRESP,
        m_axi_WEIGHTS_0_BID,
        m_axi_WEIGHTS_0_BUSER,
        output_0,
        output_0_ap_vld,
        W2,
        output_9,
        output_9_ap_vld,
        output_8,
        output_8_ap_vld,
        output_7,
        output_7_ap_vld,
        output_6,
        output_6_ap_vld,
        output_5,
        output_5_ap_vld,
        output_4,
        output_4_ap_vld,
        output_3,
        output_3_ap_vld,
        output_2,
        output_2_ap_vld,
        output_1,
        output_1_ap_vld,
        sext_ln58,
        sext_ln58_1,
        sext_ln58_2,
        sext_ln58_3,
        sext_ln58_4,
        sext_ln58_5,
        sext_ln58_6,
        sext_ln58_7,
        sext_ln58_8,
        sext_ln58_9,
        sext_ln58_10,
        sext_ln58_11,
        sext_ln58_12,
        sext_ln58_13,
        sext_ln58_14,
        sext_ln58_15,
        sext_ln58_16,
        sext_ln58_17,
        sext_ln58_18,
        sext_ln58_19,
        sext_ln58_20,
        sext_ln58_21,
        sext_ln58_22,
        sext_ln58_23,
        sext_ln58_24,
        sext_ln58_25,
        sext_ln58_26,
        sext_ln58_27,
        sext_ln58_28,
        sext_ln58_29,
        sext_ln58_30,
        sext_ln54
);

parameter    ap_ST_fsm_pp0_stage0 = 32'd1;
parameter    ap_ST_fsm_pp0_stage1 = 32'd2;
parameter    ap_ST_fsm_pp0_stage2 = 32'd4;
parameter    ap_ST_fsm_pp0_stage3 = 32'd8;
parameter    ap_ST_fsm_pp0_stage4 = 32'd16;
parameter    ap_ST_fsm_pp0_stage5 = 32'd32;
parameter    ap_ST_fsm_pp0_stage6 = 32'd64;
parameter    ap_ST_fsm_pp0_stage7 = 32'd128;
parameter    ap_ST_fsm_pp0_stage8 = 32'd256;
parameter    ap_ST_fsm_pp0_stage9 = 32'd512;
parameter    ap_ST_fsm_pp0_stage10 = 32'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 32'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 32'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 32'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 32'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 32'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 32'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 32'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 32'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 32'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 32'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 32'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 32'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 32'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 32'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 32'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 32'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 32'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 32'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 32'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 32'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 32'd2147483648;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_WEIGHTS_0_AWVALID;
input   m_axi_WEIGHTS_0_AWREADY;
output  [63:0] m_axi_WEIGHTS_0_AWADDR;
output  [0:0] m_axi_WEIGHTS_0_AWID;
output  [31:0] m_axi_WEIGHTS_0_AWLEN;
output  [2:0] m_axi_WEIGHTS_0_AWSIZE;
output  [1:0] m_axi_WEIGHTS_0_AWBURST;
output  [1:0] m_axi_WEIGHTS_0_AWLOCK;
output  [3:0] m_axi_WEIGHTS_0_AWCACHE;
output  [2:0] m_axi_WEIGHTS_0_AWPROT;
output  [3:0] m_axi_WEIGHTS_0_AWQOS;
output  [3:0] m_axi_WEIGHTS_0_AWREGION;
output  [0:0] m_axi_WEIGHTS_0_AWUSER;
output   m_axi_WEIGHTS_0_WVALID;
input   m_axi_WEIGHTS_0_WREADY;
output  [7:0] m_axi_WEIGHTS_0_WDATA;
output  [0:0] m_axi_WEIGHTS_0_WSTRB;
output   m_axi_WEIGHTS_0_WLAST;
output  [0:0] m_axi_WEIGHTS_0_WID;
output  [0:0] m_axi_WEIGHTS_0_WUSER;
output   m_axi_WEIGHTS_0_ARVALID;
input   m_axi_WEIGHTS_0_ARREADY;
output  [63:0] m_axi_WEIGHTS_0_ARADDR;
output  [0:0] m_axi_WEIGHTS_0_ARID;
output  [31:0] m_axi_WEIGHTS_0_ARLEN;
output  [2:0] m_axi_WEIGHTS_0_ARSIZE;
output  [1:0] m_axi_WEIGHTS_0_ARBURST;
output  [1:0] m_axi_WEIGHTS_0_ARLOCK;
output  [3:0] m_axi_WEIGHTS_0_ARCACHE;
output  [2:0] m_axi_WEIGHTS_0_ARPROT;
output  [3:0] m_axi_WEIGHTS_0_ARQOS;
output  [3:0] m_axi_WEIGHTS_0_ARREGION;
output  [0:0] m_axi_WEIGHTS_0_ARUSER;
input   m_axi_WEIGHTS_0_RVALID;
output   m_axi_WEIGHTS_0_RREADY;
input  [7:0] m_axi_WEIGHTS_0_RDATA;
input   m_axi_WEIGHTS_0_RLAST;
input  [0:0] m_axi_WEIGHTS_0_RID;
input  [10:0] m_axi_WEIGHTS_0_RFIFONUM;
input  [0:0] m_axi_WEIGHTS_0_RUSER;
input  [1:0] m_axi_WEIGHTS_0_RRESP;
input   m_axi_WEIGHTS_0_BVALID;
output   m_axi_WEIGHTS_0_BREADY;
input  [1:0] m_axi_WEIGHTS_0_BRESP;
input  [0:0] m_axi_WEIGHTS_0_BID;
input  [0:0] m_axi_WEIGHTS_0_BUSER;
output  [1:0] output_0;
output   output_0_ap_vld;
input  [63:0] W2;
output  [1:0] output_9;
output   output_9_ap_vld;
output  [1:0] output_8;
output   output_8_ap_vld;
output  [1:0] output_7;
output   output_7_ap_vld;
output  [1:0] output_6;
output   output_6_ap_vld;
output  [1:0] output_5;
output   output_5_ap_vld;
output  [1:0] output_4;
output   output_4_ap_vld;
output  [1:0] output_3;
output   output_3_ap_vld;
output  [1:0] output_2;
output   output_2_ap_vld;
output  [1:0] output_1;
output   output_1_ap_vld;
input  [1:0] sext_ln58;
input  [1:0] sext_ln58_1;
input  [1:0] sext_ln58_2;
input  [1:0] sext_ln58_3;
input  [1:0] sext_ln58_4;
input  [1:0] sext_ln58_5;
input  [1:0] sext_ln58_6;
input  [1:0] sext_ln58_7;
input  [1:0] sext_ln58_8;
input  [1:0] sext_ln58_9;
input  [1:0] sext_ln58_10;
input  [1:0] sext_ln58_11;
input  [1:0] sext_ln58_12;
input  [1:0] sext_ln58_13;
input  [1:0] sext_ln58_14;
input  [1:0] sext_ln58_15;
input  [1:0] sext_ln58_16;
input  [1:0] sext_ln58_17;
input  [1:0] sext_ln58_18;
input  [1:0] sext_ln58_19;
input  [1:0] sext_ln58_20;
input  [1:0] sext_ln58_21;
input  [1:0] sext_ln58_22;
input  [1:0] sext_ln58_23;
input  [1:0] sext_ln58_24;
input  [1:0] sext_ln58_25;
input  [1:0] sext_ln58_26;
input  [1:0] sext_ln58_27;
input  [1:0] sext_ln58_28;
input  [1:0] sext_ln58_29;
input  [1:0] sext_ln58_30;
input  [1:0] sext_ln54;

reg ap_idle;
reg m_axi_WEIGHTS_0_RREADY;
reg output_0_ap_vld;
reg output_9_ap_vld;
reg output_8_ap_vld;
reg output_7_ap_vld;
reg output_6_ap_vld;
reg output_5_ap_vld;
reg output_4_ap_vld;
reg output_3_ap_vld;
reg output_2_ap_vld;
reg output_1_ap_vld;

(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
reg   [0:0] icmp_ln54_reg_1292;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage7_subdone;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage31;
reg    ap_block_state32_pp0_stage31_iter0;
reg    ap_block_pp0_stage31_subdone;
reg    WEIGHTS_blk_n_R;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
wire    ap_block_pp0_stage31;
wire    ap_block_pp0_stage0;
reg  signed [7:0] reg_431;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_pp0_stage7_11001;
reg    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_11001;
reg    ap_block_state17_pp0_stage16_iter0;
reg    ap_block_pp0_stage16_11001;
reg    ap_block_state18_pp0_stage17_iter0;
reg    ap_block_pp0_stage17_11001;
reg    ap_block_state19_pp0_stage18_iter0;
reg    ap_block_pp0_stage18_11001;
reg    ap_block_state20_pp0_stage19_iter0;
reg    ap_block_pp0_stage19_11001;
reg    ap_block_state21_pp0_stage20_iter0;
reg    ap_block_pp0_stage20_11001;
reg    ap_block_state22_pp0_stage21_iter0;
reg    ap_block_pp0_stage21_11001;
reg    ap_block_state23_pp0_stage22_iter0;
reg    ap_block_pp0_stage22_11001;
reg    ap_block_state24_pp0_stage23_iter0;
reg    ap_block_pp0_stage23_11001;
reg    ap_block_state25_pp0_stage24_iter0;
reg    ap_block_pp0_stage24_11001;
reg    ap_block_state26_pp0_stage25_iter0;
reg    ap_block_pp0_stage25_11001;
reg    ap_block_state27_pp0_stage26_iter0;
reg    ap_block_pp0_stage26_11001;
reg    ap_block_state28_pp0_stage27_iter0;
reg    ap_block_pp0_stage27_11001;
reg    ap_block_state29_pp0_stage28_iter0;
reg    ap_block_pp0_stage28_11001;
reg    ap_block_state30_pp0_stage29_iter0;
reg    ap_block_pp0_stage29_11001;
reg    ap_block_state31_pp0_stage30_iter0;
reg    ap_block_pp0_stage30_11001;
reg    ap_block_pp0_stage31_11001;
reg    ap_block_state33_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire  signed [9:0] sext_ln54_cast_fu_435_p1;
reg  signed [9:0] sext_ln54_cast_reg_1128;
wire  signed [9:0] sext_ln58_30_cast_fu_439_p1;
reg  signed [9:0] sext_ln58_30_cast_reg_1133;
wire  signed [9:0] sext_ln58_29_cast_fu_443_p1;
reg  signed [9:0] sext_ln58_29_cast_reg_1138;
wire  signed [9:0] sext_ln58_28_cast_fu_447_p1;
reg  signed [9:0] sext_ln58_28_cast_reg_1143;
wire  signed [9:0] sext_ln58_27_cast_fu_451_p1;
reg  signed [9:0] sext_ln58_27_cast_reg_1148;
wire  signed [9:0] sext_ln58_26_cast_fu_455_p1;
reg  signed [9:0] sext_ln58_26_cast_reg_1153;
wire  signed [9:0] sext_ln58_25_cast_fu_459_p1;
reg  signed [9:0] sext_ln58_25_cast_reg_1158;
wire  signed [9:0] sext_ln58_24_cast_fu_463_p1;
reg  signed [9:0] sext_ln58_24_cast_reg_1163;
wire  signed [9:0] sext_ln58_23_cast_fu_467_p1;
reg  signed [9:0] sext_ln58_23_cast_reg_1168;
wire  signed [9:0] sext_ln58_22_cast_fu_471_p1;
reg  signed [9:0] sext_ln58_22_cast_reg_1173;
wire  signed [9:0] sext_ln58_21_cast_fu_475_p1;
reg  signed [9:0] sext_ln58_21_cast_reg_1178;
wire  signed [9:0] sext_ln58_20_cast_fu_479_p1;
reg  signed [9:0] sext_ln58_20_cast_reg_1183;
wire  signed [9:0] sext_ln58_19_cast_fu_483_p1;
reg  signed [9:0] sext_ln58_19_cast_reg_1188;
wire  signed [9:0] sext_ln58_18_cast_fu_487_p1;
reg  signed [9:0] sext_ln58_18_cast_reg_1193;
wire  signed [9:0] sext_ln58_17_cast_fu_491_p1;
reg  signed [9:0] sext_ln58_17_cast_reg_1198;
wire  signed [9:0] sext_ln58_16_cast_fu_495_p1;
reg  signed [9:0] sext_ln58_16_cast_reg_1203;
wire  signed [9:0] sext_ln58_15_cast_fu_499_p1;
reg  signed [9:0] sext_ln58_15_cast_reg_1208;
wire  signed [9:0] sext_ln58_14_cast_fu_503_p1;
reg  signed [9:0] sext_ln58_14_cast_reg_1213;
wire  signed [9:0] sext_ln58_13_cast_fu_507_p1;
reg  signed [9:0] sext_ln58_13_cast_reg_1218;
wire  signed [9:0] sext_ln58_12_cast_fu_511_p1;
reg  signed [9:0] sext_ln58_12_cast_reg_1223;
wire  signed [9:0] sext_ln58_11_cast_fu_515_p1;
reg  signed [9:0] sext_ln58_11_cast_reg_1228;
wire  signed [9:0] sext_ln58_10_cast_fu_519_p1;
reg  signed [9:0] sext_ln58_10_cast_reg_1233;
wire  signed [9:0] sext_ln58_9_cast_fu_523_p1;
reg  signed [9:0] sext_ln58_9_cast_reg_1238;
wire  signed [9:0] sext_ln58_8_cast_fu_527_p1;
reg  signed [9:0] sext_ln58_8_cast_reg_1243;
wire  signed [9:0] sext_ln58_7_cast_fu_531_p1;
reg  signed [9:0] sext_ln58_7_cast_reg_1248;
wire  signed [9:0] sext_ln58_6_cast_fu_535_p1;
reg  signed [9:0] sext_ln58_6_cast_reg_1253;
wire  signed [9:0] sext_ln58_5_cast_fu_539_p1;
reg  signed [9:0] sext_ln58_5_cast_reg_1258;
wire  signed [9:0] sext_ln58_4_cast_fu_543_p1;
reg  signed [9:0] sext_ln58_4_cast_reg_1263;
wire  signed [9:0] sext_ln58_3_cast_fu_547_p1;
reg  signed [9:0] sext_ln58_3_cast_reg_1268;
wire  signed [9:0] sext_ln58_2_cast_fu_551_p1;
reg  signed [9:0] sext_ln58_2_cast_reg_1273;
wire  signed [9:0] sext_ln58_1_cast_fu_555_p1;
reg  signed [9:0] sext_ln58_1_cast_reg_1278;
wire  signed [9:0] sext_ln58_cast_fu_559_p1;
reg  signed [9:0] sext_ln58_cast_reg_1283;
reg   [3:0] k_2_reg_1288;
reg   [3:0] k_2_reg_1288_pp0_iter1_reg;
wire   [0:0] icmp_ln54_fu_571_p2;
wire   [3:0] add_ln54_fu_577_p2;
reg   [3:0] add_ln54_reg_1296;
wire   [9:0] mul_ln58_fu_601_p2;
reg  signed [9:0] mul_ln58_reg_1311;
wire   [9:0] mul_ln58_1_fu_613_p2;
reg  signed [9:0] mul_ln58_1_reg_1321;
wire  signed [10:0] grp_fu_1004_p3;
reg  signed [10:0] add_ln58_reg_1331;
wire   [9:0] mul_ln58_3_fu_626_p2;
reg  signed [9:0] mul_ln58_3_reg_1336;
wire   [9:0] mul_ln58_5_fu_642_p2;
reg  signed [9:0] mul_ln58_5_reg_1351;
wire  signed [10:0] grp_fu_1011_p3;
reg  signed [10:0] add_ln58_1_reg_1356;
wire   [9:0] mul_ln58_7_fu_658_p2;
reg  signed [9:0] mul_ln58_7_reg_1371;
wire  signed [10:0] grp_fu_1018_p3;
reg  signed [10:0] add_ln58_3_reg_1376;
wire   [9:0] mul_ln58_9_fu_674_p2;
reg  signed [9:0] mul_ln58_9_reg_1391;
wire   [11:0] add_ln58_5_fu_685_p2;
reg   [11:0] add_ln58_5_reg_1396;
wire   [11:0] add_ln58_6_fu_710_p2;
reg   [11:0] add_ln58_6_reg_1411;
wire   [9:0] mul_ln58_11_fu_719_p2;
reg  signed [9:0] mul_ln58_11_reg_1416;
wire  signed [10:0] grp_fu_1033_p3;
reg  signed [10:0] add_ln58_7_reg_1421;
wire   [9:0] mul_ln58_13_fu_735_p2;
reg  signed [9:0] mul_ln58_13_reg_1436;
wire  signed [10:0] grp_fu_1040_p3;
reg  signed [10:0] add_ln58_8_reg_1441;
wire   [9:0] mul_ln58_15_fu_751_p2;
reg  signed [9:0] mul_ln58_15_reg_1456;
wire  signed [10:0] grp_fu_1047_p3;
reg  signed [10:0] add_ln58_10_reg_1461;
wire   [9:0] mul_ln58_17_fu_767_p2;
reg  signed [9:0] mul_ln58_17_reg_1476;
wire   [11:0] add_ln58_12_fu_778_p2;
reg   [11:0] add_ln58_12_reg_1481;
wire   [11:0] add_ln58_13_fu_803_p2;
reg   [11:0] add_ln58_13_reg_1496;
wire   [9:0] mul_ln58_19_fu_812_p2;
reg  signed [9:0] mul_ln58_19_reg_1501;
wire  signed [10:0] grp_fu_1062_p3;
reg  signed [10:0] add_ln58_15_reg_1506;
wire   [9:0] mul_ln58_21_fu_828_p2;
reg  signed [9:0] mul_ln58_21_reg_1521;
wire   [11:0] add_ln58_17_fu_839_p2;
reg   [11:0] add_ln58_17_reg_1526;
wire   [9:0] mul_ln58_23_fu_856_p2;
reg  signed [9:0] mul_ln58_23_reg_1541;
wire  signed [10:0] grp_fu_1077_p3;
reg  signed [10:0] add_ln58_18_reg_1546;
wire   [9:0] mul_ln58_25_fu_872_p2;
reg  signed [9:0] mul_ln58_25_reg_1561;
wire   [11:0] add_ln58_20_fu_883_p2;
reg   [11:0] add_ln58_20_reg_1566;
wire   [9:0] mul_ln58_27_fu_900_p2;
reg  signed [9:0] mul_ln58_27_reg_1581;
wire  signed [10:0] grp_fu_1092_p3;
reg  signed [10:0] add_ln58_22_reg_1586;
wire   [9:0] mul_ln58_29_fu_916_p2;
reg  signed [9:0] mul_ln58_29_reg_1601;
wire  signed [10:0] grp_fu_1099_p3;
reg  signed [10:0] add_ln58_23_reg_1606;
wire  signed [10:0] grp_fu_1106_p3;
reg  signed [10:0] add_ln58_25_reg_1621;
wire   [11:0] add_ln58_27_fu_937_p2;
reg   [11:0] add_ln58_27_reg_1631;
wire   [11:0] add_ln58_28_fu_955_p2;
reg   [11:0] add_ln58_28_reg_1636;
wire   [11:0] add_ln58_29_fu_964_p2;
reg   [11:0] add_ln58_29_reg_1641;
reg   [3:0] k_fu_154;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_k_2;
wire   [1:0] select_ln13_fu_986_p3;
reg    ap_block_pp0_stage7_01001;
wire  signed [1:0] mul_ln58_fu_601_p1;
wire  signed [1:0] mul_ln58_1_fu_613_p1;
wire  signed [1:0] mul_ln58_3_fu_626_p1;
wire  signed [1:0] mul_ln58_5_fu_642_p1;
wire  signed [1:0] mul_ln58_7_fu_658_p1;
wire  signed [1:0] mul_ln58_9_fu_674_p1;
wire  signed [10:0] grp_fu_1025_p3;
wire  signed [11:0] sext_ln58_97_fu_682_p1;
wire  signed [11:0] sext_ln58_96_fu_679_p1;
wire  signed [11:0] sext_ln58_95_fu_701_p1;
wire  signed [11:0] sext_ln58_94_fu_698_p1;
wire   [11:0] add_ln58_2_fu_704_p2;
wire  signed [1:0] mul_ln58_11_fu_719_p1;
wire  signed [1:0] mul_ln58_13_fu_735_p1;
wire  signed [1:0] mul_ln58_15_fu_751_p1;
wire  signed [1:0] mul_ln58_17_fu_767_p1;
wire  signed [10:0] grp_fu_1054_p3;
wire  signed [11:0] sext_ln58_101_fu_775_p1;
wire  signed [11:0] sext_ln58_100_fu_772_p1;
wire  signed [11:0] sext_ln58_99_fu_794_p1;
wire  signed [11:0] sext_ln58_98_fu_791_p1;
wire   [11:0] add_ln58_9_fu_797_p2;
wire  signed [1:0] mul_ln58_19_fu_812_p1;
wire  signed [1:0] mul_ln58_21_fu_828_p1;
wire  signed [10:0] grp_fu_1069_p3;
wire  signed [11:0] sext_ln58_103_fu_836_p1;
wire  signed [11:0] sext_ln58_102_fu_833_p1;
wire  signed [1:0] mul_ln58_23_fu_856_p1;
wire  signed [1:0] mul_ln58_25_fu_872_p1;
wire  signed [10:0] grp_fu_1084_p3;
wire  signed [11:0] sext_ln58_105_fu_880_p1;
wire  signed [11:0] sext_ln58_104_fu_877_p1;
wire  signed [1:0] mul_ln58_27_fu_900_p1;
wire  signed [1:0] mul_ln58_29_fu_916_p1;
wire  signed [7:0] sext_ln58_92_fu_924_p0;
wire  signed [10:0] grp_fu_1113_p3;
wire  signed [11:0] sext_ln58_109_fu_934_p1;
wire  signed [11:0] sext_ln58_108_fu_931_p1;
wire  signed [11:0] sext_ln58_107_fu_946_p1;
wire  signed [11:0] sext_ln58_106_fu_943_p1;
wire   [11:0] add_ln58_24_fu_949_p2;
wire   [11:0] add_ln58_21_fu_960_p2;
wire   [11:0] add_ln58_14_fu_969_p2;
wire   [11:0] x_fu_973_p2;
wire   [0:0] tmp_fu_978_p3;
wire  signed [1:0] grp_fu_1004_p1;
wire  signed [1:0] grp_fu_1011_p1;
wire  signed [1:0] grp_fu_1018_p1;
wire  signed [1:0] grp_fu_1025_p1;
wire  signed [1:0] grp_fu_1033_p1;
wire  signed [1:0] grp_fu_1040_p1;
wire  signed [1:0] grp_fu_1047_p1;
wire  signed [1:0] grp_fu_1054_p1;
wire  signed [1:0] grp_fu_1062_p1;
wire  signed [1:0] grp_fu_1069_p1;
wire  signed [1:0] grp_fu_1077_p1;
wire  signed [1:0] grp_fu_1084_p1;
wire  signed [1:0] grp_fu_1092_p1;
wire  signed [1:0] grp_fu_1099_p1;
wire  signed [1:0] grp_fu_1106_p1;
wire  signed [1:0] grp_fu_1113_p1;
reg    grp_fu_1004_ce;
reg    grp_fu_1011_ce;
reg    grp_fu_1018_ce;
reg    grp_fu_1025_ce;
reg    grp_fu_1033_ce;
reg    grp_fu_1040_ce;
reg    grp_fu_1047_ce;
reg    grp_fu_1054_ce;
reg    grp_fu_1062_ce;
reg    grp_fu_1069_ce;
reg    grp_fu_1077_ce;
reg    grp_fu_1084_ce;
reg    grp_fu_1092_ce;
reg    grp_fu_1099_ce;
reg    grp_fu_1106_ce;
reg    grp_fu_1113_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [31:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage24_subdone;
reg    ap_block_pp0_stage25_subdone;
reg    ap_block_pp0_stage26_subdone;
reg    ap_block_pp0_stage27_subdone;
reg    ap_block_pp0_stage28_subdone;
reg    ap_block_pp0_stage29_subdone;
reg    ap_block_pp0_stage30_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 32'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 k_fu_154 = 4'd0;
#0 ap_done_reg = 1'b0;
end

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U263(
    .din0(reg_431),
    .din1(mul_ln58_fu_601_p1),
    .dout(mul_ln58_fu_601_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U264(
    .din0(reg_431),
    .din1(mul_ln58_1_fu_613_p1),
    .dout(mul_ln58_1_fu_613_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U265(
    .din0(reg_431),
    .din1(mul_ln58_3_fu_626_p1),
    .dout(mul_ln58_3_fu_626_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U266(
    .din0(reg_431),
    .din1(mul_ln58_5_fu_642_p1),
    .dout(mul_ln58_5_fu_642_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U267(
    .din0(reg_431),
    .din1(mul_ln58_7_fu_658_p1),
    .dout(mul_ln58_7_fu_658_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U268(
    .din0(reg_431),
    .din1(mul_ln58_9_fu_674_p1),
    .dout(mul_ln58_9_fu_674_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U269(
    .din0(reg_431),
    .din1(mul_ln58_11_fu_719_p1),
    .dout(mul_ln58_11_fu_719_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U270(
    .din0(reg_431),
    .din1(mul_ln58_13_fu_735_p1),
    .dout(mul_ln58_13_fu_735_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U271(
    .din0(reg_431),
    .din1(mul_ln58_15_fu_751_p1),
    .dout(mul_ln58_15_fu_751_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U272(
    .din0(reg_431),
    .din1(mul_ln58_17_fu_767_p1),
    .dout(mul_ln58_17_fu_767_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U273(
    .din0(reg_431),
    .din1(mul_ln58_19_fu_812_p1),
    .dout(mul_ln58_19_fu_812_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U274(
    .din0(reg_431),
    .din1(mul_ln58_21_fu_828_p1),
    .dout(mul_ln58_21_fu_828_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U275(
    .din0(reg_431),
    .din1(mul_ln58_23_fu_856_p1),
    .dout(mul_ln58_23_fu_856_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U276(
    .din0(reg_431),
    .din1(mul_ln58_25_fu_872_p1),
    .dout(mul_ln58_25_fu_872_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U277(
    .din0(reg_431),
    .din1(mul_ln58_27_fu_900_p1),
    .dout(mul_ln58_27_fu_900_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U278(
    .din0(reg_431),
    .din1(mul_ln58_29_fu_916_p1),
    .dout(mul_ln58_29_fu_916_p2)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U279(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(grp_fu_1004_p1),
    .din2(mul_ln58_reg_1311),
    .ce(grp_fu_1004_ce),
    .dout(grp_fu_1004_p3)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U280(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(grp_fu_1011_p1),
    .din2(mul_ln58_1_reg_1321),
    .ce(grp_fu_1011_ce),
    .dout(grp_fu_1011_p3)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U281(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(grp_fu_1018_p1),
    .din2(mul_ln58_3_reg_1336),
    .ce(grp_fu_1018_ce),
    .dout(grp_fu_1018_p3)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U282(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(grp_fu_1025_p1),
    .din2(mul_ln58_5_reg_1351),
    .ce(grp_fu_1025_ce),
    .dout(grp_fu_1025_p3)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U283(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(grp_fu_1033_p1),
    .din2(mul_ln58_7_reg_1371),
    .ce(grp_fu_1033_ce),
    .dout(grp_fu_1033_p3)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U284(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(grp_fu_1040_p1),
    .din2(mul_ln58_9_reg_1391),
    .ce(grp_fu_1040_ce),
    .dout(grp_fu_1040_p3)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U285(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(grp_fu_1047_p1),
    .din2(mul_ln58_11_reg_1416),
    .ce(grp_fu_1047_ce),
    .dout(grp_fu_1047_p3)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U286(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(grp_fu_1054_p1),
    .din2(mul_ln58_13_reg_1436),
    .ce(grp_fu_1054_ce),
    .dout(grp_fu_1054_p3)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U287(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(grp_fu_1062_p1),
    .din2(mul_ln58_15_reg_1456),
    .ce(grp_fu_1062_ce),
    .dout(grp_fu_1062_p3)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U288(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(grp_fu_1069_p1),
    .din2(mul_ln58_17_reg_1476),
    .ce(grp_fu_1069_ce),
    .dout(grp_fu_1069_p3)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U289(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(grp_fu_1077_p1),
    .din2(mul_ln58_19_reg_1501),
    .ce(grp_fu_1077_ce),
    .dout(grp_fu_1077_p3)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U290(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(grp_fu_1084_p1),
    .din2(mul_ln58_21_reg_1521),
    .ce(grp_fu_1084_ce),
    .dout(grp_fu_1084_p3)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U291(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(grp_fu_1092_p1),
    .din2(mul_ln58_23_reg_1541),
    .ce(grp_fu_1092_ce),
    .dout(grp_fu_1092_p3)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U292(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(grp_fu_1099_p1),
    .din2(mul_ln58_25_reg_1561),
    .ce(grp_fu_1099_ce),
    .dout(grp_fu_1099_p3)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U293(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_431),
    .din1(grp_fu_1106_p1),
    .din2(mul_ln58_27_reg_1581),
    .ce(grp_fu_1106_ce),
    .dout(grp_fu_1106_p3)
);

train_step_mac_muladd_8s_2s_10s_11_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 11 ))
mac_muladd_8s_2s_10s_11_4_1_U294(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sext_ln58_92_fu_924_p0),
    .din1(grp_fu_1113_p1),
    .din2(mul_ln58_29_reg_1601),
    .ce(grp_fu_1113_ce),
    .dout(grp_fu_1113_p3)
);

train_step_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage7)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1))) begin
        k_fu_154 <= 4'd0;
    end else if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0))) begin
        k_fu_154 <= add_ln54_reg_1296;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln54_reg_1296 <= add_ln54_fu_577_p2;
        icmp_ln54_reg_1292 <= icmp_ln54_fu_571_p2;
        k_2_reg_1288 <= ap_sig_allocacmp_k_2;
        k_2_reg_1288_pp0_iter1_reg <= k_2_reg_1288;
        mul_ln58_29_reg_1601 <= mul_ln58_29_fu_916_p2;
        sext_ln54_cast_reg_1128 <= sext_ln54_cast_fu_435_p1;
        sext_ln58_10_cast_reg_1233 <= sext_ln58_10_cast_fu_519_p1;
        sext_ln58_11_cast_reg_1228 <= sext_ln58_11_cast_fu_515_p1;
        sext_ln58_12_cast_reg_1223 <= sext_ln58_12_cast_fu_511_p1;
        sext_ln58_13_cast_reg_1218 <= sext_ln58_13_cast_fu_507_p1;
        sext_ln58_14_cast_reg_1213 <= sext_ln58_14_cast_fu_503_p1;
        sext_ln58_15_cast_reg_1208 <= sext_ln58_15_cast_fu_499_p1;
        sext_ln58_16_cast_reg_1203 <= sext_ln58_16_cast_fu_495_p1;
        sext_ln58_17_cast_reg_1198 <= sext_ln58_17_cast_fu_491_p1;
        sext_ln58_18_cast_reg_1193 <= sext_ln58_18_cast_fu_487_p1;
        sext_ln58_19_cast_reg_1188 <= sext_ln58_19_cast_fu_483_p1;
        sext_ln58_1_cast_reg_1278 <= sext_ln58_1_cast_fu_555_p1;
        sext_ln58_20_cast_reg_1183 <= sext_ln58_20_cast_fu_479_p1;
        sext_ln58_21_cast_reg_1178 <= sext_ln58_21_cast_fu_475_p1;
        sext_ln58_22_cast_reg_1173 <= sext_ln58_22_cast_fu_471_p1;
        sext_ln58_23_cast_reg_1168 <= sext_ln58_23_cast_fu_467_p1;
        sext_ln58_24_cast_reg_1163 <= sext_ln58_24_cast_fu_463_p1;
        sext_ln58_25_cast_reg_1158 <= sext_ln58_25_cast_fu_459_p1;
        sext_ln58_26_cast_reg_1153 <= sext_ln58_26_cast_fu_455_p1;
        sext_ln58_27_cast_reg_1148 <= sext_ln58_27_cast_fu_451_p1;
        sext_ln58_28_cast_reg_1143 <= sext_ln58_28_cast_fu_447_p1;
        sext_ln58_29_cast_reg_1138 <= sext_ln58_29_cast_fu_443_p1;
        sext_ln58_2_cast_reg_1273 <= sext_ln58_2_cast_fu_551_p1;
        sext_ln58_30_cast_reg_1133 <= sext_ln58_30_cast_fu_439_p1;
        sext_ln58_3_cast_reg_1268 <= sext_ln58_3_cast_fu_547_p1;
        sext_ln58_4_cast_reg_1263 <= sext_ln58_4_cast_fu_543_p1;
        sext_ln58_5_cast_reg_1258 <= sext_ln58_5_cast_fu_539_p1;
        sext_ln58_6_cast_reg_1253 <= sext_ln58_6_cast_fu_535_p1;
        sext_ln58_7_cast_reg_1248 <= sext_ln58_7_cast_fu_531_p1;
        sext_ln58_8_cast_reg_1243 <= sext_ln58_8_cast_fu_527_p1;
        sext_ln58_9_cast_reg_1238 <= sext_ln58_9_cast_fu_523_p1;
        sext_ln58_cast_reg_1283 <= sext_ln58_cast_fu_559_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln58_10_reg_1461 <= grp_fu_1047_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001))) begin
        add_ln58_12_reg_1481 <= add_ln58_12_fu_778_p2;
        mul_ln58_17_reg_1476 <= mul_ln58_17_fu_767_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001))) begin
        add_ln58_13_reg_1496 <= add_ln58_13_fu_803_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln58_15_reg_1506 <= grp_fu_1062_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        add_ln58_17_reg_1526 <= add_ln58_17_fu_839_p2;
        mul_ln58_21_reg_1521 <= mul_ln58_21_fu_828_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln58_18_reg_1546 <= grp_fu_1077_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln58_1_reg_1356 <= grp_fu_1011_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001))) begin
        add_ln58_20_reg_1566 <= add_ln58_20_fu_883_p2;
        mul_ln58_25_reg_1561 <= mul_ln58_25_fu_872_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln58_22_reg_1586 <= grp_fu_1092_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln58_23_reg_1606 <= grp_fu_1099_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln58_25_reg_1621 <= grp_fu_1106_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln58_27_reg_1631 <= add_ln58_27_fu_937_p2;
        mul_ln58_1_reg_1321 <= mul_ln58_1_fu_613_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        add_ln58_28_reg_1636 <= add_ln58_28_fu_955_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        add_ln58_29_reg_1641 <= add_ln58_29_fu_964_p2;
        mul_ln58_3_reg_1336 <= mul_ln58_3_fu_626_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln58_3_reg_1376 <= grp_fu_1018_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        add_ln58_5_reg_1396 <= add_ln58_5_fu_685_p2;
        mul_ln58_9_reg_1391 <= mul_ln58_9_fu_674_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001))) begin
        add_ln58_6_reg_1411 <= add_ln58_6_fu_710_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln58_7_reg_1421 <= grp_fu_1033_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln58_8_reg_1441 <= grp_fu_1040_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln58_reg_1331 <= grp_fu_1004_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        mul_ln58_11_reg_1416 <= mul_ln58_11_fu_719_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001))) begin
        mul_ln58_13_reg_1436 <= mul_ln58_13_fu_735_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001))) begin
        mul_ln58_15_reg_1456 <= mul_ln58_15_fu_751_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001))) begin
        mul_ln58_19_reg_1501 <= mul_ln58_19_fu_812_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001))) begin
        mul_ln58_23_reg_1541 <= mul_ln58_23_fu_856_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001))) begin
        mul_ln58_27_reg_1581 <= mul_ln58_27_fu_900_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        mul_ln58_5_reg_1351 <= mul_ln58_5_fu_642_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        mul_ln58_7_reg_1371 <= mul_ln58_7_fu_658_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul_ln58_reg_1311 <= mul_ln58_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) 
    | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0_reg 
    == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0_reg 
    == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)))) begin
        reg_431 <= m_axi_WEIGHTS_0_RDATA;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0_reg 
    == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 
    == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) 
    & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 
    == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)))) begin
        WEIGHTS_blk_n_R = m_axi_WEIGHTS_0_RVALID;
    end else begin
        WEIGHTS_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage7) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage7_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_subdone) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_k_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_k_2 = k_fu_154;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_1004_ce = 1'b1;
    end else begin
        grp_fu_1004_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)))) begin
        grp_fu_1011_ce = 1'b1;
    end else begin
        grp_fu_1011_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)))) begin
        grp_fu_1018_ce = 1'b1;
    end else begin
        grp_fu_1018_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        grp_fu_1025_ce = 1'b1;
    end else begin
        grp_fu_1025_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)))) begin
        grp_fu_1033_ce = 1'b1;
    end else begin
        grp_fu_1033_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)))) begin
        grp_fu_1040_ce = 1'b1;
    end else begin
        grp_fu_1040_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)))) begin
        grp_fu_1047_ce = 1'b1;
    end else begin
        grp_fu_1047_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)))) begin
        grp_fu_1054_ce = 1'b1;
    end else begin
        grp_fu_1054_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)))) begin
        grp_fu_1062_ce = 1'b1;
    end else begin
        grp_fu_1062_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)))) begin
        grp_fu_1069_ce = 1'b1;
    end else begin
        grp_fu_1069_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)))) begin
        grp_fu_1077_ce = 1'b1;
    end else begin
        grp_fu_1077_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001)))) begin
        grp_fu_1084_ce = 1'b1;
    end else begin
        grp_fu_1084_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001)))) begin
        grp_fu_1092_ce = 1'b1;
    end else begin
        grp_fu_1092_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001)))) begin
        grp_fu_1099_ce = 1'b1;
    end else begin
        grp_fu_1099_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001)))) begin
        grp_fu_1106_ce = 1'b1;
    end else begin
        grp_fu_1106_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        grp_fu_1113_ce = 1'b1;
    end else begin
        grp_fu_1113_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 
    == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == 
    ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) 
    & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0_reg 
    == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln54_reg_1292 == 1'd0)))) begin
        m_axi_WEIGHTS_0_RREADY = 1'b1;
    end else begin
        m_axi_WEIGHTS_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((k_2_reg_1288_pp0_iter1_reg == 4'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        output_0_ap_vld = 1'b1;
    end else begin
        output_0_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_2_reg_1288_pp0_iter1_reg == 4'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        output_1_ap_vld = 1'b1;
    end else begin
        output_1_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_2_reg_1288_pp0_iter1_reg == 4'd2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        output_2_ap_vld = 1'b1;
    end else begin
        output_2_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_2_reg_1288_pp0_iter1_reg == 4'd3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        output_3_ap_vld = 1'b1;
    end else begin
        output_3_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_2_reg_1288_pp0_iter1_reg == 4'd4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        output_4_ap_vld = 1'b1;
    end else begin
        output_4_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_2_reg_1288_pp0_iter1_reg == 4'd5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        output_5_ap_vld = 1'b1;
    end else begin
        output_5_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_2_reg_1288_pp0_iter1_reg == 4'd6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        output_6_ap_vld = 1'b1;
    end else begin
        output_6_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_2_reg_1288_pp0_iter1_reg == 4'd7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        output_7_ap_vld = 1'b1;
    end else begin
        output_7_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((k_2_reg_1288_pp0_iter1_reg == 4'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        output_8_ap_vld = 1'b1;
    end else begin
        output_8_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((~(k_2_reg_1288_pp0_iter1_reg == 4'd0) & ~(k_2_reg_1288_pp0_iter1_reg == 4'd1) & ~(k_2_reg_1288_pp0_iter1_reg == 4'd2) & ~(k_2_reg_1288_pp0_iter1_reg == 4'd3) & ~(k_2_reg_1288_pp0_iter1_reg == 4'd4) & ~(k_2_reg_1288_pp0_iter1_reg == 4'd5) & ~(k_2_reg_1288_pp0_iter1_reg == 4'd6) & ~(k_2_reg_1288_pp0_iter1_reg == 4'd7) & ~(k_2_reg_1288_pp0_iter1_reg == 4'd8) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001))) begin
        output_9_ap_vld = 1'b1;
    end else begin
        output_9_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage7)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln54_fu_577_p2 = (ap_sig_allocacmp_k_2 + 4'd1);

assign add_ln58_12_fu_778_p2 = ($signed(sext_ln58_101_fu_775_p1) + $signed(sext_ln58_100_fu_772_p1));

assign add_ln58_13_fu_803_p2 = (add_ln58_12_reg_1481 + add_ln58_9_fu_797_p2);

assign add_ln58_14_fu_969_p2 = (add_ln58_13_reg_1496 + add_ln58_6_reg_1411);

assign add_ln58_17_fu_839_p2 = ($signed(sext_ln58_103_fu_836_p1) + $signed(sext_ln58_102_fu_833_p1));

assign add_ln58_20_fu_883_p2 = ($signed(sext_ln58_105_fu_880_p1) + $signed(sext_ln58_104_fu_877_p1));

assign add_ln58_21_fu_960_p2 = (add_ln58_20_reg_1566 + add_ln58_17_reg_1526);

assign add_ln58_24_fu_949_p2 = ($signed(sext_ln58_107_fu_946_p1) + $signed(sext_ln58_106_fu_943_p1));

assign add_ln58_27_fu_937_p2 = ($signed(sext_ln58_109_fu_934_p1) + $signed(sext_ln58_108_fu_931_p1));

assign add_ln58_28_fu_955_p2 = (add_ln58_27_reg_1631 + add_ln58_24_fu_949_p2);

assign add_ln58_29_fu_964_p2 = (add_ln58_28_reg_1636 + add_ln58_21_fu_960_p2);

assign add_ln58_2_fu_704_p2 = ($signed(sext_ln58_95_fu_701_p1) + $signed(sext_ln58_94_fu_698_p1));

assign add_ln58_5_fu_685_p2 = ($signed(sext_ln58_97_fu_682_p1) + $signed(sext_ln58_96_fu_679_p1));

assign add_ln58_6_fu_710_p2 = (add_ln58_5_reg_1396 + add_ln58_2_fu_704_p2);

assign add_ln58_9_fu_797_p2 = ($signed(sext_ln58_99_fu_794_p1) + $signed(sext_ln58_98_fu_791_p1));

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state33_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state33_pp0_stage0_iter1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((1'b1 == ap_block_state11_pp0_stage10_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((1'b1 == ap_block_state11_pp0_stage10_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((1'b1 == ap_block_state12_pp0_stage11_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((1'b1 == ap_block_state12_pp0_stage11_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((1'b1 == ap_block_state13_pp0_stage12_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((1'b1 == ap_block_state13_pp0_stage12_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((1'b1 == ap_block_state14_pp0_stage13_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((1'b1 == ap_block_state14_pp0_stage13_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((1'b1 == ap_block_state15_pp0_stage14_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((1'b1 == ap_block_state15_pp0_stage14_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((1'b1 == ap_block_state16_pp0_stage15_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((1'b1 == ap_block_state16_pp0_stage15_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((1'b1 == ap_block_state17_pp0_stage16_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((1'b1 == ap_block_state17_pp0_stage16_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((1'b1 == ap_block_state18_pp0_stage17_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((1'b1 == ap_block_state18_pp0_stage17_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((1'b1 == ap_block_state19_pp0_stage18_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((1'b1 == ap_block_state19_pp0_stage18_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((1'b1 == ap_block_state20_pp0_stage19_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((1'b1 == ap_block_state20_pp0_stage19_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((1'b1 == ap_block_state2_pp0_stage1_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b1 == ap_block_state2_pp0_stage1_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((1'b1 == ap_block_state21_pp0_stage20_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((1'b1 == ap_block_state21_pp0_stage20_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((1'b1 == ap_block_state22_pp0_stage21_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((1'b1 == ap_block_state22_pp0_stage21_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((1'b1 == ap_block_state23_pp0_stage22_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((1'b1 == ap_block_state23_pp0_stage22_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((1'b1 == ap_block_state24_pp0_stage23_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((1'b1 == ap_block_state24_pp0_stage23_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((1'b1 == ap_block_state25_pp0_stage24_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((1'b1 == ap_block_state25_pp0_stage24_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage25_11001 = ((1'b1 == ap_block_state26_pp0_stage25_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage25_subdone = ((1'b1 == ap_block_state26_pp0_stage25_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage26_11001 = ((1'b1 == ap_block_state27_pp0_stage26_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage26_subdone = ((1'b1 == ap_block_state27_pp0_stage26_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage27_11001 = ((1'b1 == ap_block_state28_pp0_stage27_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage27_subdone = ((1'b1 == ap_block_state28_pp0_stage27_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage28_11001 = ((1'b1 == ap_block_state29_pp0_stage28_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage28_subdone = ((1'b1 == ap_block_state29_pp0_stage28_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage29_11001 = ((1'b1 == ap_block_state30_pp0_stage29_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage29_subdone = ((1'b1 == ap_block_state30_pp0_stage29_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((1'b1 == ap_block_state3_pp0_stage2_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b1 == ap_block_state3_pp0_stage2_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage30_11001 = ((1'b1 == ap_block_state31_pp0_stage30_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage30_subdone = ((1'b1 == ap_block_state31_pp0_stage30_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage31_11001 = ((1'b1 == ap_block_state32_pp0_stage31_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage31_subdone = ((1'b1 == ap_block_state32_pp0_stage31_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((1'b1 == ap_block_state4_pp0_stage3_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b1 == ap_block_state4_pp0_stage3_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((1'b1 == ap_block_state5_pp0_stage4_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((1'b1 == ap_block_state5_pp0_stage4_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((1'b1 == ap_block_state6_pp0_stage5_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((1'b1 == ap_block_state6_pp0_stage5_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((1'b1 == ap_block_state7_pp0_stage6_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((1'b1 == ap_block_state7_pp0_stage6_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((1'b1 == ap_block_state8_pp0_stage7_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((1'b1 == ap_block_state8_pp0_stage7_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((1'b1 == ap_block_state8_pp0_stage7_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((1'b1 == ap_block_state9_pp0_stage8_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((1'b1 == ap_block_state9_pp0_stage8_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((1'b1 == ap_block_state10_pp0_stage9_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((1'b1 == ap_block_state10_pp0_stage9_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state17_pp0_stage16_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state18_pp0_stage17_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp0_stage18_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state20_pp0_stage19_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp0_stage20_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage21_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp0_stage22_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage23_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage24_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp0_stage25_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state27_pp0_stage26_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state28_pp0_stage27_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state29_pp0_stage28_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state30_pp0_stage29_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state31_pp0_stage30_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state32_pp0_stage31_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state33_pp0_stage0_iter1 = (m_axi_WEIGHTS_0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((icmp_ln54_reg_1292 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign ap_ready = ap_ready_sig;

assign grp_fu_1004_p1 = sext_ln58_cast_reg_1283;

assign grp_fu_1011_p1 = sext_ln58_3_cast_reg_1268;

assign grp_fu_1018_p1 = sext_ln58_5_cast_reg_1258;

assign grp_fu_1025_p1 = sext_ln58_7_cast_reg_1248;

assign grp_fu_1033_p1 = sext_ln58_9_cast_reg_1238;

assign grp_fu_1040_p1 = sext_ln58_11_cast_reg_1228;

assign grp_fu_1047_p1 = sext_ln58_13_cast_reg_1218;

assign grp_fu_1054_p1 = sext_ln58_15_cast_reg_1208;

assign grp_fu_1062_p1 = sext_ln58_17_cast_reg_1198;

assign grp_fu_1069_p1 = sext_ln58_19_cast_reg_1188;

assign grp_fu_1077_p1 = sext_ln58_21_cast_reg_1178;

assign grp_fu_1084_p1 = sext_ln58_23_cast_reg_1168;

assign grp_fu_1092_p1 = sext_ln58_25_cast_reg_1158;

assign grp_fu_1099_p1 = sext_ln58_27_cast_reg_1148;

assign grp_fu_1106_p1 = sext_ln58_29_cast_reg_1138;

assign grp_fu_1113_p1 = sext_ln54_cast_reg_1128;

assign icmp_ln54_fu_571_p2 = ((ap_sig_allocacmp_k_2 == 4'd10) ? 1'b1 : 1'b0);

assign m_axi_WEIGHTS_0_ARADDR = 64'd0;

assign m_axi_WEIGHTS_0_ARBURST = 2'd0;

assign m_axi_WEIGHTS_0_ARCACHE = 4'd0;

assign m_axi_WEIGHTS_0_ARID = 1'd0;

assign m_axi_WEIGHTS_0_ARLEN = 32'd0;

assign m_axi_WEIGHTS_0_ARLOCK = 2'd0;

assign m_axi_WEIGHTS_0_ARPROT = 3'd0;

assign m_axi_WEIGHTS_0_ARQOS = 4'd0;

assign m_axi_WEIGHTS_0_ARREGION = 4'd0;

assign m_axi_WEIGHTS_0_ARSIZE = 3'd0;

assign m_axi_WEIGHTS_0_ARUSER = 1'd0;

assign m_axi_WEIGHTS_0_ARVALID = 1'b0;

assign m_axi_WEIGHTS_0_AWADDR = 64'd0;

assign m_axi_WEIGHTS_0_AWBURST = 2'd0;

assign m_axi_WEIGHTS_0_AWCACHE = 4'd0;

assign m_axi_WEIGHTS_0_AWID = 1'd0;

assign m_axi_WEIGHTS_0_AWLEN = 32'd0;

assign m_axi_WEIGHTS_0_AWLOCK = 2'd0;

assign m_axi_WEIGHTS_0_AWPROT = 3'd0;

assign m_axi_WEIGHTS_0_AWQOS = 4'd0;

assign m_axi_WEIGHTS_0_AWREGION = 4'd0;

assign m_axi_WEIGHTS_0_AWSIZE = 3'd0;

assign m_axi_WEIGHTS_0_AWUSER = 1'd0;

assign m_axi_WEIGHTS_0_AWVALID = 1'b0;

assign m_axi_WEIGHTS_0_BREADY = 1'b0;

assign m_axi_WEIGHTS_0_WDATA = 8'd0;

assign m_axi_WEIGHTS_0_WID = 1'd0;

assign m_axi_WEIGHTS_0_WLAST = 1'b0;

assign m_axi_WEIGHTS_0_WSTRB = 1'd0;

assign m_axi_WEIGHTS_0_WUSER = 1'd0;

assign m_axi_WEIGHTS_0_WVALID = 1'b0;

assign mul_ln58_11_fu_719_p1 = sext_ln58_12_cast_reg_1223;

assign mul_ln58_13_fu_735_p1 = sext_ln58_14_cast_reg_1213;

assign mul_ln58_15_fu_751_p1 = sext_ln58_16_cast_reg_1203;

assign mul_ln58_17_fu_767_p1 = sext_ln58_18_cast_reg_1193;

assign mul_ln58_19_fu_812_p1 = sext_ln58_20_cast_reg_1183;

assign mul_ln58_1_fu_613_p1 = sext_ln58_2_cast_reg_1273;

assign mul_ln58_21_fu_828_p1 = sext_ln58_22_cast_reg_1173;

assign mul_ln58_23_fu_856_p1 = sext_ln58_24_cast_reg_1163;

assign mul_ln58_25_fu_872_p1 = sext_ln58_26_cast_reg_1153;

assign mul_ln58_27_fu_900_p1 = sext_ln58_28_cast_reg_1143;

assign mul_ln58_29_fu_916_p1 = sext_ln58_30_cast_reg_1133;

assign mul_ln58_3_fu_626_p1 = sext_ln58_4_cast_reg_1263;

assign mul_ln58_5_fu_642_p1 = sext_ln58_6_cast_reg_1253;

assign mul_ln58_7_fu_658_p1 = sext_ln58_8_cast_reg_1243;

assign mul_ln58_9_fu_674_p1 = sext_ln58_10_cast_reg_1233;

assign mul_ln58_fu_601_p1 = sext_ln58_1_cast_reg_1278;

assign output_0 = select_ln13_fu_986_p3;

assign output_1 = select_ln13_fu_986_p3;

assign output_2 = select_ln13_fu_986_p3;

assign output_3 = select_ln13_fu_986_p3;

assign output_4 = select_ln13_fu_986_p3;

assign output_5 = select_ln13_fu_986_p3;

assign output_6 = select_ln13_fu_986_p3;

assign output_7 = select_ln13_fu_986_p3;

assign output_8 = select_ln13_fu_986_p3;

assign output_9 = select_ln13_fu_986_p3;

assign select_ln13_fu_986_p3 = ((tmp_fu_978_p3[0:0] == 1'b1) ? 2'd3 : 2'd1);

assign sext_ln54_cast_fu_435_p1 = $signed(sext_ln54);

assign sext_ln58_100_fu_772_p1 = add_ln58_10_reg_1461;

assign sext_ln58_101_fu_775_p1 = grp_fu_1054_p3;

assign sext_ln58_102_fu_833_p1 = add_ln58_15_reg_1506;

assign sext_ln58_103_fu_836_p1 = grp_fu_1069_p3;

assign sext_ln58_104_fu_877_p1 = add_ln58_18_reg_1546;

assign sext_ln58_105_fu_880_p1 = grp_fu_1084_p3;

assign sext_ln58_106_fu_943_p1 = add_ln58_22_reg_1586;

assign sext_ln58_107_fu_946_p1 = add_ln58_23_reg_1606;

assign sext_ln58_108_fu_931_p1 = add_ln58_25_reg_1621;

assign sext_ln58_109_fu_934_p1 = grp_fu_1113_p3;

assign sext_ln58_10_cast_fu_519_p1 = $signed(sext_ln58_10);

assign sext_ln58_11_cast_fu_515_p1 = $signed(sext_ln58_11);

assign sext_ln58_12_cast_fu_511_p1 = $signed(sext_ln58_12);

assign sext_ln58_13_cast_fu_507_p1 = $signed(sext_ln58_13);

assign sext_ln58_14_cast_fu_503_p1 = $signed(sext_ln58_14);

assign sext_ln58_15_cast_fu_499_p1 = $signed(sext_ln58_15);

assign sext_ln58_16_cast_fu_495_p1 = $signed(sext_ln58_16);

assign sext_ln58_17_cast_fu_491_p1 = $signed(sext_ln58_17);

assign sext_ln58_18_cast_fu_487_p1 = $signed(sext_ln58_18);

assign sext_ln58_19_cast_fu_483_p1 = $signed(sext_ln58_19);

assign sext_ln58_1_cast_fu_555_p1 = $signed(sext_ln58_1);

assign sext_ln58_20_cast_fu_479_p1 = $signed(sext_ln58_20);

assign sext_ln58_21_cast_fu_475_p1 = $signed(sext_ln58_21);

assign sext_ln58_22_cast_fu_471_p1 = $signed(sext_ln58_22);

assign sext_ln58_23_cast_fu_467_p1 = $signed(sext_ln58_23);

assign sext_ln58_24_cast_fu_463_p1 = $signed(sext_ln58_24);

assign sext_ln58_25_cast_fu_459_p1 = $signed(sext_ln58_25);

assign sext_ln58_26_cast_fu_455_p1 = $signed(sext_ln58_26);

assign sext_ln58_27_cast_fu_451_p1 = $signed(sext_ln58_27);

assign sext_ln58_28_cast_fu_447_p1 = $signed(sext_ln58_28);

assign sext_ln58_29_cast_fu_443_p1 = $signed(sext_ln58_29);

assign sext_ln58_2_cast_fu_551_p1 = $signed(sext_ln58_2);

assign sext_ln58_30_cast_fu_439_p1 = $signed(sext_ln58_30);

assign sext_ln58_3_cast_fu_547_p1 = $signed(sext_ln58_3);

assign sext_ln58_4_cast_fu_543_p1 = $signed(sext_ln58_4);

assign sext_ln58_5_cast_fu_539_p1 = $signed(sext_ln58_5);

assign sext_ln58_6_cast_fu_535_p1 = $signed(sext_ln58_6);

assign sext_ln58_7_cast_fu_531_p1 = $signed(sext_ln58_7);

assign sext_ln58_8_cast_fu_527_p1 = $signed(sext_ln58_8);

assign sext_ln58_92_fu_924_p0 = reg_431;

assign sext_ln58_94_fu_698_p1 = add_ln58_reg_1331;

assign sext_ln58_95_fu_701_p1 = add_ln58_1_reg_1356;

assign sext_ln58_96_fu_679_p1 = add_ln58_3_reg_1376;

assign sext_ln58_97_fu_682_p1 = grp_fu_1025_p3;

assign sext_ln58_98_fu_791_p1 = add_ln58_7_reg_1421;

assign sext_ln58_99_fu_794_p1 = add_ln58_8_reg_1441;

assign sext_ln58_9_cast_fu_523_p1 = $signed(sext_ln58_9);

assign sext_ln58_cast_fu_559_p1 = $signed(sext_ln58);

assign tmp_fu_978_p3 = x_fu_973_p2[32'd11];

assign x_fu_973_p2 = (add_ln58_29_reg_1641 + add_ln58_14_fu_969_p2);

endmodule //train_step_forwardOutput_Pipeline_VITIS_LOOP_54_1
