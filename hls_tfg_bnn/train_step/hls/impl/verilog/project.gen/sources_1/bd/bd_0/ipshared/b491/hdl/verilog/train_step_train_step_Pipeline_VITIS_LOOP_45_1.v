// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module train_step_train_step_Pipeline_VITIS_LOOP_45_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_WEIGHTS_0_AWVALID,
        m_axi_WEIGHTS_0_AWREADY,
        m_axi_WEIGHTS_0_AWADDR,
        m_axi_WEIGHTS_0_AWID,
        m_axi_WEIGHTS_0_AWLEN,
        m_axi_WEIGHTS_0_AWSIZE,
        m_axi_WEIGHTS_0_AWBURST,
        m_axi_WEIGHTS_0_AWLOCK,
        m_axi_WEIGHTS_0_AWCACHE,
        m_axi_WEIGHTS_0_AWPROT,
        m_axi_WEIGHTS_0_AWQOS,
        m_axi_WEIGHTS_0_AWREGION,
        m_axi_WEIGHTS_0_AWUSER,
        m_axi_WEIGHTS_0_WVALID,
        m_axi_WEIGHTS_0_WREADY,
        m_axi_WEIGHTS_0_WDATA,
        m_axi_WEIGHTS_0_WSTRB,
        m_axi_WEIGHTS_0_WLAST,
        m_axi_WEIGHTS_0_WID,
        m_axi_WEIGHTS_0_WUSER,
        m_axi_WEIGHTS_0_ARVALID,
        m_axi_WEIGHTS_0_ARREADY,
        m_axi_WEIGHTS_0_ARADDR,
        m_axi_WEIGHTS_0_ARID,
        m_axi_WEIGHTS_0_ARLEN,
        m_axi_WEIGHTS_0_ARSIZE,
        m_axi_WEIGHTS_0_ARBURST,
        m_axi_WEIGHTS_0_ARLOCK,
        m_axi_WEIGHTS_0_ARCACHE,
        m_axi_WEIGHTS_0_ARPROT,
        m_axi_WEIGHTS_0_ARQOS,
        m_axi_WEIGHTS_0_ARREGION,
        m_axi_WEIGHTS_0_ARUSER,
        m_axi_WEIGHTS_0_RVALID,
        m_axi_WEIGHTS_0_RREADY,
        m_axi_WEIGHTS_0_RDATA,
        m_axi_WEIGHTS_0_RLAST,
        m_axi_WEIGHTS_0_RID,
        m_axi_WEIGHTS_0_RFIFONUM,
        m_axi_WEIGHTS_0_RUSER,
        m_axi_WEIGHTS_0_RRESP,
        m_axi_WEIGHTS_0_BVALID,
        m_axi_WEIGHTS_0_BREADY,
        m_axi_WEIGHTS_0_BRESP,
        m_axi_WEIGHTS_0_BID,
        m_axi_WEIGHTS_0_BUSER,
        W2,
        hidden_load_cast,
        hidden_pos_load_cast,
        hidden_pos_load_1_cast,
        hidden_pos_load_2_cast,
        hidden_pos_load_3_cast,
        hidden_pos_load_4_cast,
        hidden_pos_load_5_cast,
        hidden_pos_load_6_cast,
        hidden_pos_load_7_cast,
        hidden_pos_load_8_cast,
        hidden_pos_load_9_cast,
        hidden_pos_load_10_cast,
        hidden_pos_load_11_cast,
        hidden_pos_load_12_cast,
        hidden_pos_load_13_cast,
        hidden_pos_load_14_cast,
        hidden_pos_load_15_cast,
        hidden_pos_load_16_cast,
        hidden_pos_load_17_cast,
        hidden_pos_load_18_cast,
        hidden_pos_load_19_cast,
        hidden_pos_load_20_cast,
        hidden_pos_load_21_cast,
        hidden_pos_load_22_cast,
        hidden_pos_load_23_cast,
        hidden_pos_load_24_cast,
        hidden_pos_load_25_cast,
        hidden_pos_load_26_cast,
        hidden_pos_load_27_cast,
        hidden_pos_load_28_cast,
        hidden_pos_load_29_cast,
        sext_ln45_1,
        out_pos_address0,
        out_pos_ce0,
        out_pos_we0,
        out_pos_d0
);

parameter    ap_ST_fsm_pp0_stage0 = 32'd1;
parameter    ap_ST_fsm_pp0_stage1 = 32'd2;
parameter    ap_ST_fsm_pp0_stage2 = 32'd4;
parameter    ap_ST_fsm_pp0_stage3 = 32'd8;
parameter    ap_ST_fsm_pp0_stage4 = 32'd16;
parameter    ap_ST_fsm_pp0_stage5 = 32'd32;
parameter    ap_ST_fsm_pp0_stage6 = 32'd64;
parameter    ap_ST_fsm_pp0_stage7 = 32'd128;
parameter    ap_ST_fsm_pp0_stage8 = 32'd256;
parameter    ap_ST_fsm_pp0_stage9 = 32'd512;
parameter    ap_ST_fsm_pp0_stage10 = 32'd1024;
parameter    ap_ST_fsm_pp0_stage11 = 32'd2048;
parameter    ap_ST_fsm_pp0_stage12 = 32'd4096;
parameter    ap_ST_fsm_pp0_stage13 = 32'd8192;
parameter    ap_ST_fsm_pp0_stage14 = 32'd16384;
parameter    ap_ST_fsm_pp0_stage15 = 32'd32768;
parameter    ap_ST_fsm_pp0_stage16 = 32'd65536;
parameter    ap_ST_fsm_pp0_stage17 = 32'd131072;
parameter    ap_ST_fsm_pp0_stage18 = 32'd262144;
parameter    ap_ST_fsm_pp0_stage19 = 32'd524288;
parameter    ap_ST_fsm_pp0_stage20 = 32'd1048576;
parameter    ap_ST_fsm_pp0_stage21 = 32'd2097152;
parameter    ap_ST_fsm_pp0_stage22 = 32'd4194304;
parameter    ap_ST_fsm_pp0_stage23 = 32'd8388608;
parameter    ap_ST_fsm_pp0_stage24 = 32'd16777216;
parameter    ap_ST_fsm_pp0_stage25 = 32'd33554432;
parameter    ap_ST_fsm_pp0_stage26 = 32'd67108864;
parameter    ap_ST_fsm_pp0_stage27 = 32'd134217728;
parameter    ap_ST_fsm_pp0_stage28 = 32'd268435456;
parameter    ap_ST_fsm_pp0_stage29 = 32'd536870912;
parameter    ap_ST_fsm_pp0_stage30 = 32'd1073741824;
parameter    ap_ST_fsm_pp0_stage31 = 32'd2147483648;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_WEIGHTS_0_AWVALID;
input   m_axi_WEIGHTS_0_AWREADY;
output  [63:0] m_axi_WEIGHTS_0_AWADDR;
output  [0:0] m_axi_WEIGHTS_0_AWID;
output  [31:0] m_axi_WEIGHTS_0_AWLEN;
output  [2:0] m_axi_WEIGHTS_0_AWSIZE;
output  [1:0] m_axi_WEIGHTS_0_AWBURST;
output  [1:0] m_axi_WEIGHTS_0_AWLOCK;
output  [3:0] m_axi_WEIGHTS_0_AWCACHE;
output  [2:0] m_axi_WEIGHTS_0_AWPROT;
output  [3:0] m_axi_WEIGHTS_0_AWQOS;
output  [3:0] m_axi_WEIGHTS_0_AWREGION;
output  [0:0] m_axi_WEIGHTS_0_AWUSER;
output   m_axi_WEIGHTS_0_WVALID;
input   m_axi_WEIGHTS_0_WREADY;
output  [7:0] m_axi_WEIGHTS_0_WDATA;
output  [0:0] m_axi_WEIGHTS_0_WSTRB;
output   m_axi_WEIGHTS_0_WLAST;
output  [0:0] m_axi_WEIGHTS_0_WID;
output  [0:0] m_axi_WEIGHTS_0_WUSER;
output   m_axi_WEIGHTS_0_ARVALID;
input   m_axi_WEIGHTS_0_ARREADY;
output  [63:0] m_axi_WEIGHTS_0_ARADDR;
output  [0:0] m_axi_WEIGHTS_0_ARID;
output  [31:0] m_axi_WEIGHTS_0_ARLEN;
output  [2:0] m_axi_WEIGHTS_0_ARSIZE;
output  [1:0] m_axi_WEIGHTS_0_ARBURST;
output  [1:0] m_axi_WEIGHTS_0_ARLOCK;
output  [3:0] m_axi_WEIGHTS_0_ARCACHE;
output  [2:0] m_axi_WEIGHTS_0_ARPROT;
output  [3:0] m_axi_WEIGHTS_0_ARQOS;
output  [3:0] m_axi_WEIGHTS_0_ARREGION;
output  [0:0] m_axi_WEIGHTS_0_ARUSER;
input   m_axi_WEIGHTS_0_RVALID;
output   m_axi_WEIGHTS_0_RREADY;
input  [7:0] m_axi_WEIGHTS_0_RDATA;
input   m_axi_WEIGHTS_0_RLAST;
input  [0:0] m_axi_WEIGHTS_0_RID;
input  [10:0] m_axi_WEIGHTS_0_RFIFONUM;
input  [0:0] m_axi_WEIGHTS_0_RUSER;
input  [1:0] m_axi_WEIGHTS_0_RRESP;
input   m_axi_WEIGHTS_0_BVALID;
output   m_axi_WEIGHTS_0_BREADY;
input  [1:0] m_axi_WEIGHTS_0_BRESP;
input  [0:0] m_axi_WEIGHTS_0_BID;
input  [0:0] m_axi_WEIGHTS_0_BUSER;
input  [63:0] W2;
input  [1:0] hidden_load_cast;
input  [1:0] hidden_pos_load_cast;
input  [1:0] hidden_pos_load_1_cast;
input  [1:0] hidden_pos_load_2_cast;
input  [1:0] hidden_pos_load_3_cast;
input  [1:0] hidden_pos_load_4_cast;
input  [1:0] hidden_pos_load_5_cast;
input  [1:0] hidden_pos_load_6_cast;
input  [1:0] hidden_pos_load_7_cast;
input  [1:0] hidden_pos_load_8_cast;
input  [1:0] hidden_pos_load_9_cast;
input  [1:0] hidden_pos_load_10_cast;
input  [1:0] hidden_pos_load_11_cast;
input  [1:0] hidden_pos_load_12_cast;
input  [1:0] hidden_pos_load_13_cast;
input  [1:0] hidden_pos_load_14_cast;
input  [1:0] hidden_pos_load_15_cast;
input  [1:0] hidden_pos_load_16_cast;
input  [1:0] hidden_pos_load_17_cast;
input  [1:0] hidden_pos_load_18_cast;
input  [1:0] hidden_pos_load_19_cast;
input  [1:0] hidden_pos_load_20_cast;
input  [1:0] hidden_pos_load_21_cast;
input  [1:0] hidden_pos_load_22_cast;
input  [1:0] hidden_pos_load_23_cast;
input  [1:0] hidden_pos_load_24_cast;
input  [1:0] hidden_pos_load_25_cast;
input  [1:0] hidden_pos_load_26_cast;
input  [1:0] hidden_pos_load_27_cast;
input  [1:0] hidden_pos_load_28_cast;
input  [1:0] hidden_pos_load_29_cast;
input  [1:0] sext_ln45_1;
output  [3:0] out_pos_address0;
output   out_pos_ce0;
output   out_pos_we0;
output  [1:0] out_pos_d0;

reg ap_idle;
reg m_axi_WEIGHTS_0_RREADY;

(* fsm_encoding = "none" *) reg   [31:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage6;
reg   [0:0] icmp_ln45_reg_1173;
reg    ap_block_state7_pp0_stage6_iter0;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage6_subdone;
reg    ap_condition_exit_pp0_iter0_stage6;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire    ap_CS_fsm_pp0_stage31;
reg    ap_block_state32_pp0_stage31_iter0;
reg    ap_block_pp0_stage31_subdone;
reg    WEIGHTS_blk_n_R;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_pp0_stage1;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage16;
wire    ap_block_pp0_stage16;
wire    ap_CS_fsm_pp0_stage17;
wire    ap_block_pp0_stage17;
wire    ap_CS_fsm_pp0_stage18;
wire    ap_block_pp0_stage18;
wire    ap_CS_fsm_pp0_stage19;
wire    ap_block_pp0_stage19;
wire    ap_CS_fsm_pp0_stage20;
wire    ap_block_pp0_stage20;
wire    ap_CS_fsm_pp0_stage21;
wire    ap_block_pp0_stage21;
wire    ap_CS_fsm_pp0_stage22;
wire    ap_block_pp0_stage22;
wire    ap_CS_fsm_pp0_stage23;
wire    ap_block_pp0_stage23;
wire    ap_CS_fsm_pp0_stage24;
wire    ap_block_pp0_stage24;
wire    ap_CS_fsm_pp0_stage25;
wire    ap_block_pp0_stage25;
wire    ap_CS_fsm_pp0_stage26;
wire    ap_block_pp0_stage26;
wire    ap_CS_fsm_pp0_stage27;
wire    ap_block_pp0_stage27;
wire    ap_CS_fsm_pp0_stage28;
wire    ap_block_pp0_stage28;
wire    ap_CS_fsm_pp0_stage29;
wire    ap_block_pp0_stage29;
wire    ap_CS_fsm_pp0_stage30;
wire    ap_block_pp0_stage30;
wire    ap_block_pp0_stage31;
wire    ap_block_pp0_stage0;
reg  signed [7:0] reg_344;
reg    ap_block_state2_pp0_stage1_iter0;
reg    ap_block_pp0_stage1_11001;
reg    ap_block_state3_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_state4_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_state5_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_state6_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_state8_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_11001;
reg    ap_block_state9_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_state10_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_state11_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_state12_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_state13_pp0_stage12_iter0;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_state14_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_state15_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_state16_pp0_stage15_iter0;
reg    ap_block_pp0_stage15_11001;
reg    ap_block_state17_pp0_stage16_iter0;
reg    ap_block_pp0_stage16_11001;
reg    ap_block_state18_pp0_stage17_iter0;
reg    ap_block_pp0_stage17_11001;
reg    ap_block_state19_pp0_stage18_iter0;
reg    ap_block_pp0_stage18_11001;
reg    ap_block_state20_pp0_stage19_iter0;
reg    ap_block_pp0_stage19_11001;
reg    ap_block_state21_pp0_stage20_iter0;
reg    ap_block_pp0_stage20_11001;
reg    ap_block_state22_pp0_stage21_iter0;
reg    ap_block_pp0_stage21_11001;
reg    ap_block_state23_pp0_stage22_iter0;
reg    ap_block_pp0_stage22_11001;
reg    ap_block_state24_pp0_stage23_iter0;
reg    ap_block_pp0_stage23_11001;
reg    ap_block_state25_pp0_stage24_iter0;
reg    ap_block_pp0_stage24_11001;
reg    ap_block_state26_pp0_stage25_iter0;
reg    ap_block_pp0_stage25_11001;
reg    ap_block_state27_pp0_stage26_iter0;
reg    ap_block_pp0_stage26_11001;
reg    ap_block_state28_pp0_stage27_iter0;
reg    ap_block_pp0_stage27_11001;
reg    ap_block_state29_pp0_stage28_iter0;
reg    ap_block_pp0_stage28_11001;
reg    ap_block_state30_pp0_stage29_iter0;
reg    ap_block_pp0_stage29_11001;
reg    ap_block_state31_pp0_stage30_iter0;
reg    ap_block_pp0_stage30_11001;
reg    ap_block_pp0_stage31_11001;
reg    ap_block_state33_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire  signed [9:0] sext_ln45_1_cast_fu_348_p1;
reg  signed [9:0] sext_ln45_1_cast_reg_1008;
wire  signed [9:0] hidden_pos_load_29_cast_cast_fu_352_p1;
reg  signed [9:0] hidden_pos_load_29_cast_cast_reg_1013;
wire  signed [9:0] hidden_pos_load_28_cast_cast_fu_356_p1;
reg  signed [9:0] hidden_pos_load_28_cast_cast_reg_1018;
wire  signed [9:0] hidden_pos_load_27_cast_cast_fu_360_p1;
reg  signed [9:0] hidden_pos_load_27_cast_cast_reg_1023;
wire  signed [9:0] hidden_pos_load_26_cast_cast_fu_364_p1;
reg  signed [9:0] hidden_pos_load_26_cast_cast_reg_1028;
wire  signed [9:0] hidden_pos_load_25_cast_cast_fu_368_p1;
reg  signed [9:0] hidden_pos_load_25_cast_cast_reg_1033;
wire  signed [9:0] hidden_pos_load_24_cast_cast_fu_372_p1;
reg  signed [9:0] hidden_pos_load_24_cast_cast_reg_1038;
wire  signed [9:0] hidden_pos_load_23_cast_cast_fu_376_p1;
reg  signed [9:0] hidden_pos_load_23_cast_cast_reg_1043;
wire  signed [9:0] hidden_pos_load_22_cast_cast_fu_380_p1;
reg  signed [9:0] hidden_pos_load_22_cast_cast_reg_1048;
wire  signed [9:0] hidden_pos_load_21_cast_cast_fu_384_p1;
reg  signed [9:0] hidden_pos_load_21_cast_cast_reg_1053;
wire  signed [9:0] hidden_pos_load_20_cast_cast_fu_388_p1;
reg  signed [9:0] hidden_pos_load_20_cast_cast_reg_1058;
wire  signed [9:0] hidden_pos_load_19_cast_cast_fu_392_p1;
reg  signed [9:0] hidden_pos_load_19_cast_cast_reg_1063;
wire  signed [9:0] hidden_pos_load_18_cast_cast_fu_396_p1;
reg  signed [9:0] hidden_pos_load_18_cast_cast_reg_1068;
wire  signed [9:0] hidden_pos_load_17_cast_cast_fu_400_p1;
reg  signed [9:0] hidden_pos_load_17_cast_cast_reg_1073;
wire  signed [9:0] hidden_pos_load_16_cast_cast_fu_404_p1;
reg  signed [9:0] hidden_pos_load_16_cast_cast_reg_1078;
wire  signed [9:0] hidden_pos_load_15_cast_cast_fu_408_p1;
reg  signed [9:0] hidden_pos_load_15_cast_cast_reg_1083;
wire  signed [9:0] hidden_pos_load_14_cast_cast_fu_412_p1;
reg  signed [9:0] hidden_pos_load_14_cast_cast_reg_1088;
wire  signed [9:0] hidden_pos_load_13_cast_cast_fu_416_p1;
reg  signed [9:0] hidden_pos_load_13_cast_cast_reg_1093;
wire  signed [9:0] hidden_pos_load_12_cast_cast_fu_420_p1;
reg  signed [9:0] hidden_pos_load_12_cast_cast_reg_1098;
wire  signed [9:0] hidden_pos_load_11_cast_cast_fu_424_p1;
reg  signed [9:0] hidden_pos_load_11_cast_cast_reg_1103;
wire  signed [9:0] hidden_pos_load_10_cast_cast_fu_428_p1;
reg  signed [9:0] hidden_pos_load_10_cast_cast_reg_1108;
wire  signed [9:0] hidden_pos_load_9_cast_cast_fu_432_p1;
reg  signed [9:0] hidden_pos_load_9_cast_cast_reg_1113;
wire  signed [9:0] hidden_pos_load_8_cast_cast_fu_436_p1;
reg  signed [9:0] hidden_pos_load_8_cast_cast_reg_1118;
wire  signed [9:0] hidden_pos_load_7_cast_cast_fu_440_p1;
reg  signed [9:0] hidden_pos_load_7_cast_cast_reg_1123;
wire  signed [9:0] hidden_pos_load_6_cast_cast_fu_444_p1;
reg  signed [9:0] hidden_pos_load_6_cast_cast_reg_1128;
wire  signed [9:0] hidden_pos_load_5_cast_cast_fu_448_p1;
reg  signed [9:0] hidden_pos_load_5_cast_cast_reg_1133;
wire  signed [9:0] hidden_pos_load_4_cast_cast_fu_452_p1;
reg  signed [9:0] hidden_pos_load_4_cast_cast_reg_1138;
wire  signed [9:0] hidden_pos_load_3_cast_cast_fu_456_p1;
reg  signed [9:0] hidden_pos_load_3_cast_cast_reg_1143;
wire  signed [9:0] hidden_pos_load_2_cast_cast_fu_460_p1;
reg  signed [9:0] hidden_pos_load_2_cast_cast_reg_1148;
wire  signed [9:0] hidden_pos_load_1_cast_cast_fu_464_p1;
reg  signed [9:0] hidden_pos_load_1_cast_cast_reg_1153;
wire  signed [9:0] hidden_pos_load_cast_cast_fu_468_p1;
reg  signed [9:0] hidden_pos_load_cast_cast_reg_1158;
wire  signed [9:0] hidden_load_cast_cast_fu_472_p1;
reg  signed [9:0] hidden_load_cast_cast_reg_1163;
reg   [3:0] k_2_reg_1168;
reg   [3:0] k_2_reg_1168_pp0_iter1_reg;
wire   [0:0] icmp_ln45_fu_484_p2;
wire   [9:0] mul_ln48_fu_515_p2;
reg  signed [9:0] mul_ln48_reg_1187;
wire   [9:0] mul_ln48_1_fu_524_p2;
reg  signed [9:0] mul_ln48_1_reg_1192;
wire  signed [9:0] grp_fu_897_p3;
reg  signed [9:0] add_ln48_1_reg_1202;
wire   [9:0] mul_ln48_3_fu_537_p2;
reg  signed [9:0] mul_ln48_3_reg_1207;
wire   [9:0] mul_ln48_5_fu_550_p2;
reg  signed [9:0] mul_ln48_5_reg_1217;
wire   [10:0] add_ln48_3_fu_561_p2;
reg   [10:0] add_ln48_3_reg_1222;
wire   [9:0] mul_ln48_7_fu_575_p2;
reg  signed [9:0] mul_ln48_7_reg_1232;
wire  signed [9:0] grp_fu_910_p3;
reg  signed [9:0] add_ln48_4_reg_1237;
wire   [9:0] mul_ln48_9_fu_588_p2;
reg  signed [9:0] mul_ln48_9_reg_1247;
wire   [11:0] add_ln48_7_fu_612_p2;
reg   [11:0] add_ln48_7_reg_1252;
wire   [9:0] mul_ln48_11_fu_626_p2;
reg  signed [9:0] mul_ln48_11_reg_1262;
wire  signed [9:0] grp_fu_923_p3;
reg  signed [9:0] add_ln48_8_reg_1267;
wire   [9:0] mul_ln48_13_fu_639_p2;
reg  signed [9:0] mul_ln48_13_reg_1277;
wire   [10:0] add_ln48_10_fu_650_p2;
reg   [10:0] add_ln48_10_reg_1282;
wire   [9:0] mul_ln48_15_fu_664_p2;
reg  signed [9:0] mul_ln48_15_reg_1292;
wire  signed [9:0] grp_fu_936_p3;
reg  signed [9:0] add_ln48_11_reg_1297;
wire   [9:0] mul_ln48_17_fu_677_p2;
reg  signed [9:0] mul_ln48_17_reg_1307;
wire   [11:0] add_ln48_14_fu_701_p2;
reg   [11:0] add_ln48_14_reg_1312;
wire   [9:0] mul_ln48_19_fu_715_p2;
reg  signed [9:0] mul_ln48_19_reg_1322;
wire  signed [9:0] grp_fu_949_p3;
reg  signed [9:0] add_ln48_16_reg_1327;
wire   [9:0] mul_ln48_21_fu_728_p2;
reg  signed [9:0] mul_ln48_21_reg_1337;
wire   [10:0] add_ln48_18_fu_739_p2;
reg   [10:0] add_ln48_18_reg_1342;
wire   [9:0] mul_ln48_23_fu_753_p2;
reg  signed [9:0] mul_ln48_23_reg_1352;
wire  signed [9:0] grp_fu_962_p3;
reg  signed [9:0] add_ln48_19_reg_1357;
wire   [9:0] mul_ln48_25_fu_766_p2;
reg  signed [9:0] mul_ln48_25_reg_1367;
wire   [10:0] add_ln48_21_fu_777_p2;
reg   [10:0] add_ln48_21_reg_1372;
wire   [9:0] mul_ln48_27_fu_791_p2;
reg  signed [9:0] mul_ln48_27_reg_1382;
wire  signed [9:0] grp_fu_975_p3;
reg  signed [9:0] add_ln48_23_reg_1387;
wire   [9:0] mul_ln48_29_fu_804_p2;
reg  signed [9:0] mul_ln48_29_reg_1397;
wire   [10:0] add_ln48_25_fu_815_p2;
reg   [10:0] add_ln48_25_reg_1402;
wire  signed [9:0] grp_fu_988_p3;
reg  signed [9:0] add_ln48_26_reg_1412;
wire   [11:0] add_ln48_29_fu_844_p2;
reg   [11:0] add_ln48_29_reg_1417;
wire   [11:0] add_ln48_30_fu_862_p2;
reg   [11:0] add_ln48_30_reg_1422;
wire   [63:0] zext_ln45_fu_867_p1;
reg   [3:0] k_fu_124;
wire   [3:0] add_ln45_fu_490_p2;
wire    ap_loop_init;
reg   [3:0] ap_sig_allocacmp_k_2;
reg    out_pos_we0_local;
wire   [1:0] select_ln7_fu_888_p3;
reg    out_pos_ce0_local;
wire  signed [1:0] mul_ln48_fu_515_p1;
wire  signed [1:0] mul_ln48_1_fu_524_p1;
wire  signed [1:0] mul_ln48_3_fu_537_p1;
wire  signed [1:0] mul_ln48_5_fu_550_p1;
wire  signed [9:0] grp_fu_903_p3;
wire  signed [10:0] sext_ln48_33_fu_558_p1;
wire  signed [10:0] sext_ln48_32_fu_555_p1;
wire  signed [1:0] mul_ln48_7_fu_575_p1;
wire  signed [1:0] mul_ln48_9_fu_588_p1;
wire  signed [9:0] grp_fu_916_p3;
wire  signed [10:0] sext_ln48_36_fu_599_p1;
wire  signed [10:0] sext_ln48_35_fu_596_p1;
wire   [10:0] add_ln48_6_fu_602_p2;
wire  signed [11:0] sext_ln48_37_fu_608_p1;
wire  signed [11:0] sext_ln48_34_fu_593_p1;
wire  signed [1:0] mul_ln48_11_fu_626_p1;
wire  signed [1:0] mul_ln48_13_fu_639_p1;
wire  signed [9:0] grp_fu_929_p3;
wire  signed [10:0] sext_ln48_39_fu_647_p1;
wire  signed [10:0] sext_ln48_38_fu_644_p1;
wire  signed [1:0] mul_ln48_15_fu_664_p1;
wire  signed [1:0] mul_ln48_17_fu_677_p1;
wire  signed [9:0] grp_fu_942_p3;
wire  signed [10:0] sext_ln48_42_fu_688_p1;
wire  signed [10:0] sext_ln48_41_fu_685_p1;
wire   [10:0] add_ln48_13_fu_691_p2;
wire  signed [11:0] sext_ln48_43_fu_697_p1;
wire  signed [11:0] sext_ln48_40_fu_682_p1;
wire  signed [1:0] mul_ln48_19_fu_715_p1;
wire  signed [1:0] mul_ln48_21_fu_728_p1;
wire  signed [9:0] grp_fu_955_p3;
wire  signed [10:0] sext_ln48_45_fu_736_p1;
wire  signed [10:0] sext_ln48_44_fu_733_p1;
wire  signed [1:0] mul_ln48_23_fu_753_p1;
wire  signed [1:0] mul_ln48_25_fu_766_p1;
wire  signed [9:0] grp_fu_968_p3;
wire  signed [10:0] sext_ln48_48_fu_774_p1;
wire  signed [10:0] sext_ln48_47_fu_771_p1;
wire  signed [1:0] mul_ln48_27_fu_791_p1;
wire  signed [1:0] mul_ln48_29_fu_804_p1;
wire  signed [9:0] grp_fu_981_p3;
wire  signed [10:0] sext_ln48_51_fu_812_p1;
wire  signed [10:0] sext_ln48_50_fu_809_p1;
wire  signed [7:0] sext_ln48_31_fu_821_p0;
wire  signed [9:0] grp_fu_994_p3;
wire  signed [10:0] sext_ln48_54_fu_831_p1;
wire  signed [10:0] sext_ln48_53_fu_828_p1;
wire   [10:0] add_ln48_28_fu_834_p2;
wire  signed [11:0] sext_ln48_55_fu_840_p1;
wire  signed [11:0] sext_ln48_52_fu_825_p1;
wire  signed [11:0] sext_ln48_49_fu_853_p1;
wire  signed [11:0] sext_ln48_46_fu_850_p1;
wire   [11:0] add_ln48_22_fu_856_p2;
wire   [11:0] add_ln48_15_fu_871_p2;
wire   [11:0] add_ln48_fu_875_p2;
wire   [0:0] tmp_fu_880_p3;
wire  signed [1:0] grp_fu_897_p1;
wire  signed [1:0] grp_fu_903_p1;
wire  signed [1:0] grp_fu_910_p1;
wire  signed [1:0] grp_fu_916_p1;
wire  signed [1:0] grp_fu_923_p1;
wire  signed [1:0] grp_fu_929_p1;
wire  signed [1:0] grp_fu_936_p1;
wire  signed [1:0] grp_fu_942_p1;
wire  signed [1:0] grp_fu_949_p1;
wire  signed [1:0] grp_fu_955_p1;
wire  signed [1:0] grp_fu_962_p1;
wire  signed [1:0] grp_fu_968_p1;
wire  signed [1:0] grp_fu_975_p1;
wire  signed [1:0] grp_fu_981_p1;
wire  signed [1:0] grp_fu_988_p1;
wire  signed [1:0] grp_fu_994_p1;
reg    grp_fu_897_ce;
reg    grp_fu_903_ce;
reg    grp_fu_910_ce;
reg    grp_fu_916_ce;
reg    grp_fu_923_ce;
reg    grp_fu_929_ce;
reg    grp_fu_936_ce;
reg    grp_fu_942_ce;
reg    grp_fu_949_ce;
reg    grp_fu_955_ce;
reg    grp_fu_962_ce;
reg    grp_fu_968_ce;
reg    grp_fu_975_ce;
reg    grp_fu_981_ce;
reg    grp_fu_988_ce;
reg    grp_fu_994_ce;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [31:0] ap_NS_fsm;
reg    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to1;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_block_pp0_stage15_subdone;
reg    ap_block_pp0_stage16_subdone;
reg    ap_block_pp0_stage17_subdone;
reg    ap_block_pp0_stage18_subdone;
reg    ap_block_pp0_stage19_subdone;
reg    ap_block_pp0_stage20_subdone;
reg    ap_block_pp0_stage21_subdone;
reg    ap_block_pp0_stage22_subdone;
reg    ap_block_pp0_stage23_subdone;
reg    ap_block_pp0_stage24_subdone;
reg    ap_block_pp0_stage25_subdone;
reg    ap_block_pp0_stage26_subdone;
reg    ap_block_pp0_stage27_subdone;
reg    ap_block_pp0_stage28_subdone;
reg    ap_block_pp0_stage29_subdone;
reg    ap_block_pp0_stage30_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 32'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 k_fu_124 = 4'd0;
#0 ap_done_reg = 1'b0;
end

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U138(
    .din0(reg_344),
    .din1(mul_ln48_fu_515_p1),
    .dout(mul_ln48_fu_515_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U139(
    .din0(reg_344),
    .din1(mul_ln48_1_fu_524_p1),
    .dout(mul_ln48_1_fu_524_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U140(
    .din0(reg_344),
    .din1(mul_ln48_3_fu_537_p1),
    .dout(mul_ln48_3_fu_537_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U141(
    .din0(reg_344),
    .din1(mul_ln48_5_fu_550_p1),
    .dout(mul_ln48_5_fu_550_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U142(
    .din0(reg_344),
    .din1(mul_ln48_7_fu_575_p1),
    .dout(mul_ln48_7_fu_575_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U143(
    .din0(reg_344),
    .din1(mul_ln48_9_fu_588_p1),
    .dout(mul_ln48_9_fu_588_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U144(
    .din0(reg_344),
    .din1(mul_ln48_11_fu_626_p1),
    .dout(mul_ln48_11_fu_626_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U145(
    .din0(reg_344),
    .din1(mul_ln48_13_fu_639_p1),
    .dout(mul_ln48_13_fu_639_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U146(
    .din0(reg_344),
    .din1(mul_ln48_15_fu_664_p1),
    .dout(mul_ln48_15_fu_664_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U147(
    .din0(reg_344),
    .din1(mul_ln48_17_fu_677_p1),
    .dout(mul_ln48_17_fu_677_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U148(
    .din0(reg_344),
    .din1(mul_ln48_19_fu_715_p1),
    .dout(mul_ln48_19_fu_715_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U149(
    .din0(reg_344),
    .din1(mul_ln48_21_fu_728_p1),
    .dout(mul_ln48_21_fu_728_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U150(
    .din0(reg_344),
    .din1(mul_ln48_23_fu_753_p1),
    .dout(mul_ln48_23_fu_753_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U151(
    .din0(reg_344),
    .din1(mul_ln48_25_fu_766_p1),
    .dout(mul_ln48_25_fu_766_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U152(
    .din0(reg_344),
    .din1(mul_ln48_27_fu_791_p1),
    .dout(mul_ln48_27_fu_791_p2)
);

train_step_mul_8s_2s_10_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .dout_WIDTH( 10 ))
mul_8s_2s_10_1_1_U153(
    .din0(reg_344),
    .din1(mul_ln48_29_fu_804_p1),
    .dout(mul_ln48_29_fu_804_p2)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U154(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(grp_fu_897_p1),
    .din2(mul_ln48_reg_1187),
    .ce(grp_fu_897_ce),
    .dout(grp_fu_897_p3)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U155(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(grp_fu_903_p1),
    .din2(mul_ln48_1_reg_1192),
    .ce(grp_fu_903_ce),
    .dout(grp_fu_903_p3)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U156(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(grp_fu_910_p1),
    .din2(mul_ln48_3_reg_1207),
    .ce(grp_fu_910_ce),
    .dout(grp_fu_910_p3)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U157(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(grp_fu_916_p1),
    .din2(mul_ln48_5_reg_1217),
    .ce(grp_fu_916_ce),
    .dout(grp_fu_916_p3)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U158(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(grp_fu_923_p1),
    .din2(mul_ln48_7_reg_1232),
    .ce(grp_fu_923_ce),
    .dout(grp_fu_923_p3)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U159(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(grp_fu_929_p1),
    .din2(mul_ln48_9_reg_1247),
    .ce(grp_fu_929_ce),
    .dout(grp_fu_929_p3)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U160(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(grp_fu_936_p1),
    .din2(mul_ln48_11_reg_1262),
    .ce(grp_fu_936_ce),
    .dout(grp_fu_936_p3)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U161(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(grp_fu_942_p1),
    .din2(mul_ln48_13_reg_1277),
    .ce(grp_fu_942_ce),
    .dout(grp_fu_942_p3)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U162(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(grp_fu_949_p1),
    .din2(mul_ln48_15_reg_1292),
    .ce(grp_fu_949_ce),
    .dout(grp_fu_949_p3)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U163(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(grp_fu_955_p1),
    .din2(mul_ln48_17_reg_1307),
    .ce(grp_fu_955_ce),
    .dout(grp_fu_955_p3)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U164(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(grp_fu_962_p1),
    .din2(mul_ln48_19_reg_1322),
    .ce(grp_fu_962_ce),
    .dout(grp_fu_962_p3)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U165(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(grp_fu_968_p1),
    .din2(mul_ln48_21_reg_1337),
    .ce(grp_fu_968_ce),
    .dout(grp_fu_968_p3)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U166(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(grp_fu_975_p1),
    .din2(mul_ln48_23_reg_1352),
    .ce(grp_fu_975_ce),
    .dout(grp_fu_975_p3)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U167(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(grp_fu_981_p1),
    .din2(mul_ln48_25_reg_1367),
    .ce(grp_fu_981_ce),
    .dout(grp_fu_981_p3)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U168(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_344),
    .din1(grp_fu_988_p1),
    .din2(mul_ln48_27_reg_1382),
    .ce(grp_fu_988_ce),
    .dout(grp_fu_988_p3)
);

train_step_mac_muladd_8s_2s_10s_10_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 2 ),
    .din2_WIDTH( 10 ),
    .dout_WIDTH( 10 ))
mac_muladd_8s_2s_10s_10_4_1_U169(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(sext_ln48_31_fu_821_p0),
    .din1(grp_fu_994_p1),
    .din2(mul_ln48_29_reg_1397),
    .ce(grp_fu_994_ce),
    .dout(grp_fu_994_p3)
);

train_step_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage6),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter0_stage6)) begin
            ap_enable_reg_pp0_iter0_reg <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        if (((icmp_ln45_fu_484_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            k_fu_124 <= add_ln45_fu_490_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            k_fu_124 <= 4'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001))) begin
        add_ln48_10_reg_1282 <= add_ln48_10_fu_650_p2;
        mul_ln48_13_reg_1277 <= mul_ln48_13_fu_639_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln48_11_reg_1297 <= grp_fu_936_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001))) begin
        add_ln48_14_reg_1312 <= add_ln48_14_fu_701_p2;
        mul_ln48_17_reg_1307 <= mul_ln48_17_fu_677_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln48_16_reg_1327 <= grp_fu_949_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001))) begin
        add_ln48_18_reg_1342 <= add_ln48_18_fu_739_p2;
        mul_ln48_21_reg_1337 <= mul_ln48_21_fu_728_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln48_19_reg_1357 <= grp_fu_962_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln48_1_reg_1202 <= grp_fu_897_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001))) begin
        add_ln48_21_reg_1372 <= add_ln48_21_fu_777_p2;
        mul_ln48_25_reg_1367 <= mul_ln48_25_fu_766_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln48_23_reg_1387 <= grp_fu_975_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        add_ln48_25_reg_1402 <= add_ln48_25_fu_815_p2;
        hidden_load_cast_cast_reg_1163 <= hidden_load_cast_cast_fu_472_p1;
        hidden_pos_load_10_cast_cast_reg_1108 <= hidden_pos_load_10_cast_cast_fu_428_p1;
        hidden_pos_load_11_cast_cast_reg_1103 <= hidden_pos_load_11_cast_cast_fu_424_p1;
        hidden_pos_load_12_cast_cast_reg_1098 <= hidden_pos_load_12_cast_cast_fu_420_p1;
        hidden_pos_load_13_cast_cast_reg_1093 <= hidden_pos_load_13_cast_cast_fu_416_p1;
        hidden_pos_load_14_cast_cast_reg_1088 <= hidden_pos_load_14_cast_cast_fu_412_p1;
        hidden_pos_load_15_cast_cast_reg_1083 <= hidden_pos_load_15_cast_cast_fu_408_p1;
        hidden_pos_load_16_cast_cast_reg_1078 <= hidden_pos_load_16_cast_cast_fu_404_p1;
        hidden_pos_load_17_cast_cast_reg_1073 <= hidden_pos_load_17_cast_cast_fu_400_p1;
        hidden_pos_load_18_cast_cast_reg_1068 <= hidden_pos_load_18_cast_cast_fu_396_p1;
        hidden_pos_load_19_cast_cast_reg_1063 <= hidden_pos_load_19_cast_cast_fu_392_p1;
        hidden_pos_load_1_cast_cast_reg_1153 <= hidden_pos_load_1_cast_cast_fu_464_p1;
        hidden_pos_load_20_cast_cast_reg_1058 <= hidden_pos_load_20_cast_cast_fu_388_p1;
        hidden_pos_load_21_cast_cast_reg_1053 <= hidden_pos_load_21_cast_cast_fu_384_p1;
        hidden_pos_load_22_cast_cast_reg_1048 <= hidden_pos_load_22_cast_cast_fu_380_p1;
        hidden_pos_load_23_cast_cast_reg_1043 <= hidden_pos_load_23_cast_cast_fu_376_p1;
        hidden_pos_load_24_cast_cast_reg_1038 <= hidden_pos_load_24_cast_cast_fu_372_p1;
        hidden_pos_load_25_cast_cast_reg_1033 <= hidden_pos_load_25_cast_cast_fu_368_p1;
        hidden_pos_load_26_cast_cast_reg_1028 <= hidden_pos_load_26_cast_cast_fu_364_p1;
        hidden_pos_load_27_cast_cast_reg_1023 <= hidden_pos_load_27_cast_cast_fu_360_p1;
        hidden_pos_load_28_cast_cast_reg_1018 <= hidden_pos_load_28_cast_cast_fu_356_p1;
        hidden_pos_load_29_cast_cast_reg_1013 <= hidden_pos_load_29_cast_cast_fu_352_p1;
        hidden_pos_load_2_cast_cast_reg_1148 <= hidden_pos_load_2_cast_cast_fu_460_p1;
        hidden_pos_load_3_cast_cast_reg_1143 <= hidden_pos_load_3_cast_cast_fu_456_p1;
        hidden_pos_load_4_cast_cast_reg_1138 <= hidden_pos_load_4_cast_cast_fu_452_p1;
        hidden_pos_load_5_cast_cast_reg_1133 <= hidden_pos_load_5_cast_cast_fu_448_p1;
        hidden_pos_load_6_cast_cast_reg_1128 <= hidden_pos_load_6_cast_cast_fu_444_p1;
        hidden_pos_load_7_cast_cast_reg_1123 <= hidden_pos_load_7_cast_cast_fu_440_p1;
        hidden_pos_load_8_cast_cast_reg_1118 <= hidden_pos_load_8_cast_cast_fu_436_p1;
        hidden_pos_load_9_cast_cast_reg_1113 <= hidden_pos_load_9_cast_cast_fu_432_p1;
        hidden_pos_load_cast_cast_reg_1158 <= hidden_pos_load_cast_cast_fu_468_p1;
        icmp_ln45_reg_1173 <= icmp_ln45_fu_484_p2;
        k_2_reg_1168 <= ap_sig_allocacmp_k_2;
        k_2_reg_1168_pp0_iter1_reg <= k_2_reg_1168;
        mul_ln48_29_reg_1397 <= mul_ln48_29_fu_804_p2;
        sext_ln45_1_cast_reg_1008 <= sext_ln45_1_cast_fu_348_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001))) begin
        add_ln48_26_reg_1412 <= grp_fu_988_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001))) begin
        add_ln48_29_reg_1417 <= add_ln48_29_fu_844_p2;
        mul_ln48_1_reg_1192 <= mul_ln48_1_fu_524_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001))) begin
        add_ln48_30_reg_1422 <= add_ln48_30_fu_862_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001))) begin
        add_ln48_3_reg_1222 <= add_ln48_3_fu_561_p2;
        mul_ln48_5_reg_1217 <= mul_ln48_5_fu_550_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln48_4_reg_1237 <= grp_fu_910_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001))) begin
        add_ln48_7_reg_1252 <= add_ln48_7_fu_612_p2;
        mul_ln48_9_reg_1247 <= mul_ln48_9_fu_588_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        add_ln48_8_reg_1267 <= grp_fu_923_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001))) begin
        mul_ln48_11_reg_1262 <= mul_ln48_11_fu_626_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001))) begin
        mul_ln48_15_reg_1292 <= mul_ln48_15_fu_664_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001))) begin
        mul_ln48_19_reg_1322 <= mul_ln48_19_fu_715_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001))) begin
        mul_ln48_23_reg_1352 <= mul_ln48_23_fu_753_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001))) begin
        mul_ln48_27_reg_1382 <= mul_ln48_27_fu_791_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        mul_ln48_3_reg_1207 <= mul_ln48_3_fu_537_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001))) begin
        mul_ln48_7_reg_1232 <= mul_ln48_7_fu_575_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001))) begin
        mul_ln48_reg_1187 <= mul_ln48_fu_515_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) 
    | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0_reg 
    == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0_reg 
    == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1)))) begin
        reg_344 <= m_axi_WEIGHTS_0_RDATA;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25) & (ap_enable_reg_pp0_iter0_reg 
    == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 
    == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10) 
    & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 
    == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)))) begin
        WEIGHTS_blk_n_R = m_axi_WEIGHTS_0_RVALID;
    end else begin
        WEIGHTS_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_subdone) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd1))) begin
        ap_condition_exit_pp0_iter0_stage6 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage6) & (ap_loop_exit_ready == 1'b1) & (1'b0 == ap_block_pp0_stage6_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_subdone) & (ap_enable_reg_pp0_iter0_reg == 1'b1))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        ap_sig_allocacmp_k_2 = 4'd0;
    end else begin
        ap_sig_allocacmp_k_2 = k_fu_124;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)))) begin
        grp_fu_897_ce = 1'b1;
    end else begin
        grp_fu_897_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001)))) begin
        grp_fu_903_ce = 1'b1;
    end else begin
        grp_fu_903_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001)))) begin
        grp_fu_910_ce = 1'b1;
    end else begin
        grp_fu_910_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001)))) begin
        grp_fu_916_ce = 1'b1;
    end else begin
        grp_fu_916_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001)))) begin
        grp_fu_923_ce = 1'b1;
    end else begin
        grp_fu_923_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001)))) begin
        grp_fu_929_ce = 1'b1;
    end else begin
        grp_fu_929_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001)))) begin
        grp_fu_936_ce = 1'b1;
    end else begin
        grp_fu_936_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == ap_block_pp0_stage18_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001)))) begin
        grp_fu_942_ce = 1'b1;
    end else begin
        grp_fu_942_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001)))) begin
        grp_fu_949_ce = 1'b1;
    end else begin
        grp_fu_949_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001)))) begin
        grp_fu_955_ce = 1'b1;
    end else begin
        grp_fu_955_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001)))) begin
        grp_fu_962_ce = 1'b1;
    end else begin
        grp_fu_962_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 == ap_block_pp0_stage25_11001)))) begin
        grp_fu_968_ce = 1'b1;
    end else begin
        grp_fu_968_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001)))) begin
        grp_fu_975_ce = 1'b1;
    end else begin
        grp_fu_975_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001)))) begin
        grp_fu_981_ce = 1'b1;
    end else begin
        grp_fu_981_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001)))) begin
        grp_fu_988_ce = 1'b1;
    end else begin
        grp_fu_988_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)))) begin
        grp_fu_994_ce = 1'b1;
    end else begin
        grp_fu_994_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)) | ((1'b1 == ap_CS_fsm_pp0_stage30) & (1'b0 == ap_block_pp0_stage30_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage29) & (1'b0 == ap_block_pp0_stage29_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage28) & (1'b0 == ap_block_pp0_stage28_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage27) & (1'b0 == ap_block_pp0_stage27_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage26) & (1'b0 == ap_block_pp0_stage26_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage25) & (1'b0 
    == ap_block_pp0_stage25_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage24) & (1'b0 == ap_block_pp0_stage24_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage23) & (1'b0 == ap_block_pp0_stage23_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage22) & (1'b0 == ap_block_pp0_stage22_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage21) & (1'b0 == ap_block_pp0_stage21_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage20) & (1'b0 == ap_block_pp0_stage20_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage19) & (1'b0 == ap_block_pp0_stage19_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage18) & (1'b0 == 
    ap_block_pp0_stage18_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage17) & (1'b0 == ap_block_pp0_stage17_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage16) & (1'b0 == ap_block_pp0_stage16_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage15) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage14) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage13) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage12) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage11) & (1'b0 == ap_block_pp0_stage11_11001) 
    & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage10) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage9) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage8) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage7) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage5) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage4) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage3) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0_reg 
    == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage2) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)) | ((1'b1 == ap_CS_fsm_pp0_stage31) & (1'b0 == ap_block_pp0_stage31_11001) & (ap_enable_reg_pp0_iter0_reg == 1'b1) & (icmp_ln45_reg_1173 == 1'd0)))) begin
        m_axi_WEIGHTS_0_RREADY = 1'b1;
    end else begin
        m_axi_WEIGHTS_0_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        out_pos_ce0_local = 1'b1;
    end else begin
        out_pos_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (1'b0 == ap_block_pp0_stage6_11001))) begin
        out_pos_we0_local = 1'b1;
    end else begin
        out_pos_we0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b1 == ap_condition_exit_pp0_iter0_stage6)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_pp0_stage16 : begin
            if ((1'b0 == ap_block_pp0_stage16_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage16;
            end
        end
        ap_ST_fsm_pp0_stage17 : begin
            if ((1'b0 == ap_block_pp0_stage17_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage17;
            end
        end
        ap_ST_fsm_pp0_stage18 : begin
            if ((1'b0 == ap_block_pp0_stage18_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage18;
            end
        end
        ap_ST_fsm_pp0_stage19 : begin
            if ((1'b0 == ap_block_pp0_stage19_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage19;
            end
        end
        ap_ST_fsm_pp0_stage20 : begin
            if ((1'b0 == ap_block_pp0_stage20_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage20;
            end
        end
        ap_ST_fsm_pp0_stage21 : begin
            if ((1'b0 == ap_block_pp0_stage21_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage21;
            end
        end
        ap_ST_fsm_pp0_stage22 : begin
            if ((1'b0 == ap_block_pp0_stage22_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage22;
            end
        end
        ap_ST_fsm_pp0_stage23 : begin
            if ((1'b0 == ap_block_pp0_stage23_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage23;
            end
        end
        ap_ST_fsm_pp0_stage24 : begin
            if ((1'b0 == ap_block_pp0_stage24_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage24;
            end
        end
        ap_ST_fsm_pp0_stage25 : begin
            if ((1'b0 == ap_block_pp0_stage25_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage25;
            end
        end
        ap_ST_fsm_pp0_stage26 : begin
            if ((1'b0 == ap_block_pp0_stage26_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage26;
            end
        end
        ap_ST_fsm_pp0_stage27 : begin
            if ((1'b0 == ap_block_pp0_stage27_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage27;
            end
        end
        ap_ST_fsm_pp0_stage28 : begin
            if ((1'b0 == ap_block_pp0_stage28_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage28;
            end
        end
        ap_ST_fsm_pp0_stage29 : begin
            if ((1'b0 == ap_block_pp0_stage29_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage29;
            end
        end
        ap_ST_fsm_pp0_stage30 : begin
            if ((1'b0 == ap_block_pp0_stage30_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage30;
            end
        end
        ap_ST_fsm_pp0_stage31 : begin
            if ((1'b0 == ap_block_pp0_stage31_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage31;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln45_fu_490_p2 = (ap_sig_allocacmp_k_2 + 4'd1);

assign add_ln48_10_fu_650_p2 = ($signed(sext_ln48_39_fu_647_p1) + $signed(sext_ln48_38_fu_644_p1));

assign add_ln48_13_fu_691_p2 = ($signed(sext_ln48_42_fu_688_p1) + $signed(sext_ln48_41_fu_685_p1));

assign add_ln48_14_fu_701_p2 = ($signed(sext_ln48_43_fu_697_p1) + $signed(sext_ln48_40_fu_682_p1));

assign add_ln48_15_fu_871_p2 = (add_ln48_14_reg_1312 + add_ln48_7_reg_1252);

assign add_ln48_18_fu_739_p2 = ($signed(sext_ln48_45_fu_736_p1) + $signed(sext_ln48_44_fu_733_p1));

assign add_ln48_21_fu_777_p2 = ($signed(sext_ln48_48_fu_774_p1) + $signed(sext_ln48_47_fu_771_p1));

assign add_ln48_22_fu_856_p2 = ($signed(sext_ln48_49_fu_853_p1) + $signed(sext_ln48_46_fu_850_p1));

assign add_ln48_25_fu_815_p2 = ($signed(sext_ln48_51_fu_812_p1) + $signed(sext_ln48_50_fu_809_p1));

assign add_ln48_28_fu_834_p2 = ($signed(sext_ln48_54_fu_831_p1) + $signed(sext_ln48_53_fu_828_p1));

assign add_ln48_29_fu_844_p2 = ($signed(sext_ln48_55_fu_840_p1) + $signed(sext_ln48_52_fu_825_p1));

assign add_ln48_30_fu_862_p2 = (add_ln48_29_reg_1417 + add_ln48_22_fu_856_p2);

assign add_ln48_3_fu_561_p2 = ($signed(sext_ln48_33_fu_558_p1) + $signed(sext_ln48_32_fu_555_p1));

assign add_ln48_6_fu_602_p2 = ($signed(sext_ln48_36_fu_599_p1) + $signed(sext_ln48_35_fu_596_p1));

assign add_ln48_7_fu_612_p2 = ($signed(sext_ln48_37_fu_608_p1) + $signed(sext_ln48_34_fu_593_p1));

assign add_ln48_fu_875_p2 = (add_ln48_30_reg_1422 + add_ln48_15_fu_871_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage16 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage17 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_pp0_stage18 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_pp0_stage19 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage20 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_pp0_stage21 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_pp0_stage22 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_pp0_stage23 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_pp0_stage24 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_pp0_stage25 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_pp0_stage26 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_pp0_stage27 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_pp0_stage28 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_pp0_stage29 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage30 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_pp0_stage31 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd9];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state33_pp0_stage0_iter1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_block_state33_pp0_stage0_iter1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((1'b1 == ap_block_state11_pp0_stage10_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((1'b1 == ap_block_state11_pp0_stage10_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((1'b1 == ap_block_state12_pp0_stage11_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((1'b1 == ap_block_state12_pp0_stage11_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((1'b1 == ap_block_state13_pp0_stage12_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((1'b1 == ap_block_state13_pp0_stage12_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((1'b1 == ap_block_state14_pp0_stage13_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((1'b1 == ap_block_state14_pp0_stage13_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((1'b1 == ap_block_state15_pp0_stage14_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((1'b1 == ap_block_state15_pp0_stage14_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((1'b1 == ap_block_state16_pp0_stage15_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((1'b1 == ap_block_state16_pp0_stage15_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage16 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage16_11001 = ((1'b1 == ap_block_state17_pp0_stage16_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage16_subdone = ((1'b1 == ap_block_state17_pp0_stage16_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage17 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage17_11001 = ((1'b1 == ap_block_state18_pp0_stage17_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage17_subdone = ((1'b1 == ap_block_state18_pp0_stage17_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage18 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage18_11001 = ((1'b1 == ap_block_state19_pp0_stage18_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage18_subdone = ((1'b1 == ap_block_state19_pp0_stage18_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage19 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage19_11001 = ((1'b1 == ap_block_state20_pp0_stage19_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage19_subdone = ((1'b1 == ap_block_state20_pp0_stage19_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((1'b1 == ap_block_state2_pp0_stage1_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((1'b1 == ap_block_state2_pp0_stage1_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage20 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage20_11001 = ((1'b1 == ap_block_state21_pp0_stage20_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage20_subdone = ((1'b1 == ap_block_state21_pp0_stage20_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage21 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage21_11001 = ((1'b1 == ap_block_state22_pp0_stage21_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage21_subdone = ((1'b1 == ap_block_state22_pp0_stage21_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage22 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage22_11001 = ((1'b1 == ap_block_state23_pp0_stage22_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage22_subdone = ((1'b1 == ap_block_state23_pp0_stage22_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage23 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage23_11001 = ((1'b1 == ap_block_state24_pp0_stage23_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage23_subdone = ((1'b1 == ap_block_state24_pp0_stage23_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage24 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage24_11001 = ((1'b1 == ap_block_state25_pp0_stage24_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage24_subdone = ((1'b1 == ap_block_state25_pp0_stage24_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage25 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage25_11001 = ((1'b1 == ap_block_state26_pp0_stage25_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage25_subdone = ((1'b1 == ap_block_state26_pp0_stage25_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage26 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage26_11001 = ((1'b1 == ap_block_state27_pp0_stage26_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage26_subdone = ((1'b1 == ap_block_state27_pp0_stage26_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage27 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage27_11001 = ((1'b1 == ap_block_state28_pp0_stage27_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage27_subdone = ((1'b1 == ap_block_state28_pp0_stage27_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage28 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage28_11001 = ((1'b1 == ap_block_state29_pp0_stage28_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage28_subdone = ((1'b1 == ap_block_state29_pp0_stage28_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage29 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage29_11001 = ((1'b1 == ap_block_state30_pp0_stage29_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage29_subdone = ((1'b1 == ap_block_state30_pp0_stage29_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((1'b1 == ap_block_state3_pp0_stage2_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((1'b1 == ap_block_state3_pp0_stage2_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage30 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage30_11001 = ((1'b1 == ap_block_state31_pp0_stage30_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage30_subdone = ((1'b1 == ap_block_state31_pp0_stage30_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage31 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage31_11001 = ((1'b1 == ap_block_state32_pp0_stage31_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage31_subdone = ((1'b1 == ap_block_state32_pp0_stage31_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((1'b1 == ap_block_state4_pp0_stage3_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((1'b1 == ap_block_state4_pp0_stage3_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((1'b1 == ap_block_state5_pp0_stage4_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((1'b1 == ap_block_state5_pp0_stage4_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((1'b1 == ap_block_state6_pp0_stage5_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((1'b1 == ap_block_state6_pp0_stage5_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((1'b1 == ap_block_state7_pp0_stage6_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((1'b1 == ap_block_state7_pp0_stage6_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((1'b1 == ap_block_state8_pp0_stage7_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((1'b1 == ap_block_state8_pp0_stage7_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((1'b1 == ap_block_state9_pp0_stage8_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((1'b1 == ap_block_state9_pp0_stage8_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((1'b1 == ap_block_state10_pp0_stage9_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((1'b1 == ap_block_state10_pp0_stage9_iter0) & (ap_enable_reg_pp0_iter0_reg == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage9_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp0_stage10_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp0_stage11_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage12_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp0_stage13_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp0_stage14_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state16_pp0_stage15_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state17_pp0_stage16_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state18_pp0_stage17_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state19_pp0_stage18_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state20_pp0_stage19_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state21_pp0_stage20_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state22_pp0_stage21_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state23_pp0_stage22_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state24_pp0_stage23_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state25_pp0_stage24_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state26_pp0_stage25_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state27_pp0_stage26_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state28_pp0_stage27_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state29_pp0_stage28_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state2_pp0_stage1_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state30_pp0_stage29_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state31_pp0_stage30_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state32_pp0_stage31_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state33_pp0_stage0_iter1 = (m_axi_WEIGHTS_0_RVALID == 1'b0);
end

always @ (*) begin
    ap_block_state3_pp0_stage2_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage3_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage4_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state6_pp0_stage5_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage6_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp0_stage7_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage8_iter0 = ((icmp_ln45_reg_1173 == 1'd0) & (m_axi_WEIGHTS_0_RVALID == 1'b0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage6;

assign ap_ready = ap_ready_sig;

assign grp_fu_897_p1 = hidden_load_cast_cast_reg_1163;

assign grp_fu_903_p1 = hidden_pos_load_2_cast_cast_reg_1148;

assign grp_fu_910_p1 = hidden_pos_load_4_cast_cast_reg_1138;

assign grp_fu_916_p1 = hidden_pos_load_6_cast_cast_reg_1128;

assign grp_fu_923_p1 = hidden_pos_load_8_cast_cast_reg_1118;

assign grp_fu_929_p1 = hidden_pos_load_10_cast_cast_reg_1108;

assign grp_fu_936_p1 = hidden_pos_load_12_cast_cast_reg_1098;

assign grp_fu_942_p1 = hidden_pos_load_14_cast_cast_reg_1088;

assign grp_fu_949_p1 = hidden_pos_load_16_cast_cast_reg_1078;

assign grp_fu_955_p1 = hidden_pos_load_18_cast_cast_reg_1068;

assign grp_fu_962_p1 = hidden_pos_load_20_cast_cast_reg_1058;

assign grp_fu_968_p1 = hidden_pos_load_22_cast_cast_reg_1048;

assign grp_fu_975_p1 = hidden_pos_load_24_cast_cast_reg_1038;

assign grp_fu_981_p1 = hidden_pos_load_26_cast_cast_reg_1028;

assign grp_fu_988_p1 = hidden_pos_load_28_cast_cast_reg_1018;

assign grp_fu_994_p1 = sext_ln45_1_cast_reg_1008;

assign hidden_load_cast_cast_fu_472_p1 = $signed(hidden_load_cast);

assign hidden_pos_load_10_cast_cast_fu_428_p1 = $signed(hidden_pos_load_10_cast);

assign hidden_pos_load_11_cast_cast_fu_424_p1 = $signed(hidden_pos_load_11_cast);

assign hidden_pos_load_12_cast_cast_fu_420_p1 = $signed(hidden_pos_load_12_cast);

assign hidden_pos_load_13_cast_cast_fu_416_p1 = $signed(hidden_pos_load_13_cast);

assign hidden_pos_load_14_cast_cast_fu_412_p1 = $signed(hidden_pos_load_14_cast);

assign hidden_pos_load_15_cast_cast_fu_408_p1 = $signed(hidden_pos_load_15_cast);

assign hidden_pos_load_16_cast_cast_fu_404_p1 = $signed(hidden_pos_load_16_cast);

assign hidden_pos_load_17_cast_cast_fu_400_p1 = $signed(hidden_pos_load_17_cast);

assign hidden_pos_load_18_cast_cast_fu_396_p1 = $signed(hidden_pos_load_18_cast);

assign hidden_pos_load_19_cast_cast_fu_392_p1 = $signed(hidden_pos_load_19_cast);

assign hidden_pos_load_1_cast_cast_fu_464_p1 = $signed(hidden_pos_load_1_cast);

assign hidden_pos_load_20_cast_cast_fu_388_p1 = $signed(hidden_pos_load_20_cast);

assign hidden_pos_load_21_cast_cast_fu_384_p1 = $signed(hidden_pos_load_21_cast);

assign hidden_pos_load_22_cast_cast_fu_380_p1 = $signed(hidden_pos_load_22_cast);

assign hidden_pos_load_23_cast_cast_fu_376_p1 = $signed(hidden_pos_load_23_cast);

assign hidden_pos_load_24_cast_cast_fu_372_p1 = $signed(hidden_pos_load_24_cast);

assign hidden_pos_load_25_cast_cast_fu_368_p1 = $signed(hidden_pos_load_25_cast);

assign hidden_pos_load_26_cast_cast_fu_364_p1 = $signed(hidden_pos_load_26_cast);

assign hidden_pos_load_27_cast_cast_fu_360_p1 = $signed(hidden_pos_load_27_cast);

assign hidden_pos_load_28_cast_cast_fu_356_p1 = $signed(hidden_pos_load_28_cast);

assign hidden_pos_load_29_cast_cast_fu_352_p1 = $signed(hidden_pos_load_29_cast);

assign hidden_pos_load_2_cast_cast_fu_460_p1 = $signed(hidden_pos_load_2_cast);

assign hidden_pos_load_3_cast_cast_fu_456_p1 = $signed(hidden_pos_load_3_cast);

assign hidden_pos_load_4_cast_cast_fu_452_p1 = $signed(hidden_pos_load_4_cast);

assign hidden_pos_load_5_cast_cast_fu_448_p1 = $signed(hidden_pos_load_5_cast);

assign hidden_pos_load_6_cast_cast_fu_444_p1 = $signed(hidden_pos_load_6_cast);

assign hidden_pos_load_7_cast_cast_fu_440_p1 = $signed(hidden_pos_load_7_cast);

assign hidden_pos_load_8_cast_cast_fu_436_p1 = $signed(hidden_pos_load_8_cast);

assign hidden_pos_load_9_cast_cast_fu_432_p1 = $signed(hidden_pos_load_9_cast);

assign hidden_pos_load_cast_cast_fu_468_p1 = $signed(hidden_pos_load_cast);

assign icmp_ln45_fu_484_p2 = ((ap_sig_allocacmp_k_2 == 4'd10) ? 1'b1 : 1'b0);

assign m_axi_WEIGHTS_0_ARADDR = 64'd0;

assign m_axi_WEIGHTS_0_ARBURST = 2'd0;

assign m_axi_WEIGHTS_0_ARCACHE = 4'd0;

assign m_axi_WEIGHTS_0_ARID = 1'd0;

assign m_axi_WEIGHTS_0_ARLEN = 32'd0;

assign m_axi_WEIGHTS_0_ARLOCK = 2'd0;

assign m_axi_WEIGHTS_0_ARPROT = 3'd0;

assign m_axi_WEIGHTS_0_ARQOS = 4'd0;

assign m_axi_WEIGHTS_0_ARREGION = 4'd0;

assign m_axi_WEIGHTS_0_ARSIZE = 3'd0;

assign m_axi_WEIGHTS_0_ARUSER = 1'd0;

assign m_axi_WEIGHTS_0_ARVALID = 1'b0;

assign m_axi_WEIGHTS_0_AWADDR = 64'd0;

assign m_axi_WEIGHTS_0_AWBURST = 2'd0;

assign m_axi_WEIGHTS_0_AWCACHE = 4'd0;

assign m_axi_WEIGHTS_0_AWID = 1'd0;

assign m_axi_WEIGHTS_0_AWLEN = 32'd0;

assign m_axi_WEIGHTS_0_AWLOCK = 2'd0;

assign m_axi_WEIGHTS_0_AWPROT = 3'd0;

assign m_axi_WEIGHTS_0_AWQOS = 4'd0;

assign m_axi_WEIGHTS_0_AWREGION = 4'd0;

assign m_axi_WEIGHTS_0_AWSIZE = 3'd0;

assign m_axi_WEIGHTS_0_AWUSER = 1'd0;

assign m_axi_WEIGHTS_0_AWVALID = 1'b0;

assign m_axi_WEIGHTS_0_BREADY = 1'b0;

assign m_axi_WEIGHTS_0_WDATA = 8'd0;

assign m_axi_WEIGHTS_0_WID = 1'd0;

assign m_axi_WEIGHTS_0_WLAST = 1'b0;

assign m_axi_WEIGHTS_0_WSTRB = 1'd0;

assign m_axi_WEIGHTS_0_WUSER = 1'd0;

assign m_axi_WEIGHTS_0_WVALID = 1'b0;

assign mul_ln48_11_fu_626_p1 = hidden_pos_load_11_cast_cast_reg_1103;

assign mul_ln48_13_fu_639_p1 = hidden_pos_load_13_cast_cast_reg_1093;

assign mul_ln48_15_fu_664_p1 = hidden_pos_load_15_cast_cast_reg_1083;

assign mul_ln48_17_fu_677_p1 = hidden_pos_load_17_cast_cast_reg_1073;

assign mul_ln48_19_fu_715_p1 = hidden_pos_load_19_cast_cast_reg_1063;

assign mul_ln48_1_fu_524_p1 = hidden_pos_load_1_cast_cast_reg_1153;

assign mul_ln48_21_fu_728_p1 = hidden_pos_load_21_cast_cast_reg_1053;

assign mul_ln48_23_fu_753_p1 = hidden_pos_load_23_cast_cast_reg_1043;

assign mul_ln48_25_fu_766_p1 = hidden_pos_load_25_cast_cast_reg_1033;

assign mul_ln48_27_fu_791_p1 = hidden_pos_load_27_cast_cast_reg_1023;

assign mul_ln48_29_fu_804_p1 = hidden_pos_load_29_cast_cast_reg_1013;

assign mul_ln48_3_fu_537_p1 = hidden_pos_load_3_cast_cast_reg_1143;

assign mul_ln48_5_fu_550_p1 = hidden_pos_load_5_cast_cast_reg_1133;

assign mul_ln48_7_fu_575_p1 = hidden_pos_load_7_cast_cast_reg_1123;

assign mul_ln48_9_fu_588_p1 = hidden_pos_load_9_cast_cast_reg_1113;

assign mul_ln48_fu_515_p1 = hidden_pos_load_cast_cast_reg_1158;

assign out_pos_address0 = zext_ln45_fu_867_p1;

assign out_pos_ce0 = out_pos_ce0_local;

assign out_pos_d0 = select_ln7_fu_888_p3;

assign out_pos_we0 = out_pos_we0_local;

assign select_ln7_fu_888_p3 = ((tmp_fu_880_p3[0:0] == 1'b1) ? 2'd3 : 2'd1);

assign sext_ln45_1_cast_fu_348_p1 = $signed(sext_ln45_1);

assign sext_ln48_31_fu_821_p0 = reg_344;

assign sext_ln48_32_fu_555_p1 = add_ln48_1_reg_1202;

assign sext_ln48_33_fu_558_p1 = grp_fu_903_p3;

assign sext_ln48_34_fu_593_p1 = $signed(add_ln48_3_reg_1222);

assign sext_ln48_35_fu_596_p1 = add_ln48_4_reg_1237;

assign sext_ln48_36_fu_599_p1 = grp_fu_916_p3;

assign sext_ln48_37_fu_608_p1 = $signed(add_ln48_6_fu_602_p2);

assign sext_ln48_38_fu_644_p1 = add_ln48_8_reg_1267;

assign sext_ln48_39_fu_647_p1 = grp_fu_929_p3;

assign sext_ln48_40_fu_682_p1 = $signed(add_ln48_10_reg_1282);

assign sext_ln48_41_fu_685_p1 = add_ln48_11_reg_1297;

assign sext_ln48_42_fu_688_p1 = grp_fu_942_p3;

assign sext_ln48_43_fu_697_p1 = $signed(add_ln48_13_fu_691_p2);

assign sext_ln48_44_fu_733_p1 = add_ln48_16_reg_1327;

assign sext_ln48_45_fu_736_p1 = grp_fu_955_p3;

assign sext_ln48_46_fu_850_p1 = $signed(add_ln48_18_reg_1342);

assign sext_ln48_47_fu_771_p1 = add_ln48_19_reg_1357;

assign sext_ln48_48_fu_774_p1 = grp_fu_968_p3;

assign sext_ln48_49_fu_853_p1 = $signed(add_ln48_21_reg_1372);

assign sext_ln48_50_fu_809_p1 = add_ln48_23_reg_1387;

assign sext_ln48_51_fu_812_p1 = grp_fu_981_p3;

assign sext_ln48_52_fu_825_p1 = $signed(add_ln48_25_reg_1402);

assign sext_ln48_53_fu_828_p1 = add_ln48_26_reg_1412;

assign sext_ln48_54_fu_831_p1 = grp_fu_994_p3;

assign sext_ln48_55_fu_840_p1 = $signed(add_ln48_28_fu_834_p2);

assign tmp_fu_880_p3 = add_ln48_fu_875_p2[32'd11];

assign zext_ln45_fu_867_p1 = k_2_reg_1168_pp0_iter1_reg;

endmodule //train_step_train_step_Pipeline_VITIS_LOOP_45_1
